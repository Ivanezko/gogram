// Code generated by TLParser; DO NOT EDIT. (c) @ivanezko

package telegram

import tl "github.com/ivanezko/gogram/internal/encoding/tl"

type AttachMenuBots interface {
	tl.Object
	ImplementsAttachMenuBots()
}

// Represents a list of [bot mini apps that can be launched from the attachment menu Â»](https://core.telegram.org/api/bots/attach)
type AttachMenuBotsObj struct {
	Hash  int64
	Bots  []*AttachMenuBot
	Users []User
}

func (*AttachMenuBotsObj) CRC() uint32 {
	return 0x3c4301c0
}

func (*AttachMenuBotsObj) ImplementsAttachMenuBots() {}

// The list of bot mini apps hasn't changed
type AttachMenuBotsNotModified struct{}

func (*AttachMenuBotsNotModified) CRC() uint32 {
	return 0xf1d88a5c
}

func (*AttachMenuBotsNotModified) ImplementsAttachMenuBots() {}

type BotApp interface {
	tl.Object
	ImplementsBotApp()
}

// Contains information about a [direct link Mini App](https://core.telegram.org/api/bots/webapps#direct-link-mini-apps).
type BotAppObj struct {
	ID          int64
	AccessHash  int64
	ShortName   string
	Title       string
	Description string
	Photo       Photo
	Document    Document `tl:"flag:0"`
	Hash        int64
}

func (*BotAppObj) CRC() uint32 {
	return 0x95fcd1d6
}

func (*BotAppObj) FlagIndex() int {
	return 0
}

func (*BotAppObj) ImplementsBotApp() {}

// Bot app info hasn't changed.
type BotAppNotModified struct{}

func (*BotAppNotModified) CRC() uint32 {
	return 0x5da674b7
}

func (*BotAppNotModified) ImplementsBotApp() {}

type BotCommandScope interface {
	tl.Object
	ImplementsBotCommandScope()
}

// The specified bot commands will be valid only for chat administrators, in all [groups and supergroups](https://core.telegram.org/api/channel).
type BotCommandScopeChatAdmins struct{}

func (*BotCommandScopeChatAdmins) CRC() uint32 {
	return 0xb9aa606a
}

func (*BotCommandScopeChatAdmins) ImplementsBotCommandScope() {}

// The specified bot commands will be valid in all [groups and supergroups](https://core.telegram.org/api/channel).
type BotCommandScopeChats struct{}

func (*BotCommandScopeChats) CRC() uint32 {
	return 0x6fe1a881
}

func (*BotCommandScopeChats) ImplementsBotCommandScope() {}

// The commands will be valid in all dialogs
type BotCommandScopeDefault struct{}

func (*BotCommandScopeDefault) CRC() uint32 {
	return 0x2f6cb2ab
}

func (*BotCommandScopeDefault) ImplementsBotCommandScope() {}

// The specified bot commands will be valid only in a specific dialog.
type BotCommandScopePeer struct {
	Peer InputPeer
}

func (*BotCommandScopePeer) CRC() uint32 {
	return 0xdb9d897d
}

func (*BotCommandScopePeer) ImplementsBotCommandScope() {}

// The specified bot commands will be valid for all admins of the specified [group or supergroup](https://core.telegram.org/api/channel).
type BotCommandScopePeerAdmins struct {
	Peer InputPeer
}

func (*BotCommandScopePeerAdmins) CRC() uint32 {
	return 0x3fd863d1
}

func (*BotCommandScopePeerAdmins) ImplementsBotCommandScope() {}

// The specified bot commands will be valid only for a specific user in the specified [group or supergroup](https://core.telegram.org/api/channel).
type BotCommandScopePeerUser struct {
	Peer   InputPeer
	UserID InputUser
}

func (*BotCommandScopePeerUser) CRC() uint32 {
	return 0xa1321f3
}

func (*BotCommandScopePeerUser) ImplementsBotCommandScope() {}

// The specified bot commands will only be valid in all private chats with users.
type BotCommandScopeUsers struct{}

func (*BotCommandScopeUsers) CRC() uint32 {
	return 0x3c4f04d8
}

func (*BotCommandScopeUsers) ImplementsBotCommandScope() {}

type BotInlineMessage interface {
	tl.Object
	ImplementsBotInlineMessage()
}

// Send whatever media is attached to the [botInlineMediaResult](https://core.telegram.org/constructor/botInlineMediaResult)
type BotInlineMessageMediaAuto struct {
	InvertMedia bool `tl:"flag:3,encoded_in_bitflags"`
	Message     string
	Entities    []MessageEntity `tl:"flag:1"`
	ReplyMarkup ReplyMarkup     `tl:"flag:2"`
}

func (*BotInlineMessageMediaAuto) CRC() uint32 {
	return 0x764cf810
}

func (*BotInlineMessageMediaAuto) FlagIndex() int {
	return 0
}

func (*BotInlineMessageMediaAuto) ImplementsBotInlineMessage() {}

// Send a contact
type BotInlineMessageMediaContact struct {
	PhoneNumber string
	FirstName   string
	LastName    string
	Vcard       string
	ReplyMarkup ReplyMarkup `tl:"flag:2"`
}

func (*BotInlineMessageMediaContact) CRC() uint32 {
	return 0x18d1cdc2
}

func (*BotInlineMessageMediaContact) FlagIndex() int {
	return 0
}

func (*BotInlineMessageMediaContact) ImplementsBotInlineMessage() {}

// Send a geolocation
type BotInlineMessageMediaGeo struct {
	Geo                         GeoPoint
	Heading                     int32       `tl:"flag:0"`
	Period                      int32       `tl:"flag:1"`
	ProximityNotificationRadius int32       `tl:"flag:3"`
	ReplyMarkup                 ReplyMarkup `tl:"flag:2"`
}

func (*BotInlineMessageMediaGeo) CRC() uint32 {
	return 0x51846fd
}

func (*BotInlineMessageMediaGeo) FlagIndex() int {
	return 0
}

func (*BotInlineMessageMediaGeo) ImplementsBotInlineMessage() {}

// Send an invoice
type BotInlineMessageMediaInvoice struct {
	ShippingAddressRequested bool `tl:"flag:1,encoded_in_bitflags"`
	Test                     bool `tl:"flag:3,encoded_in_bitflags"`
	Title                    string
	Description              string
	Photo                    WebDocument `tl:"flag:0"`
	Currency                 string
	TotalAmount              int64
	ReplyMarkup              ReplyMarkup `tl:"flag:2"`
}

func (*BotInlineMessageMediaInvoice) CRC() uint32 {
	return 0x354a9b09
}

func (*BotInlineMessageMediaInvoice) FlagIndex() int {
	return 0
}

func (*BotInlineMessageMediaInvoice) ImplementsBotInlineMessage() {}

// Send a venue
type BotInlineMessageMediaVenue struct {
	Geo         GeoPoint
	Title       string
	Address     string
	Provider    string
	VenueID     string
	VenueType   string
	ReplyMarkup ReplyMarkup `tl:"flag:2"`
}

func (*BotInlineMessageMediaVenue) CRC() uint32 {
	return 0x8a86659c
}

func (*BotInlineMessageMediaVenue) FlagIndex() int {
	return 0
}

func (*BotInlineMessageMediaVenue) ImplementsBotInlineMessage() {}

// Specifies options that must be used to generate the link preview for the message, or even a standalone link preview without an attached message.
type BotInlineMessageMediaWebPage struct {
	InvertMedia     bool `tl:"flag:3,encoded_in_bitflags"`
	ForceLargeMedia bool `tl:"flag:4,encoded_in_bitflags"`
	ForceSmallMedia bool `tl:"flag:5,encoded_in_bitflags"`
	Manual          bool `tl:"flag:7,encoded_in_bitflags"`
	Safe            bool `tl:"flag:8,encoded_in_bitflags"`
	Message         string
	Entities        []MessageEntity `tl:"flag:1"`
	URL             string
	ReplyMarkup     ReplyMarkup `tl:"flag:2"`
}

func (*BotInlineMessageMediaWebPage) CRC() uint32 {
	return 0x809ad9a6
}

func (*BotInlineMessageMediaWebPage) FlagIndex() int {
	return 0
}

func (*BotInlineMessageMediaWebPage) ImplementsBotInlineMessage() {}

// Send a simple text message
type BotInlineMessageText struct {
	NoWebpage   bool `tl:"flag:0,encoded_in_bitflags"`
	InvertMedia bool `tl:"flag:3,encoded_in_bitflags"`
	Message     string
	Entities    []MessageEntity `tl:"flag:1"`
	ReplyMarkup ReplyMarkup     `tl:"flag:2"`
}

func (*BotInlineMessageText) CRC() uint32 {
	return 0x8c7f65e2
}

func (*BotInlineMessageText) FlagIndex() int {
	return 0
}

func (*BotInlineMessageText) ImplementsBotInlineMessage() {}

type BotInlineResult interface {
	tl.Object
	ImplementsBotInlineResult()
}

// Media result
type BotInlineMediaResult struct {
	ID          string
	Type        string
	Photo       Photo    `tl:"flag:0"`
	Document    Document `tl:"flag:1"`
	Title       string   `tl:"flag:2"`
	Description string   `tl:"flag:3"`
	SendMessage BotInlineMessage
}

func (*BotInlineMediaResult) CRC() uint32 {
	return 0x17db940b
}

func (*BotInlineMediaResult) FlagIndex() int {
	return 0
}

func (*BotInlineMediaResult) ImplementsBotInlineResult() {}

// Generic result
type BotInlineResultObj struct {
	ID          string
	Type        string
	Title       string      `tl:"flag:1"`
	Description string      `tl:"flag:2"`
	URL         string      `tl:"flag:3"`
	Thumb       WebDocument `tl:"flag:4"`
	Content     WebDocument `tl:"flag:5"`
	SendMessage BotInlineMessage
}

func (*BotInlineResultObj) CRC() uint32 {
	return 0x11965f3a
}

func (*BotInlineResultObj) FlagIndex() int {
	return 0
}

func (*BotInlineResultObj) ImplementsBotInlineResult() {}

type BotMenuButton interface {
	tl.Object
	ImplementsBotMenuButton()
}

// [Bot menu button](https://core.telegram.org/api/bots/menu) that opens a [web app](https://core.telegram.org/api/bots/webapps) when clicked.
type BotMenuButtonObj struct {
	Text string
	URL  string
}

func (*BotMenuButtonObj) CRC() uint32 {
	return 0xc7b57ce6
}

func (*BotMenuButtonObj) ImplementsBotMenuButton() {}

// [Bot menu button](https://core.telegram.org/api/bots/menu) that opens the bot command list when clicked.
type BotMenuButtonCommands struct{}

func (*BotMenuButtonCommands) CRC() uint32 {
	return 0x4258c205
}

func (*BotMenuButtonCommands) ImplementsBotMenuButton() {}

// Placeholder [bot menu button](https://core.telegram.org/api/bots/menu) never returned to users: see [the docs for more info](https://core.telegram.org/api/bots/menu).
type BotMenuButtonDefault struct{}

func (*BotMenuButtonDefault) CRC() uint32 {
	return 0x7533a588
}

func (*BotMenuButtonDefault) ImplementsBotMenuButton() {}

type BroadcastRevenueTransaction interface {
	tl.Object
	ImplementsBroadcastRevenueTransaction()
}
type BroadcastRevenueTransactionProceeds struct {
	Amount   int64
	FromDate int32
	ToDate   int32
}

func (*BroadcastRevenueTransactionProceeds) CRC() uint32 {
	return 0x557e2cc4
}

func (*BroadcastRevenueTransactionProceeds) ImplementsBroadcastRevenueTransaction() {}

type BroadcastRevenueTransactionRefund struct {
	Amount   int64
	Date     int32
	Provider string
}

func (*BroadcastRevenueTransactionRefund) CRC() uint32 {
	return 0x42d30d2e
}

func (*BroadcastRevenueTransactionRefund) ImplementsBroadcastRevenueTransaction() {}

type BroadcastRevenueTransactionWithdrawal struct {
	Pending         bool `tl:"flag:0,encoded_in_bitflags"`
	Failed          bool `tl:"flag:2,encoded_in_bitflags"`
	Amount          int64
	Date            int32
	Provider        string
	TransactionDate int32  `tl:"flag:1"`
	TransactionURL  string `tl:"flag:1"`
}

func (*BroadcastRevenueTransactionWithdrawal) CRC() uint32 {
	return 0x5a590978
}

func (*BroadcastRevenueTransactionWithdrawal) FlagIndex() int {
	return 0
}

func (*BroadcastRevenueTransactionWithdrawal) ImplementsBroadcastRevenueTransaction() {}

type BusinessAwayMessageSchedule interface {
	tl.Object
	ImplementsBusinessAwayMessageSchedule()
}
type BusinessAwayMessageScheduleAlways struct{}

func (*BusinessAwayMessageScheduleAlways) CRC() uint32 {
	return 0xc9b9e2b9
}

func (*BusinessAwayMessageScheduleAlways) ImplementsBusinessAwayMessageSchedule() {}

type BusinessAwayMessageScheduleCustom struct {
	StartDate int32
	EndDate   int32
}

func (*BusinessAwayMessageScheduleCustom) CRC() uint32 {
	return 0xcc4d9ecc
}

func (*BusinessAwayMessageScheduleCustom) ImplementsBusinessAwayMessageSchedule() {}

type BusinessAwayMessageScheduleOutsideWorkHours struct{}

func (*BusinessAwayMessageScheduleOutsideWorkHours) CRC() uint32 {
	return 0xc3f2f501
}

func (*BusinessAwayMessageScheduleOutsideWorkHours) ImplementsBusinessAwayMessageSchedule() {}

type ChannelAdminLogEventAction interface {
	tl.Object
	ImplementsChannelAdminLogEventAction()
}

// The description was changed
type ChannelAdminLogEventActionChangeAbout struct {
	PrevValue string
	NewValue  string
}

func (*ChannelAdminLogEventActionChangeAbout) CRC() uint32 {
	return 0x55188a2e
}

func (*ChannelAdminLogEventActionChangeAbout) ImplementsChannelAdminLogEventAction() {}

// The set of allowed [message reactions Â»](https://core.telegram.org/api/reactions) for this channel has changed
type ChannelAdminLogEventActionChangeAvailableReactions struct {
	PrevValue ChatReactions
	NewValue  ChatReactions
}

func (*ChannelAdminLogEventActionChangeAvailableReactions) CRC() uint32 {
	return 0xbe4e0ef8
}

func (*ChannelAdminLogEventActionChangeAvailableReactions) ImplementsChannelAdminLogEventAction() {}

// The [emoji status](https://core.telegram.org/api/emoji-status) was changed
type ChannelAdminLogEventActionChangeEmojiStatus struct {
	PrevValue EmojiStatus
	NewValue  EmojiStatus
}

func (*ChannelAdminLogEventActionChangeEmojiStatus) CRC() uint32 {
	return 0x3ea9feb1
}

func (*ChannelAdminLogEventActionChangeEmojiStatus) ImplementsChannelAdminLogEventAction() {}

type ChannelAdminLogEventActionChangeEmojiStickerSet struct {
	PrevStickerset InputStickerSet
	NewStickerset  InputStickerSet
}

func (*ChannelAdminLogEventActionChangeEmojiStickerSet) CRC() uint32 {
	return 0x46d840ab
}

func (*ChannelAdminLogEventActionChangeEmojiStickerSet) ImplementsChannelAdminLogEventAction() {}

// The Time-To-Live of messages in this chat was changed
type ChannelAdminLogEventActionChangeHistoryTtl struct {
	PrevValue int32
	NewValue  int32
}

func (*ChannelAdminLogEventActionChangeHistoryTtl) CRC() uint32 {
	return 0x6e941a38
}

func (*ChannelAdminLogEventActionChangeHistoryTtl) ImplementsChannelAdminLogEventAction() {}

// The linked chat was changed
type ChannelAdminLogEventActionChangeLinkedChat struct {
	PrevValue int64
	NewValue  int64
}

func (*ChannelAdminLogEventActionChangeLinkedChat) CRC() uint32 {
	return 0x50c7ac8
}

func (*ChannelAdminLogEventActionChangeLinkedChat) ImplementsChannelAdminLogEventAction() {}

// The geogroup location was changed
type ChannelAdminLogEventActionChangeLocation struct {
	PrevValue ChannelLocation
	NewValue  ChannelLocation
}

func (*ChannelAdminLogEventActionChangeLocation) CRC() uint32 {
	return 0xe6b76ae
}

func (*ChannelAdminLogEventActionChangeLocation) ImplementsChannelAdminLogEventAction() {}

// The [message accent color](https://core.telegram.org/api/colors) was changed
type ChannelAdminLogEventActionChangePeerColor struct {
	PrevValue *PeerColor
	NewValue  *PeerColor
}

func (*ChannelAdminLogEventActionChangePeerColor) CRC() uint32 {
	return 0x5796e780
}

func (*ChannelAdminLogEventActionChangePeerColor) ImplementsChannelAdminLogEventAction() {}

// The channel/supergroup's picture was changed
type ChannelAdminLogEventActionChangePhoto struct {
	PrevPhoto Photo
	NewPhoto  Photo
}

func (*ChannelAdminLogEventActionChangePhoto) CRC() uint32 {
	return 0x434bd2af
}

func (*ChannelAdminLogEventActionChangePhoto) ImplementsChannelAdminLogEventAction() {}

// The [profile accent color](https://core.telegram.org/api/colors) was changed
type ChannelAdminLogEventActionChangeProfilePeerColor struct {
	PrevValue *PeerColor
	NewValue  *PeerColor
}

func (*ChannelAdminLogEventActionChangeProfilePeerColor) CRC() uint32 {
	return 0x5e477b25
}

func (*ChannelAdminLogEventActionChangeProfilePeerColor) ImplementsChannelAdminLogEventAction() {}

// The supergroup's stickerset was changed
type ChannelAdminLogEventActionChangeStickerSet struct {
	PrevStickerset InputStickerSet
	NewStickerset  InputStickerSet
}

func (*ChannelAdminLogEventActionChangeStickerSet) CRC() uint32 {
	return 0xb1c3caa7
}

func (*ChannelAdminLogEventActionChangeStickerSet) ImplementsChannelAdminLogEventAction() {}

// Channel/supergroup title was changed
type ChannelAdminLogEventActionChangeTitle struct {
	PrevValue string
	NewValue  string
}

func (*ChannelAdminLogEventActionChangeTitle) CRC() uint32 {
	return 0xe6dfb825
}

func (*ChannelAdminLogEventActionChangeTitle) ImplementsChannelAdminLogEventAction() {}

// Channel/supergroup username was changed
type ChannelAdminLogEventActionChangeUsername struct {
	PrevValue string
	NewValue  string
}

func (*ChannelAdminLogEventActionChangeUsername) CRC() uint32 {
	return 0x6a4afc38
}

func (*ChannelAdminLogEventActionChangeUsername) ImplementsChannelAdminLogEventAction() {}

// The list of usernames associated with the channel was changed
type ChannelAdminLogEventActionChangeUsernames struct {
	PrevValue []string
	NewValue  []string
}

func (*ChannelAdminLogEventActionChangeUsernames) CRC() uint32 {
	return 0xf04fb3a9
}

func (*ChannelAdminLogEventActionChangeUsernames) ImplementsChannelAdminLogEventAction() {}

// The [wallpaper](https://core.telegram.org/api/wallpapers) was changed
type ChannelAdminLogEventActionChangeWallpaper struct {
	PrevValue WallPaper
	NewValue  WallPaper
}

func (*ChannelAdminLogEventActionChangeWallpaper) CRC() uint32 {
	return 0x31bb5d52
}

func (*ChannelAdminLogEventActionChangeWallpaper) ImplementsChannelAdminLogEventAction() {}

// A [forum topic](https://core.telegram.org/api/forum#forum-topics) was created
type ChannelAdminLogEventActionCreateTopic struct {
	Topic ForumTopic
}

func (*ChannelAdminLogEventActionCreateTopic) CRC() uint32 {
	return 0x58707d28
}

func (*ChannelAdminLogEventActionCreateTopic) ImplementsChannelAdminLogEventAction() {}

// The default banned rights were modified
type ChannelAdminLogEventActionDefaultBannedRights struct {
	PrevBannedRights *ChatBannedRights
	NewBannedRights  *ChatBannedRights
}

func (*ChannelAdminLogEventActionDefaultBannedRights) CRC() uint32 {
	return 0x2df5fc0a
}

func (*ChannelAdminLogEventActionDefaultBannedRights) ImplementsChannelAdminLogEventAction() {}

// A message was deleted
type ChannelAdminLogEventActionDeleteMessage struct {
	Message Message
}

func (*ChannelAdminLogEventActionDeleteMessage) CRC() uint32 {
	return 0x42e047bb
}

func (*ChannelAdminLogEventActionDeleteMessage) ImplementsChannelAdminLogEventAction() {}

// A [forum topic](https://core.telegram.org/api/forum#forum-topics) was deleted
type ChannelAdminLogEventActionDeleteTopic struct {
	Topic ForumTopic
}

func (*ChannelAdminLogEventActionDeleteTopic) CRC() uint32 {
	return 0xae168909
}

func (*ChannelAdminLogEventActionDeleteTopic) ImplementsChannelAdminLogEventAction() {}

// A group call was terminated
type ChannelAdminLogEventActionDiscardGroupCall struct {
	Call *InputGroupCall
}

func (*ChannelAdminLogEventActionDiscardGroupCall) CRC() uint32 {
	return 0xdb9f9140
}

func (*ChannelAdminLogEventActionDiscardGroupCall) ImplementsChannelAdminLogEventAction() {}

// A message was edited
type ChannelAdminLogEventActionEditMessage struct {
	PrevMessage Message
	NewMessage  Message
}

func (*ChannelAdminLogEventActionEditMessage) CRC() uint32 {
	return 0x709b2405
}

func (*ChannelAdminLogEventActionEditMessage) ImplementsChannelAdminLogEventAction() {}

// A [forum topic](https://core.telegram.org/api/forum#forum-topics) was edited
type ChannelAdminLogEventActionEditTopic struct {
	PrevTopic ForumTopic
	NewTopic  ForumTopic
}

func (*ChannelAdminLogEventActionEditTopic) CRC() uint32 {
	return 0xf06fe208
}

func (*ChannelAdminLogEventActionEditTopic) ImplementsChannelAdminLogEventAction() {}

// A chat invite was deleted
type ChannelAdminLogEventActionExportedInviteDelete struct {
	Invite ExportedChatInvite
}

func (*ChannelAdminLogEventActionExportedInviteDelete) CRC() uint32 {
	return 0x5a50fca4
}

func (*ChannelAdminLogEventActionExportedInviteDelete) ImplementsChannelAdminLogEventAction() {}

// A chat invite was edited
type ChannelAdminLogEventActionExportedInviteEdit struct {
	PrevInvite ExportedChatInvite
	NewInvite  ExportedChatInvite
}

func (*ChannelAdminLogEventActionExportedInviteEdit) CRC() uint32 {
	return 0xe90ebb59
}

func (*ChannelAdminLogEventActionExportedInviteEdit) ImplementsChannelAdminLogEventAction() {}

// A specific invite link was revoked
type ChannelAdminLogEventActionExportedInviteRevoke struct {
	Invite ExportedChatInvite
}

func (*ChannelAdminLogEventActionExportedInviteRevoke) CRC() uint32 {
	return 0x410a134e
}

func (*ChannelAdminLogEventActionExportedInviteRevoke) ImplementsChannelAdminLogEventAction() {}

// A user was invited to the group
type ChannelAdminLogEventActionParticipantInvite struct {
	Participant ChannelParticipant
}

func (*ChannelAdminLogEventActionParticipantInvite) CRC() uint32 {
	return 0xe31c34d8
}

func (*ChannelAdminLogEventActionParticipantInvite) ImplementsChannelAdminLogEventAction() {}

// A user has joined the group (in the case of big groups, info of the user that has joined isn't shown)
type ChannelAdminLogEventActionParticipantJoin struct{}

func (*ChannelAdminLogEventActionParticipantJoin) CRC() uint32 {
	return 0x183040d3
}

func (*ChannelAdminLogEventActionParticipantJoin) ImplementsChannelAdminLogEventAction() {}

// A user joined the [supergroup/channel](https://core.telegram.org/api/channel) using a specific invite link
type ChannelAdminLogEventActionParticipantJoinByInvite struct {
	ViaChatlist bool `tl:"flag:0,encoded_in_bitflags"`
	Invite      ExportedChatInvite
}

func (*ChannelAdminLogEventActionParticipantJoinByInvite) CRC() uint32 {
	return 0xfe9fc158
}

func (*ChannelAdminLogEventActionParticipantJoinByInvite) FlagIndex() int {
	return 0
}

func (*ChannelAdminLogEventActionParticipantJoinByInvite) ImplementsChannelAdminLogEventAction() {}

// A new member was accepted to the chat by an admin
type ChannelAdminLogEventActionParticipantJoinByRequest struct {
	Invite     ExportedChatInvite
	ApprovedBy int64
}

func (*ChannelAdminLogEventActionParticipantJoinByRequest) CRC() uint32 {
	return 0xafb6144a
}

func (*ChannelAdminLogEventActionParticipantJoinByRequest) ImplementsChannelAdminLogEventAction() {}

// A user left the channel/supergroup (in the case of big groups, info of the user that has joined isn't shown)
type ChannelAdminLogEventActionParticipantLeave struct{}

func (*ChannelAdminLogEventActionParticipantLeave) CRC() uint32 {
	return 0xf89777f2
}

func (*ChannelAdminLogEventActionParticipantLeave) ImplementsChannelAdminLogEventAction() {}

// A group call participant was muted
type ChannelAdminLogEventActionParticipantMute struct {
	Participant *GroupCallParticipant
}

func (*ChannelAdminLogEventActionParticipantMute) CRC() uint32 {
	return 0xf92424d2
}

func (*ChannelAdminLogEventActionParticipantMute) ImplementsChannelAdminLogEventAction() {}

// The admin [rights](https://core.telegram.org/api/rights) of a user were changed
type ChannelAdminLogEventActionParticipantToggleAdmin struct {
	PrevParticipant ChannelParticipant
	NewParticipant  ChannelParticipant
}

func (*ChannelAdminLogEventActionParticipantToggleAdmin) CRC() uint32 {
	return 0xd5676710
}

func (*ChannelAdminLogEventActionParticipantToggleAdmin) ImplementsChannelAdminLogEventAction() {}

// The banned [rights](https://core.telegram.org/api/rights) of a user were changed
type ChannelAdminLogEventActionParticipantToggleBan struct {
	PrevParticipant ChannelParticipant
	NewParticipant  ChannelParticipant
}

func (*ChannelAdminLogEventActionParticipantToggleBan) CRC() uint32 {
	return 0xe6d83d7e
}

func (*ChannelAdminLogEventActionParticipantToggleBan) ImplementsChannelAdminLogEventAction() {}

// A group call participant was unmuted
type ChannelAdminLogEventActionParticipantUnmute struct {
	Participant *GroupCallParticipant
}

func (*ChannelAdminLogEventActionParticipantUnmute) CRC() uint32 {
	return 0xe64429c0
}

func (*ChannelAdminLogEventActionParticipantUnmute) ImplementsChannelAdminLogEventAction() {}

// channelAdminLogEvent.user_id has set the volume of participant.peer to participant.volume
type ChannelAdminLogEventActionParticipantVolume struct {
	Participant *GroupCallParticipant
}

func (*ChannelAdminLogEventActionParticipantVolume) CRC() uint32 {
	return 0x3e7f6847
}

func (*ChannelAdminLogEventActionParticipantVolume) ImplementsChannelAdminLogEventAction() {}

// A [forum topic](https://core.telegram.org/api/forum#forum-topics) was pinned or unpinned
type ChannelAdminLogEventActionPinTopic struct {
	PrevTopic ForumTopic `tl:"flag:0"`
	NewTopic  ForumTopic `tl:"flag:1"`
}

func (*ChannelAdminLogEventActionPinTopic) CRC() uint32 {
	return 0x5d8d353b
}

func (*ChannelAdminLogEventActionPinTopic) FlagIndex() int {
	return 0
}

func (*ChannelAdminLogEventActionPinTopic) ImplementsChannelAdminLogEventAction() {}

// A message was posted in a channel
type ChannelAdminLogEventActionSendMessage struct {
	Message Message
}

func (*ChannelAdminLogEventActionSendMessage) CRC() uint32 {
	return 0x278f2868
}

func (*ChannelAdminLogEventActionSendMessage) ImplementsChannelAdminLogEventAction() {}

// A group call was started
type ChannelAdminLogEventActionStartGroupCall struct {
	Call *InputGroupCall
}

func (*ChannelAdminLogEventActionStartGroupCall) CRC() uint32 {
	return 0x23209745
}

func (*ChannelAdminLogEventActionStartGroupCall) ImplementsChannelAdminLogEventAction() {}

// A poll was stopped
type ChannelAdminLogEventActionStopPoll struct {
	Message Message
}

func (*ChannelAdminLogEventActionStopPoll) CRC() uint32 {
	return 0x8f079643
}

func (*ChannelAdminLogEventActionStopPoll) ImplementsChannelAdminLogEventAction() {}

// [Native antispam](https://core.telegram.org/api/antispam) functionality was enabled or disabled.
type ChannelAdminLogEventActionToggleAntiSpam struct {
	NewValue bool
}

func (*ChannelAdminLogEventActionToggleAntiSpam) CRC() uint32 {
	return 0x64f36dfc
}

func (*ChannelAdminLogEventActionToggleAntiSpam) ImplementsChannelAdminLogEventAction() {}

// [Forum](https://core.telegram.org/api/forum) functionality was enabled or disabled.
type ChannelAdminLogEventActionToggleForum struct {
	NewValue bool
}

func (*ChannelAdminLogEventActionToggleForum) CRC() uint32 {
	return 0x2cc6383
}

func (*ChannelAdminLogEventActionToggleForum) ImplementsChannelAdminLogEventAction() {}

// Group call settings were changed
type ChannelAdminLogEventActionToggleGroupCallSetting struct {
	JoinMuted bool
}

func (*ChannelAdminLogEventActionToggleGroupCallSetting) CRC() uint32 {
	return 0x56d6a247
}

func (*ChannelAdminLogEventActionToggleGroupCallSetting) ImplementsChannelAdminLogEventAction() {}

// Invites were enabled/disabled
type ChannelAdminLogEventActionToggleInvites struct {
	NewValue bool
}

func (*ChannelAdminLogEventActionToggleInvites) CRC() uint32 {
	return 0x1b7907ae
}

func (*ChannelAdminLogEventActionToggleInvites) ImplementsChannelAdminLogEventAction() {}

// Forwards were enabled or disabled
type ChannelAdminLogEventActionToggleNoForwards struct {
	NewValue bool
}

func (*ChannelAdminLogEventActionToggleNoForwards) CRC() uint32 {
	return 0xcb2ac766
}

func (*ChannelAdminLogEventActionToggleNoForwards) ImplementsChannelAdminLogEventAction() {}

// The hidden prehistory setting was [changed](https://core.telegram.org/method/channels.togglePreHistoryHidden)
type ChannelAdminLogEventActionTogglePreHistoryHidden struct {
	NewValue bool
}

func (*ChannelAdminLogEventActionTogglePreHistoryHidden) CRC() uint32 {
	return 0x5f5c95f1
}

func (*ChannelAdminLogEventActionTogglePreHistoryHidden) ImplementsChannelAdminLogEventAction() {}

// Channel signatures were enabled/disabled
type ChannelAdminLogEventActionToggleSignatures struct {
	NewValue bool
}

func (*ChannelAdminLogEventActionToggleSignatures) CRC() uint32 {
	return 0x26ae0971
}

func (*ChannelAdminLogEventActionToggleSignatures) ImplementsChannelAdminLogEventAction() {}

// [Slow mode setting for supergroups was changed](https://core.telegram.org/method/channels.toggleSlowMode)
type ChannelAdminLogEventActionToggleSlowMode struct {
	PrevValue int32
	NewValue  int32
}

func (*ChannelAdminLogEventActionToggleSlowMode) CRC() uint32 {
	return 0x53909779
}

func (*ChannelAdminLogEventActionToggleSlowMode) ImplementsChannelAdminLogEventAction() {}

// A message was pinned
type ChannelAdminLogEventActionUpdatePinned struct {
	Message Message
}

func (*ChannelAdminLogEventActionUpdatePinned) CRC() uint32 {
	return 0xe9e82c18
}

func (*ChannelAdminLogEventActionUpdatePinned) ImplementsChannelAdminLogEventAction() {}

type ChannelLocation interface {
	tl.Object
	ImplementsChannelLocation()
}

// Geographical location of supergroup (geogroups)
type ChannelLocationObj struct {
	GeoPoint GeoPoint
	Address  string
}

func (*ChannelLocationObj) CRC() uint32 {
	return 0x209b82db
}

func (*ChannelLocationObj) ImplementsChannelLocation() {}

// No location (normal supergroup)
type ChannelLocationEmpty struct{}

func (*ChannelLocationEmpty) CRC() uint32 {
	return 0xbfb5ad8b
}

func (*ChannelLocationEmpty) ImplementsChannelLocation() {}

type ChannelMessagesFilter interface {
	tl.Object
	ImplementsChannelMessagesFilter()
}

// Filter for getting only certain types of channel messages
type ChannelMessagesFilterObj struct {
	ExcludeNewMessages bool `tl:"flag:1,encoded_in_bitflags"`
	Ranges             []*MessageRange
}

func (*ChannelMessagesFilterObj) CRC() uint32 {
	return 0xcd77d957
}

func (*ChannelMessagesFilterObj) FlagIndex() int {
	return 0
}

func (*ChannelMessagesFilterObj) ImplementsChannelMessagesFilter() {}

// No filter
type ChannelMessagesFilterEmpty struct{}

func (*ChannelMessagesFilterEmpty) CRC() uint32 {
	return 0x94d42ee7
}

func (*ChannelMessagesFilterEmpty) ImplementsChannelMessagesFilter() {}

type ChannelParticipant interface {
	tl.Object
	ImplementsChannelParticipant()
}

// Channel/supergroup participant
type ChannelParticipantObj struct {
	UserID int64
	Date   int32
}

func (*ChannelParticipantObj) CRC() uint32 {
	return 0xc00c07c0
}

func (*ChannelParticipantObj) ImplementsChannelParticipant() {}

// Admin
type ChannelParticipantAdmin struct {
	CanEdit     bool `tl:"flag:0,encoded_in_bitflags"`
	Self        bool `tl:"flag:1,encoded_in_bitflags"`
	UserID      int64
	InviterID   int64 `tl:"flag:1"`
	PromotedBy  int64
	Date        int32
	AdminRights *ChatAdminRights
	Rank        string `tl:"flag:2"`
}

func (*ChannelParticipantAdmin) CRC() uint32 {
	return 0x34c3bb53
}

func (*ChannelParticipantAdmin) FlagIndex() int {
	return 0
}

func (*ChannelParticipantAdmin) ImplementsChannelParticipant() {}

// Banned/kicked user
type ChannelParticipantBanned struct {
	Left         bool `tl:"flag:0,encoded_in_bitflags"`
	Peer         Peer
	KickedBy     int64
	Date         int32
	BannedRights *ChatBannedRights
}

func (*ChannelParticipantBanned) CRC() uint32 {
	return 0x6df8014e
}

func (*ChannelParticipantBanned) FlagIndex() int {
	return 0
}

func (*ChannelParticipantBanned) ImplementsChannelParticipant() {}

// Channel/supergroup creator
type ChannelParticipantCreator struct {
	UserID      int64
	AdminRights *ChatAdminRights
	Rank        string `tl:"flag:0"`
}

func (*ChannelParticipantCreator) CRC() uint32 {
	return 0x2fe601d3
}

func (*ChannelParticipantCreator) FlagIndex() int {
	return 0
}

func (*ChannelParticipantCreator) ImplementsChannelParticipant() {}

// A participant that left the channel/supergroup
type ChannelParticipantLeft struct {
	Peer Peer
}

func (*ChannelParticipantLeft) CRC() uint32 {
	return 0x1b03f006
}

func (*ChannelParticipantLeft) ImplementsChannelParticipant() {}

// Myself
type ChannelParticipantSelf struct {
	ViaRequest bool `tl:"flag:0,encoded_in_bitflags"`
	UserID     int64
	InviterID  int64
	Date       int32
}

func (*ChannelParticipantSelf) CRC() uint32 {
	return 0x35a8bfa7
}

func (*ChannelParticipantSelf) FlagIndex() int {
	return 0
}

func (*ChannelParticipantSelf) ImplementsChannelParticipant() {}

type ChannelParticipantsFilter interface {
	tl.Object
	ImplementsChannelParticipantsFilter()
}

// Fetch only admin participants
type ChannelParticipantsAdmins struct{}

func (*ChannelParticipantsAdmins) CRC() uint32 {
	return 0xb4608969
}

func (*ChannelParticipantsAdmins) ImplementsChannelParticipantsFilter() {}

// Fetch only banned participants
type ChannelParticipantsBanned struct {
	Q string
}

func (*ChannelParticipantsBanned) CRC() uint32 {
	return 0x1427a5e1
}

func (*ChannelParticipantsBanned) ImplementsChannelParticipantsFilter() {}

// Fetch only bot participants
type ChannelParticipantsBots struct{}

func (*ChannelParticipantsBots) CRC() uint32 {
	return 0xb0d1865b
}

func (*ChannelParticipantsBots) ImplementsChannelParticipantsFilter() {}

// Fetch only participants that are also contacts
type ChannelParticipantsContacts struct {
	Q string
}

func (*ChannelParticipantsContacts) CRC() uint32 {
	return 0xbb6ae88d
}

func (*ChannelParticipantsContacts) ImplementsChannelParticipantsFilter() {}

// Fetch only kicked participants
type ChannelParticipantsKicked struct {
	Q string
}

func (*ChannelParticipantsKicked) CRC() uint32 {
	return 0xa3b54985
}

func (*ChannelParticipantsKicked) ImplementsChannelParticipantsFilter() {}

/*
This filter is used when looking for supergroup members to mention.<br>
This filter will automatically remove anonymous admins, and return even non-participant users that replied to a specific [thread](https://core.telegram.org/api/threads) through the [comment section](https://core.telegram.org/api/threads#channel-comments) of a channel.
*/
type ChannelParticipantsMentions struct {
	Q        string `tl:"flag:0"`
	TopMsgID int32  `tl:"flag:1"`
}

func (*ChannelParticipantsMentions) CRC() uint32 {
	return 0xe04b5ceb
}

func (*ChannelParticipantsMentions) FlagIndex() int {
	return 0
}

func (*ChannelParticipantsMentions) ImplementsChannelParticipantsFilter() {}

// Fetch only recent participants
type ChannelParticipantsRecent struct{}

func (*ChannelParticipantsRecent) CRC() uint32 {
	return 0xde3f3c79
}

func (*ChannelParticipantsRecent) ImplementsChannelParticipantsFilter() {}

// Query participants by name
type ChannelParticipantsSearch struct {
	Q string
}

func (*ChannelParticipantsSearch) CRC() uint32 {
	return 0x656ac4b
}

func (*ChannelParticipantsSearch) ImplementsChannelParticipantsFilter() {}

type Chat interface {
	tl.Object
	ImplementsChat()
}

// Channel/supergroup info
type Channel struct {
	Creator             bool `tl:"flag:0,encoded_in_bitflags"`
	Left                bool `tl:"flag:2,encoded_in_bitflags"`
	Broadcast           bool `tl:"flag:5,encoded_in_bitflags"`
	Verified            bool `tl:"flag:7,encoded_in_bitflags"`
	Megagroup           bool `tl:"flag:8,encoded_in_bitflags"`
	Restricted          bool `tl:"flag:9,encoded_in_bitflags"`
	Signatures          bool `tl:"flag:11,encoded_in_bitflags"`
	Min                 bool `tl:"flag:12,encoded_in_bitflags"`
	Scam                bool `tl:"flag:19,encoded_in_bitflags"`
	HasLink             bool `tl:"flag:20,encoded_in_bitflags"`
	HasGeo              bool `tl:"flag:21,encoded_in_bitflags"`
	SlowmodeEnabled     bool `tl:"flag:22,encoded_in_bitflags"`
	CallActive          bool `tl:"flag:23,encoded_in_bitflags"`
	CallNotEmpty        bool `tl:"flag:24,encoded_in_bitflags"`
	Fake                bool `tl:"flag:25,encoded_in_bitflags"`
	Gigagroup           bool `tl:"flag:26,encoded_in_bitflags"`
	Noforwards          bool `tl:"flag:27,encoded_in_bitflags"`
	JoinToSend          bool `tl:"flag:28,encoded_in_bitflags"`
	JoinRequest         bool `tl:"flag:29,encoded_in_bitflags"`
	Forum               bool `tl:"flag:30,encoded_in_bitflags"`
	StoriesHidden       bool `tl:"flag2:1,encoded_in_bitflags"`
	StoriesHiddenMin    bool `tl:"flag2:2,encoded_in_bitflags"`
	StoriesUnavailable  bool `tl:"flag2:3,encoded_in_bitflags"`
	ID                  int64
	AccessHash          int64 `tl:"flag:13"`
	Title               string
	Username            string `tl:"flag:6"`
	Photo               ChatPhoto
	Date                int32
	RestrictionReason   []*RestrictionReason `tl:"flag:9"`
	AdminRights         *ChatAdminRights     `tl:"flag:14"`
	BannedRights        *ChatBannedRights    `tl:"flag:15"`
	DefaultBannedRights *ChatBannedRights    `tl:"flag:18"`
	ParticipantsCount   int32                `tl:"flag:17"`
	Usernames           []*Username          `tl:"flag2:0"`
	StoriesMaxID        int32                `tl:"flag2:4"`
	Color               *PeerColor           `tl:"flag2:7"`
	ProfileColor        *PeerColor           `tl:"flag2:8"`
	EmojiStatus         EmojiStatus          `tl:"flag2:9"`
	Level               int32                `tl:"flag2:10"`
}

func (*Channel) CRC() uint32 {
	return 0xaadfc8f
}

func (*Channel) FlagIndex() int {
	return 21
}

func (*Channel) ImplementsChat() {}

// Indicates a channel/supergroup we can't access because we were banned, or for some other reason.
type ChannelForbidden struct {
	Broadcast  bool `tl:"flag:5,encoded_in_bitflags"`
	Megagroup  bool `tl:"flag:8,encoded_in_bitflags"`
	ID         int64
	AccessHash int64
	Title      string
	UntilDate  int32 `tl:"flag:16"`
}

func (*ChannelForbidden) CRC() uint32 {
	return 0x17d493d5
}

func (*ChannelForbidden) FlagIndex() int {
	return 0
}

func (*ChannelForbidden) ImplementsChat() {}

// Info about a group
type ChatObj struct {
	Creator             bool `tl:"flag:0,encoded_in_bitflags"`
	Left                bool `tl:"flag:2,encoded_in_bitflags"`
	Deactivated         bool `tl:"flag:5,encoded_in_bitflags"`
	CallActive          bool `tl:"flag:23,encoded_in_bitflags"`
	CallNotEmpty        bool `tl:"flag:24,encoded_in_bitflags"`
	Noforwards          bool `tl:"flag:25,encoded_in_bitflags"`
	ID                  int64
	Title               string
	Photo               ChatPhoto
	ParticipantsCount   int32
	Date                int32
	Version             int32
	MigratedTo          InputChannel      `tl:"flag:6"`
	AdminRights         *ChatAdminRights  `tl:"flag:14"`
	DefaultBannedRights *ChatBannedRights `tl:"flag:18"`
}

func (*ChatObj) CRC() uint32 {
	return 0x41cbf256
}

func (*ChatObj) FlagIndex() int {
	return 0
}

func (*ChatObj) ImplementsChat() {}

// Empty constructor, group doesn't exist
type ChatEmpty struct {
	ID int64
}

func (*ChatEmpty) CRC() uint32 {
	return 0x29562865
}

func (*ChatEmpty) ImplementsChat() {}

// A group to which the user has no access. E.g., because the user was kicked from the group.
type ChatForbidden struct {
	ID    int64
	Title string
}

func (*ChatForbidden) CRC() uint32 {
	return 0x6592a1a7
}

func (*ChatForbidden) ImplementsChat() {}

type ChatFull interface {
	tl.Object
	ImplementsChatFull()
}

// Full info about a [channel](https://core.telegram.org/api/channel#channels), [supergroup](https://core.telegram.org/api/channel#supergroups) or [gigagroup](https://core.telegram.org/api/channel#gigagroups).
type ChannelFull struct {
	CanViewParticipants    bool `tl:"flag:3,encoded_in_bitflags"`
	CanSetUsername         bool `tl:"flag:6,encoded_in_bitflags"`
	CanSetStickers         bool `tl:"flag:7,encoded_in_bitflags"`
	HiddenPrehistory       bool `tl:"flag:10,encoded_in_bitflags"`
	CanSetLocation         bool `tl:"flag:16,encoded_in_bitflags"`
	HasScheduled           bool `tl:"flag:19,encoded_in_bitflags"`
	CanViewStats           bool `tl:"flag:20,encoded_in_bitflags"`
	Blocked                bool `tl:"flag:22,encoded_in_bitflags"`
	CanDeleteChannel       bool `tl:"flag2:0,encoded_in_bitflags"`
	Antispam               bool `tl:"flag2:1,encoded_in_bitflags"`
	ParticipantsHidden     bool `tl:"flag2:2,encoded_in_bitflags"`
	TranslationsDisabled   bool `tl:"flag2:3,encoded_in_bitflags"`
	StoriesPinnedAvailable bool `tl:"flag2:5,encoded_in_bitflags"`
	ViewForumAsMessages    bool `tl:"flag2:6,encoded_in_bitflags"`
	RestrictedSponsored    bool `tl:"flag2:11,encoded_in_bitflags"`
	CanViewRevenue         bool `tl:"flag2:12,encoded_in_bitflags"`
	PaidMediaAllowed       bool `tl:"flag2:14,encoded_in_bitflags"`
	CanViewStarsRevenue    bool `tl:"flag2:15,encoded_in_bitflags"`
	ID                     int64
	About                  string
	ParticipantsCount      int32 `tl:"flag:0"`
	AdminsCount            int32 `tl:"flag:1"`
	KickedCount            int32 `tl:"flag:2"`
	BannedCount            int32 `tl:"flag:2"`
	OnlineCount            int32 `tl:"flag:13"`
	ReadInboxMaxID         int32
	ReadOutboxMaxID        int32
	UnreadCount            int32
	ChatPhoto              Photo
	NotifySettings         *PeerNotifySettings
	ExportedInvite         ExportedChatInvite `tl:"flag:23"`
	BotInfo                []*BotInfo
	MigratedFromChatID     int64           `tl:"flag:4"`
	MigratedFromMaxID      int32           `tl:"flag:4"`
	PinnedMsgID            int32           `tl:"flag:5"`
	Stickerset             *StickerSet     `tl:"flag:8"`
	AvailableMinID         int32           `tl:"flag:9"`
	FolderID               int32           `tl:"flag:11"`
	LinkedChatID           int64           `tl:"flag:14"`
	Location               ChannelLocation `tl:"flag:15"`
	SlowmodeSeconds        int32           `tl:"flag:17"`
	SlowmodeNextSendDate   int32           `tl:"flag:18"`
	StatsDc                int32           `tl:"flag:12"`
	Pts                    int32
	Call                   *InputGroupCall `tl:"flag:21"`
	TtlPeriod              int32           `tl:"flag:24"`
	PendingSuggestions     []string        `tl:"flag:25"`
	GroupcallDefaultJoinAs Peer            `tl:"flag:26"`
	ThemeEmoticon          string          `tl:"flag:27"`
	RequestsPending        int32           `tl:"flag:28"`
	RecentRequesters       []int64         `tl:"flag:28"`
	DefaultSendAs          Peer            `tl:"flag:29"`
	AvailableReactions     ChatReactions   `tl:"flag:30"`
	ReactionsLimit         int32           `tl:"flag2:13"`
	Stories                *PeerStories    `tl:"flag2:4"`
	Wallpaper              WallPaper       `tl:"flag2:7"`
	BoostsApplied          int32           `tl:"flag2:8"`
	BoostsUnrestrict       int32           `tl:"flag2:9"`
	Emojiset               *StickerSet     `tl:"flag2:10"`
}

func (*ChannelFull) CRC() uint32 {
	return 0xbbab348d
}

func (*ChannelFull) FlagIndex() int {
	return 9
}

func (*ChannelFull) ImplementsChatFull() {}

// Full info about a [basic group](https://core.telegram.org/api/channel#basic-groups).
type ChatFullObj struct {
	CanSetUsername         bool `tl:"flag:7,encoded_in_bitflags"`
	HasScheduled           bool `tl:"flag:8,encoded_in_bitflags"`
	TranslationsDisabled   bool `tl:"flag:19,encoded_in_bitflags"`
	ID                     int64
	About                  string
	Participants           ChatParticipants
	ChatPhoto              Photo `tl:"flag:2"`
	NotifySettings         *PeerNotifySettings
	ExportedInvite         ExportedChatInvite `tl:"flag:13"`
	BotInfo                []*BotInfo         `tl:"flag:3"`
	PinnedMsgID            int32              `tl:"flag:6"`
	FolderID               int32              `tl:"flag:11"`
	Call                   *InputGroupCall    `tl:"flag:12"`
	TtlPeriod              int32              `tl:"flag:14"`
	GroupcallDefaultJoinAs Peer               `tl:"flag:15"`
	ThemeEmoticon          string             `tl:"flag:16"`
	RequestsPending        int32              `tl:"flag:17"`
	RecentRequesters       []int64            `tl:"flag:17"`
	AvailableReactions     ChatReactions      `tl:"flag:18"`
	ReactionsLimit         int32              `tl:"flag:20"`
}

func (*ChatFullObj) CRC() uint32 {
	return 0x2633421b
}

func (*ChatFullObj) FlagIndex() int {
	return 0
}

func (*ChatFullObj) ImplementsChatFull() {}

type ChatInvite interface {
	tl.Object
	ImplementsChatInvite()
}

// Chat invite info
type ChatInviteObj struct {
	Channel           bool `tl:"flag:0,encoded_in_bitflags"`
	Broadcast         bool `tl:"flag:1,encoded_in_bitflags"`
	Public            bool `tl:"flag:2,encoded_in_bitflags"`
	Megagroup         bool `tl:"flag:3,encoded_in_bitflags"`
	RequestNeeded     bool `tl:"flag:6,encoded_in_bitflags"`
	Verified          bool `tl:"flag:7,encoded_in_bitflags"`
	Scam              bool `tl:"flag:8,encoded_in_bitflags"`
	Fake              bool `tl:"flag:9,encoded_in_bitflags"`
	Title             string
	About             string `tl:"flag:5"`
	Photo             Photo
	ParticipantsCount int32
	Participants      []User `tl:"flag:4"`
	Color             int32
}

func (*ChatInviteObj) CRC() uint32 {
	return 0xcde0ec40
}

func (*ChatInviteObj) FlagIndex() int {
	return 0
}

func (*ChatInviteObj) ImplementsChatInvite() {}

// The user has already joined this chat
type ChatInviteAlready struct {
	Chat Chat
}

func (*ChatInviteAlready) CRC() uint32 {
	return 0x5a686d7c
}

func (*ChatInviteAlready) ImplementsChatInvite() {}

// A chat invitation that also allows peeking into the group to read messages without joining it.
type ChatInvitePeek struct {
	Chat    Chat
	Expires int32
}

func (*ChatInvitePeek) CRC() uint32 {
	return 0x61695cb0
}

func (*ChatInvitePeek) ImplementsChatInvite() {}

type ChatParticipant interface {
	tl.Object
	ImplementsChatParticipant()
}

// Group member.
type ChatParticipantObj struct {
	UserID    int64
	InviterID int64
	Date      int32
}

func (*ChatParticipantObj) CRC() uint32 {
	return 0xc02d4007
}

func (*ChatParticipantObj) ImplementsChatParticipant() {}

// Chat admin
type ChatParticipantAdmin struct {
	UserID    int64
	InviterID int64
	Date      int32
}

func (*ChatParticipantAdmin) CRC() uint32 {
	return 0xa0933f5b
}

func (*ChatParticipantAdmin) ImplementsChatParticipant() {}

// Represents the creator of the group
type ChatParticipantCreator struct {
	UserID int64
}

func (*ChatParticipantCreator) CRC() uint32 {
	return 0xe46bcee4
}

func (*ChatParticipantCreator) ImplementsChatParticipant() {}

type ChatParticipants interface {
	tl.Object
	ImplementsChatParticipants()
}

// Group members.
type ChatParticipantsObj struct {
	ChatID       int64
	Participants []ChatParticipant
	Version      int32
}

func (*ChatParticipantsObj) CRC() uint32 {
	return 0x3cbc93f8
}

func (*ChatParticipantsObj) ImplementsChatParticipants() {}

// Info on members is unavailable
type ChatParticipantsForbidden struct {
	ChatID          int64
	SelfParticipant ChatParticipant `tl:"flag:0"`
}

func (*ChatParticipantsForbidden) CRC() uint32 {
	return 0x8763d3e1
}

func (*ChatParticipantsForbidden) FlagIndex() int {
	return 0
}

func (*ChatParticipantsForbidden) ImplementsChatParticipants() {}

type ChatPhoto interface {
	tl.Object
	ImplementsChatPhoto()
}

// Group profile photo.
type ChatPhotoObj struct {
	HasVideo      bool `tl:"flag:0,encoded_in_bitflags"`
	PhotoID       int64
	StrippedThumb []byte `tl:"flag:1"`
	DcID          int32
}

func (*ChatPhotoObj) CRC() uint32 {
	return 0x1c6e1c11
}

func (*ChatPhotoObj) FlagIndex() int {
	return 0
}

func (*ChatPhotoObj) ImplementsChatPhoto() {}

// Group photo is not set.
type ChatPhotoEmpty struct{}

func (*ChatPhotoEmpty) CRC() uint32 {
	return 0x37c1011c
}

func (*ChatPhotoEmpty) ImplementsChatPhoto() {}

type ChatReactions interface {
	tl.Object
	ImplementsChatReactions()
}

// All reactions or all non-custom reactions are allowed
type ChatReactionsAll struct {
	AllowCustom bool `tl:"flag:0,encoded_in_bitflags"`
}

func (*ChatReactionsAll) CRC() uint32 {
	return 0x52928bca
}

func (*ChatReactionsAll) FlagIndex() int {
	return 0
}

func (*ChatReactionsAll) ImplementsChatReactions() {}

// No reactions are allowed
type ChatReactionsNone struct{}

func (*ChatReactionsNone) CRC() uint32 {
	return 0xeafc32bc
}

func (*ChatReactionsNone) ImplementsChatReactions() {}

// Some reactions are allowed
type ChatReactionsSome struct {
	Reactions []Reaction
}

func (*ChatReactionsSome) CRC() uint32 {
	return 0x661d4037
}

func (*ChatReactionsSome) ImplementsChatReactions() {}

type Dialog interface {
	tl.Object
	ImplementsDialog()
}

// Chat
type DialogObj struct {
	Pinned               bool `tl:"flag:2,encoded_in_bitflags"`
	UnreadMark           bool `tl:"flag:3,encoded_in_bitflags"`
	ViewForumAsMessages  bool `tl:"flag:6,encoded_in_bitflags"`
	Peer                 Peer
	TopMessage           int32
	ReadInboxMaxID       int32
	ReadOutboxMaxID      int32
	UnreadCount          int32
	UnreadMentionsCount  int32
	UnreadReactionsCount int32
	NotifySettings       *PeerNotifySettings
	Pts                  int32        `tl:"flag:0"`
	Draft                DraftMessage `tl:"flag:1"`
	FolderID             int32        `tl:"flag:4"`
	TtlPeriod            int32        `tl:"flag:5"`
}

func (*DialogObj) CRC() uint32 {
	return 0xd58a08c6
}

func (*DialogObj) FlagIndex() int {
	return 0
}

func (*DialogObj) ImplementsDialog() {}

// Dialog in folder
type DialogFolder struct {
	Pinned                     bool `tl:"flag:2,encoded_in_bitflags"`
	Folder                     *Folder
	Peer                       Peer
	TopMessage                 int32
	UnreadMutedPeersCount      int32
	UnreadUnmutedPeersCount    int32
	UnreadMutedMessagesCount   int32
	UnreadUnmutedMessagesCount int32
}

func (*DialogFolder) CRC() uint32 {
	return 0x71bd134c
}

func (*DialogFolder) FlagIndex() int {
	return 0
}

func (*DialogFolder) ImplementsDialog() {}

type DialogFilter interface {
	tl.Object
	ImplementsDialogFilter()
}

// Dialog filter AKA [folder](https://core.telegram.org/api/folders)
type DialogFilterObj struct {
	Contacts        bool `tl:"flag:0,encoded_in_bitflags"`
	NonContacts     bool `tl:"flag:1,encoded_in_bitflags"`
	Groups          bool `tl:"flag:2,encoded_in_bitflags"`
	Broadcasts      bool `tl:"flag:3,encoded_in_bitflags"`
	Bots            bool `tl:"flag:4,encoded_in_bitflags"`
	ExcludeMuted    bool `tl:"flag:11,encoded_in_bitflags"`
	ExcludeRead     bool `tl:"flag:12,encoded_in_bitflags"`
	ExcludeArchived bool `tl:"flag:13,encoded_in_bitflags"`
	ID              int32
	Title           string
	Emoticon        string `tl:"flag:25"`
	Color           int32  `tl:"flag:27"`
	PinnedPeers     []InputPeer
	IncludePeers    []InputPeer
	ExcludePeers    []InputPeer
}

func (*DialogFilterObj) CRC() uint32 {
	return 0x5fb5523b
}

func (*DialogFilterObj) FlagIndex() int {
	return 0
}

func (*DialogFilterObj) ImplementsDialogFilter() {}

// A folder imported using a [chat folder deep link Â»](https://core.telegram.org/api/links#chat-folder-links).
type DialogFilterChatlist struct {
	HasMyInvites bool `tl:"flag:26,encoded_in_bitflags"`
	ID           int32
	Title        string
	Emoticon     string `tl:"flag:25"`
	Color        int32  `tl:"flag:27"`
	PinnedPeers  []InputPeer
	IncludePeers []InputPeer
}

func (*DialogFilterChatlist) CRC() uint32 {
	return 0x9fe28ea4
}

func (*DialogFilterChatlist) FlagIndex() int {
	return 0
}

func (*DialogFilterChatlist) ImplementsDialogFilter() {}

// Used only when reordering folders to indicate the default (all chats) folder.
type DialogFilterDefault struct{}

func (*DialogFilterDefault) CRC() uint32 {
	return 0x363293ae
}

func (*DialogFilterDefault) ImplementsDialogFilter() {}

type DialogPeer interface {
	tl.Object
	ImplementsDialogPeer()
}

// Peer
type DialogPeerObj struct {
	Peer Peer
}

func (*DialogPeerObj) CRC() uint32 {
	return 0xe56dbf05
}

func (*DialogPeerObj) ImplementsDialogPeer() {}

// [Peer folder](https://core.telegram.org/api/folders#peer-folders)
type DialogPeerFolder struct {
	FolderID int32
}

func (*DialogPeerFolder) CRC() uint32 {
	return 0x514519e2
}

func (*DialogPeerFolder) ImplementsDialogPeer() {}

type Document interface {
	tl.Object
	ImplementsDocument()
}

// Document
type DocumentObj struct {
	ID            int64
	AccessHash    int64
	FileReference []byte
	Date          int32
	MimeType      string
	Size          int64
	Thumbs        []PhotoSize `tl:"flag:0"`
	VideoThumbs   []VideoSize `tl:"flag:1"`
	DcID          int32
	Attributes    []DocumentAttribute
}

func (*DocumentObj) CRC() uint32 {
	return 0x8fd4c4d8
}

func (*DocumentObj) FlagIndex() int {
	return 0
}

func (*DocumentObj) ImplementsDocument() {}

// Empty constructor, document doesn't exist.
type DocumentEmpty struct {
	ID int64
}

func (*DocumentEmpty) CRC() uint32 {
	return 0x36f8c871
}

func (*DocumentEmpty) ImplementsDocument() {}

type DocumentAttribute interface {
	tl.Object
	ImplementsDocumentAttribute()
}

// Defines an animated GIF
type DocumentAttributeAnimated struct{}

func (*DocumentAttributeAnimated) CRC() uint32 {
	return 0x11b58939
}

func (*DocumentAttributeAnimated) ImplementsDocumentAttribute() {}

// Represents an audio file
type DocumentAttributeAudio struct {
	Voice     bool `tl:"flag:10,encoded_in_bitflags"`
	Duration  int32
	Title     string `tl:"flag:0"`
	Performer string `tl:"flag:1"`
	Waveform  []byte `tl:"flag:2"`
}

func (*DocumentAttributeAudio) CRC() uint32 {
	return 0x9852f9c6
}

func (*DocumentAttributeAudio) FlagIndex() int {
	return 0
}

func (*DocumentAttributeAudio) ImplementsDocumentAttribute() {}

// Info about a custom emoji
type DocumentAttributeCustomEmoji struct {
	Free       bool `tl:"flag:0,encoded_in_bitflags"`
	TextColor  bool `tl:"flag:1,encoded_in_bitflags"`
	Alt        string
	Stickerset InputStickerSet
}

func (*DocumentAttributeCustomEmoji) CRC() uint32 {
	return 0xfd149899
}

func (*DocumentAttributeCustomEmoji) FlagIndex() int {
	return 0
}

func (*DocumentAttributeCustomEmoji) ImplementsDocumentAttribute() {}

// A simple document with a file name
type DocumentAttributeFilename struct {
	FileName string
}

func (*DocumentAttributeFilename) CRC() uint32 {
	return 0x15590068
}

func (*DocumentAttributeFilename) ImplementsDocumentAttribute() {}

// Whether the current document has stickers attached
type DocumentAttributeHasStickers struct{}

func (*DocumentAttributeHasStickers) CRC() uint32 {
	return 0x9801d2f7
}

func (*DocumentAttributeHasStickers) ImplementsDocumentAttribute() {}

// Defines the width and height of an image uploaded as document
type DocumentAttributeImageSize struct {
	W int32
	H int32
}

func (*DocumentAttributeImageSize) CRC() uint32 {
	return 0x6c37c15c
}

func (*DocumentAttributeImageSize) ImplementsDocumentAttribute() {}

// Defines a sticker
type DocumentAttributeSticker struct {
	Mask       bool `tl:"flag:1,encoded_in_bitflags"`
	Alt        string
	Stickerset InputStickerSet
	MaskCoords *MaskCoords `tl:"flag:0"`
}

func (*DocumentAttributeSticker) CRC() uint32 {
	return 0x6319d612
}

func (*DocumentAttributeSticker) FlagIndex() int {
	return 0
}

func (*DocumentAttributeSticker) ImplementsDocumentAttribute() {}

// Defines a video
type DocumentAttributeVideo struct {
	RoundMessage      bool `tl:"flag:0,encoded_in_bitflags"`
	SupportsStreaming bool `tl:"flag:1,encoded_in_bitflags"`
	Nosound           bool `tl:"flag:3,encoded_in_bitflags"`
	Duration          float64
	W                 int32
	H                 int32
	PreloadPrefixSize int32 `tl:"flag:2"`
}

func (*DocumentAttributeVideo) CRC() uint32 {
	return 0xd38ff1c2
}

func (*DocumentAttributeVideo) FlagIndex() int {
	return 0
}

func (*DocumentAttributeVideo) ImplementsDocumentAttribute() {}

type DraftMessage interface {
	tl.Object
	ImplementsDraftMessage()
}

// Represents a message [draft](https://core.telegram.org/api/drafts).
type DraftMessageObj struct {
	NoWebpage   bool         `tl:"flag:1,encoded_in_bitflags"`
	InvertMedia bool         `tl:"flag:6,encoded_in_bitflags"`
	ReplyTo     InputReplyTo `tl:"flag:4"`
	Message     string
	Entities    []MessageEntity `tl:"flag:3"`
	Media       InputMedia      `tl:"flag:5"`
	Date        int32
	Effect      int64 `tl:"flag:7"`
}

func (*DraftMessageObj) CRC() uint32 {
	return 0x2d65321f
}

func (*DraftMessageObj) FlagIndex() int {
	return 0
}

func (*DraftMessageObj) ImplementsDraftMessage() {}

// Empty draft
type DraftMessageEmpty struct {
	Date int32 `tl:"flag:0"`
}

func (*DraftMessageEmpty) CRC() uint32 {
	return 0x1b0c841a
}

func (*DraftMessageEmpty) FlagIndex() int {
	return 0
}

func (*DraftMessageEmpty) ImplementsDraftMessage() {}

type EmailVerification interface {
	tl.Object
	ImplementsEmailVerification()
}

// Apple ID email verification token
type EmailVerificationApple struct {
	Token string
}

func (*EmailVerificationApple) CRC() uint32 {
	return 0x96d074fd
}

func (*EmailVerificationApple) ImplementsEmailVerification() {}

// Email verification code
type EmailVerificationCode struct {
	Code string
}

func (*EmailVerificationCode) CRC() uint32 {
	return 0x922e55a9
}

func (*EmailVerificationCode) ImplementsEmailVerification() {}

// Google ID email verification token
type EmailVerificationGoogle struct {
	Token string
}

func (*EmailVerificationGoogle) CRC() uint32 {
	return 0xdb909ec2
}

func (*EmailVerificationGoogle) ImplementsEmailVerification() {}

type EmailVerifyPurpose interface {
	tl.Object
	ImplementsEmailVerifyPurpose()
}

// Email verification purpose: change login email
type EmailVerifyPurposeLoginChange struct{}

func (*EmailVerifyPurposeLoginChange) CRC() uint32 {
	return 0x527d22eb
}

func (*EmailVerifyPurposeLoginChange) ImplementsEmailVerifyPurpose() {}

// Email verification purpose: setup login email
type EmailVerifyPurposeLoginSetup struct {
	PhoneNumber   string
	PhoneCodeHash string
}

func (*EmailVerifyPurposeLoginSetup) CRC() uint32 {
	return 0x4345be73
}

func (*EmailVerifyPurposeLoginSetup) ImplementsEmailVerifyPurpose() {}

// Verify an email for use in [telegram passport](https://core.telegram.org/api/passport)
type EmailVerifyPurposePassport struct{}

func (*EmailVerifyPurposePassport) CRC() uint32 {
	return 0xbbf51685
}

func (*EmailVerifyPurposePassport) ImplementsEmailVerifyPurpose() {}

type EmojiGroup interface {
	tl.Object
	ImplementsEmojiGroup()
}

// Represents an [emoji category](https://core.telegram.org/api/custom-emoji#emoji-categories).
type EmojiGroupObj struct {
	Title       string
	IconEmojiID int64
	Emoticons   []string
}

func (*EmojiGroupObj) CRC() uint32 {
	return 0x7a9abda9
}

func (*EmojiGroupObj) ImplementsEmojiGroup() {}

type EmojiGroupGreeting struct {
	Title       string
	IconEmojiID int64
	Emoticons   []string
}

func (*EmojiGroupGreeting) CRC() uint32 {
	return 0x80d26cc7
}

func (*EmojiGroupGreeting) ImplementsEmojiGroup() {}

type EmojiGroupPremium struct {
	Title       string
	IconEmojiID int64
}

func (*EmojiGroupPremium) CRC() uint32 {
	return 0x93bcf34
}

func (*EmojiGroupPremium) ImplementsEmojiGroup() {}

type EmojiKeyword interface {
	tl.Object
	ImplementsEmojiKeyword()
}

// Emoji keyword
type EmojiKeywordObj struct {
	Keyword   string
	Emoticons []string
}

func (*EmojiKeywordObj) CRC() uint32 {
	return 0xd5b3b9f9
}

func (*EmojiKeywordObj) ImplementsEmojiKeyword() {}

// Deleted emoji keyword
type EmojiKeywordDeleted struct {
	Keyword   string
	Emoticons []string
}

func (*EmojiKeywordDeleted) CRC() uint32 {
	return 0x236df622
}

func (*EmojiKeywordDeleted) ImplementsEmojiKeyword() {}

type EmojiList interface {
	tl.Object
	ImplementsEmojiList()
}

// Represents a list of [custom emojis](https://core.telegram.org/api/custom-emoji).
type EmojiListObj struct {
	Hash       int64
	DocumentID []int64
}

func (*EmojiListObj) CRC() uint32 {
	return 0x7a1e11d1
}

func (*EmojiListObj) ImplementsEmojiList() {}

// The list of [custom emojis](https://core.telegram.org/api/custom-emoji) hasn't changed.
type EmojiListNotModified struct{}

func (*EmojiListNotModified) CRC() uint32 {
	return 0x481eadfa
}

func (*EmojiListNotModified) ImplementsEmojiList() {}

type EmojiStatus interface {
	tl.Object
	ImplementsEmojiStatus()
}

// An [emoji status](https://core.telegram.org/api/emoji-status)
type EmojiStatusObj struct {
	DocumentID int64
}

func (*EmojiStatusObj) CRC() uint32 {
	return 0x929b619d
}

func (*EmojiStatusObj) ImplementsEmojiStatus() {}

// No emoji status is set
type EmojiStatusEmpty struct{}

func (*EmojiStatusEmpty) CRC() uint32 {
	return 0x2de11aae
}

func (*EmojiStatusEmpty) ImplementsEmojiStatus() {}

// An [emoji status](https://core.telegram.org/api/emoji-status) valid until the specified date
type EmojiStatusUntil struct {
	DocumentID int64
	Until      int32
}

func (*EmojiStatusUntil) CRC() uint32 {
	return 0xfa30a8c7
}

func (*EmojiStatusUntil) ImplementsEmojiStatus() {}

type EncryptedChat interface {
	tl.Object
	ImplementsEncryptedChat()
}

// Encrypted chat
type EncryptedChatObj struct {
	ID             int32
	AccessHash     int64
	Date           int32
	AdminID        int64
	ParticipantID  int64
	GAOrB          []byte
	KeyFingerprint int64
}

func (*EncryptedChatObj) CRC() uint32 {
	return 0x61f0d4c7
}

func (*EncryptedChatObj) ImplementsEncryptedChat() {}

// Discarded or deleted chat.
type EncryptedChatDiscarded struct {
	HistoryDeleted bool `tl:"flag:0,encoded_in_bitflags"`
	ID             int32
}

func (*EncryptedChatDiscarded) CRC() uint32 {
	return 0x1e1c7c45
}

func (*EncryptedChatDiscarded) FlagIndex() int {
	return 0
}

func (*EncryptedChatDiscarded) ImplementsEncryptedChat() {}

// Empty constructor.
type EncryptedChatEmpty struct {
	ID int32
}

func (*EncryptedChatEmpty) CRC() uint32 {
	return 0xab7ec0a0
}

func (*EncryptedChatEmpty) ImplementsEncryptedChat() {}

// Request to create an encrypted chat.
type EncryptedChatRequested struct {
	FolderID      int32 `tl:"flag:0"`
	ID            int32
	AccessHash    int64
	Date          int32
	AdminID       int64
	ParticipantID int64
	GA            []byte
}

func (*EncryptedChatRequested) CRC() uint32 {
	return 0x48f1d94c
}

func (*EncryptedChatRequested) FlagIndex() int {
	return 0
}

func (*EncryptedChatRequested) ImplementsEncryptedChat() {}

// Chat waiting for approval of second participant.
type EncryptedChatWaiting struct {
	ID            int32
	AccessHash    int64
	Date          int32
	AdminID       int64
	ParticipantID int64
}

func (*EncryptedChatWaiting) CRC() uint32 {
	return 0x66b25953
}

func (*EncryptedChatWaiting) ImplementsEncryptedChat() {}

type EncryptedFile interface {
	tl.Object
	ImplementsEncryptedFile()
}

// Encrypted file.
type EncryptedFileObj struct {
	ID             int64
	AccessHash     int64
	Size           int64
	DcID           int32
	KeyFingerprint int32
}

func (*EncryptedFileObj) CRC() uint32 {
	return 0xa8008cd8
}

func (*EncryptedFileObj) ImplementsEncryptedFile() {}

// Empty constructor, non-existing file.
type EncryptedFileEmpty struct{}

func (*EncryptedFileEmpty) CRC() uint32 {
	return 0xc21f497e
}

func (*EncryptedFileEmpty) ImplementsEncryptedFile() {}

type EncryptedMessage interface {
	tl.Object
	ImplementsEncryptedMessage()
}

// Encrypted message.
type EncryptedMessageObj struct {
	RandomID int64
	ChatID   int32
	Date     int32
	Bytes    []byte
	File     EncryptedFile
}

func (*EncryptedMessageObj) CRC() uint32 {
	return 0xed18c118
}

func (*EncryptedMessageObj) ImplementsEncryptedMessage() {}

// Encrypted service message
type EncryptedMessageService struct {
	RandomID int64
	ChatID   int32
	Date     int32
	Bytes    []byte
}

func (*EncryptedMessageService) CRC() uint32 {
	return 0x23734b06
}

func (*EncryptedMessageService) ImplementsEncryptedMessage() {}

type ExportedChatInvite interface {
	tl.Object
	ImplementsExportedChatInvite()
}

// Exported chat invite
type ChatInviteExported struct {
	Revoked       bool `tl:"flag:0,encoded_in_bitflags"`
	Permanent     bool `tl:"flag:5,encoded_in_bitflags"`
	RequestNeeded bool `tl:"flag:6,encoded_in_bitflags"`
	Link          string
	AdminID       int64
	Date          int32
	StartDate     int32  `tl:"flag:4"`
	ExpireDate    int32  `tl:"flag:1"`
	UsageLimit    int32  `tl:"flag:2"`
	Usage         int32  `tl:"flag:3"`
	Requested     int32  `tl:"flag:7"`
	Title         string `tl:"flag:8"`
}

func (*ChatInviteExported) CRC() uint32 {
	return 0xab4a819
}

func (*ChatInviteExported) FlagIndex() int {
	return 0
}

func (*ChatInviteExported) ImplementsExportedChatInvite() {}

// Used in updates and in the channel log to indicate when a user is requesting to join or has joined a [discussion group](https://core.telegram.org/api/discussion#requiring-users-to-join-the-group)
type ChatInvitePublicJoinRequests struct{}

func (*ChatInvitePublicJoinRequests) CRC() uint32 {
	return 0xed107ab7
}

func (*ChatInvitePublicJoinRequests) ImplementsExportedChatInvite() {}

type ForumTopic interface {
	tl.Object
	ImplementsForumTopic()
}

// Represents a [forum topic](https://core.telegram.org/api/forum#forum-topics).
type ForumTopicObj struct {
	My                   bool `tl:"flag:1,encoded_in_bitflags"`
	Closed               bool `tl:"flag:2,encoded_in_bitflags"`
	Pinned               bool `tl:"flag:3,encoded_in_bitflags"`
	Short                bool `tl:"flag:5,encoded_in_bitflags"`
	Hidden               bool `tl:"flag:6,encoded_in_bitflags"`
	ID                   int32
	Date                 int32
	Title                string
	IconColor            int32
	IconEmojiID          int64 `tl:"flag:0"`
	TopMessage           int32
	ReadInboxMaxID       int32
	ReadOutboxMaxID      int32
	UnreadCount          int32
	UnreadMentionsCount  int32
	UnreadReactionsCount int32
	FromID               Peer
	NotifySettings       *PeerNotifySettings
	Draft                DraftMessage `tl:"flag:4"`
}

func (*ForumTopicObj) CRC() uint32 {
	return 0x71701da9
}

func (*ForumTopicObj) FlagIndex() int {
	return 0
}

func (*ForumTopicObj) ImplementsForumTopic() {}

// Represents a deleted forum topic.
type ForumTopicDeleted struct {
	ID int32
}

func (*ForumTopicDeleted) CRC() uint32 {
	return 0x23f109b
}

func (*ForumTopicDeleted) ImplementsForumTopic() {}

type GeoPoint interface {
	tl.Object
	ImplementsGeoPoint()
}

// GeoPoint.
type GeoPointObj struct {
	Long           float64
	Lat            float64
	AccessHash     int64
	AccuracyRadius int32 `tl:"flag:0"`
}

func (*GeoPointObj) CRC() uint32 {
	return 0xb2a2f663
}

func (*GeoPointObj) FlagIndex() int {
	return 0
}

func (*GeoPointObj) ImplementsGeoPoint() {}

// Empty constructor.
type GeoPointEmpty struct{}

func (*GeoPointEmpty) CRC() uint32 {
	return 0x1117dd5f
}

func (*GeoPointEmpty) ImplementsGeoPoint() {}

type GroupCall interface {
	tl.Object
	ImplementsGroupCall()
}

// Info about a group call or livestream
type GroupCallObj struct {
	JoinMuted               bool `tl:"flag:1,encoded_in_bitflags"`
	CanChangeJoinMuted      bool `tl:"flag:2,encoded_in_bitflags"`
	JoinDateAsc             bool `tl:"flag:6,encoded_in_bitflags"`
	ScheduleStartSubscribed bool `tl:"flag:8,encoded_in_bitflags"`
	CanStartVideo           bool `tl:"flag:9,encoded_in_bitflags"`
	RecordVideoActive       bool `tl:"flag:11,encoded_in_bitflags"`
	RtmpStream              bool `tl:"flag:12,encoded_in_bitflags"`
	ListenersHidden         bool `tl:"flag:13,encoded_in_bitflags"`
	ID                      int64
	AccessHash              int64
	ParticipantsCount       int32
	Title                   string `tl:"flag:3"`
	StreamDcID              int32  `tl:"flag:4"`
	RecordStartDate         int32  `tl:"flag:5"`
	ScheduleDate            int32  `tl:"flag:7"`
	UnmutedVideoCount       int32  `tl:"flag:10"`
	UnmutedVideoLimit       int32
	Version                 int32
}

func (*GroupCallObj) CRC() uint32 {
	return 0xd597650c
}

func (*GroupCallObj) FlagIndex() int {
	return 0
}

func (*GroupCallObj) ImplementsGroupCall() {}

// An ended group call
type GroupCallDiscarded struct {
	ID         int64
	AccessHash int64
	Duration   int32
}

func (*GroupCallDiscarded) CRC() uint32 {
	return 0x7780bcb4
}

func (*GroupCallDiscarded) ImplementsGroupCall() {}

type InputBotApp interface {
	tl.Object
	ImplementsInputBotApp()
}

// Used to fetch information about a [direct link Mini App](https://core.telegram.org/api/bots/webapps#direct-link-mini-apps) by its ID
type InputBotAppID struct {
	ID         int64
	AccessHash int64
}

func (*InputBotAppID) CRC() uint32 {
	return 0xa920bd7a
}

func (*InputBotAppID) ImplementsInputBotApp() {}

// Used to fetch information about a [direct link Mini App](https://core.telegram.org/api/bots/webapps#direct-link-mini-apps) by its short name
type InputBotAppShortName struct {
	BotID     InputUser
	ShortName string
}

func (*InputBotAppShortName) CRC() uint32 {
	return 0x908c0407
}

func (*InputBotAppShortName) ImplementsInputBotApp() {}

type InputBotInlineMessage interface {
	tl.Object
	ImplementsInputBotInlineMessage()
}

// A game
type InputBotInlineMessageGame struct {
	ReplyMarkup ReplyMarkup `tl:"flag:2"`
}

func (*InputBotInlineMessageGame) CRC() uint32 {
	return 0x4b425864
}

func (*InputBotInlineMessageGame) FlagIndex() int {
	return 0
}

func (*InputBotInlineMessageGame) ImplementsInputBotInlineMessage() {}

// A media
type InputBotInlineMessageMediaAuto struct {
	InvertMedia bool `tl:"flag:3,encoded_in_bitflags"`
	Message     string
	Entities    []MessageEntity `tl:"flag:1"`
	ReplyMarkup ReplyMarkup     `tl:"flag:2"`
}

func (*InputBotInlineMessageMediaAuto) CRC() uint32 {
	return 0x3380c786
}

func (*InputBotInlineMessageMediaAuto) FlagIndex() int {
	return 0
}

func (*InputBotInlineMessageMediaAuto) ImplementsInputBotInlineMessage() {}

// A contact
type InputBotInlineMessageMediaContact struct {
	PhoneNumber string
	FirstName   string
	LastName    string
	Vcard       string
	ReplyMarkup ReplyMarkup `tl:"flag:2"`
}

func (*InputBotInlineMessageMediaContact) CRC() uint32 {
	return 0xa6edbffd
}

func (*InputBotInlineMessageMediaContact) FlagIndex() int {
	return 0
}

func (*InputBotInlineMessageMediaContact) ImplementsInputBotInlineMessage() {}

// Geolocation
type InputBotInlineMessageMediaGeo struct {
	GeoPoint                    InputGeoPoint
	Heading                     int32       `tl:"flag:0"`
	Period                      int32       `tl:"flag:1"`
	ProximityNotificationRadius int32       `tl:"flag:3"`
	ReplyMarkup                 ReplyMarkup `tl:"flag:2"`
}

func (*InputBotInlineMessageMediaGeo) CRC() uint32 {
	return 0x96929a85
}

func (*InputBotInlineMessageMediaGeo) FlagIndex() int {
	return 0
}

func (*InputBotInlineMessageMediaGeo) ImplementsInputBotInlineMessage() {}

// An invoice
type InputBotInlineMessageMediaInvoice struct {
	Title        string
	Description  string
	Photo        *InputWebDocument `tl:"flag:0"`
	Invoice      *Invoice
	Payload      []byte
	Provider     string
	ProviderData *DataJson
	ReplyMarkup  ReplyMarkup `tl:"flag:2"`
}

func (*InputBotInlineMessageMediaInvoice) CRC() uint32 {
	return 0xd7e78225
}

func (*InputBotInlineMessageMediaInvoice) FlagIndex() int {
	return 0
}

func (*InputBotInlineMessageMediaInvoice) ImplementsInputBotInlineMessage() {}

// Venue
type InputBotInlineMessageMediaVenue struct {
	GeoPoint    InputGeoPoint
	Title       string
	Address     string
	Provider    string
	VenueID     string
	VenueType   string
	ReplyMarkup ReplyMarkup `tl:"flag:2"`
}

func (*InputBotInlineMessageMediaVenue) CRC() uint32 {
	return 0x417bbf11
}

func (*InputBotInlineMessageMediaVenue) FlagIndex() int {
	return 0
}

func (*InputBotInlineMessageMediaVenue) ImplementsInputBotInlineMessage() {}

// Specifies options that will be used to generate the link preview for the message, or even a standalone link preview without an attached message.
type InputBotInlineMessageMediaWebPage struct {
	InvertMedia     bool `tl:"flag:3,encoded_in_bitflags"`
	ForceLargeMedia bool `tl:"flag:4,encoded_in_bitflags"`
	ForceSmallMedia bool `tl:"flag:5,encoded_in_bitflags"`
	Optional        bool `tl:"flag:6,encoded_in_bitflags"`
	Message         string
	Entities        []MessageEntity `tl:"flag:1"`
	URL             string
	ReplyMarkup     ReplyMarkup `tl:"flag:2"`
}

func (*InputBotInlineMessageMediaWebPage) CRC() uint32 {
	return 0xbddcc510
}

func (*InputBotInlineMessageMediaWebPage) FlagIndex() int {
	return 0
}

func (*InputBotInlineMessageMediaWebPage) ImplementsInputBotInlineMessage() {}

// Simple text message
type InputBotInlineMessageText struct {
	NoWebpage   bool `tl:"flag:0,encoded_in_bitflags"`
	InvertMedia bool `tl:"flag:3,encoded_in_bitflags"`
	Message     string
	Entities    []MessageEntity `tl:"flag:1"`
	ReplyMarkup ReplyMarkup     `tl:"flag:2"`
}

func (*InputBotInlineMessageText) CRC() uint32 {
	return 0x3dcd7a87
}

func (*InputBotInlineMessageText) FlagIndex() int {
	return 0
}

func (*InputBotInlineMessageText) ImplementsInputBotInlineMessage() {}

type InputBotInlineMessageID interface {
	tl.Object
	ImplementsInputBotInlineMessageID()
}

// Represents a sent inline message from the perspective of a bot (legacy constructor)
type InputBotInlineMessageIDObj struct {
	DcID       int32
	ID         int64
	AccessHash int64
}

func (*InputBotInlineMessageIDObj) CRC() uint32 {
	return 0x890c3d89
}

func (*InputBotInlineMessageIDObj) ImplementsInputBotInlineMessageID() {}

// Represents a sent inline message from the perspective of a bot
type InputBotInlineMessageID64 struct {
	DcID       int32
	OwnerID    int64
	ID         int32
	AccessHash int64
}

func (*InputBotInlineMessageID64) CRC() uint32 {
	return 0xb6d915d7
}

func (*InputBotInlineMessageID64) ImplementsInputBotInlineMessageID() {}

type InputBotInlineResult interface {
	tl.Object
	ImplementsInputBotInlineResult()
}

// An inline bot result
type InputBotInlineResultObj struct {
	ID          string
	Type        string
	Title       string            `tl:"flag:1"`
	Description string            `tl:"flag:2"`
	URL         string            `tl:"flag:3"`
	Thumb       *InputWebDocument `tl:"flag:4"`
	Content     *InputWebDocument `tl:"flag:5"`
	SendMessage InputBotInlineMessage
}

func (*InputBotInlineResultObj) CRC() uint32 {
	return 0x88bf9319
}

func (*InputBotInlineResultObj) FlagIndex() int {
	return 0
}

func (*InputBotInlineResultObj) ImplementsInputBotInlineResult() {}

// Document (media of any type except for photos)
type InputBotInlineResultDocument struct {
	ID          string
	Type        string
	Title       string `tl:"flag:1"`
	Description string `tl:"flag:2"`
	Document    InputDocument
	SendMessage InputBotInlineMessage
}

func (*InputBotInlineResultDocument) CRC() uint32 {
	return 0xfff8fdc4
}

func (*InputBotInlineResultDocument) FlagIndex() int {
	return 0
}

func (*InputBotInlineResultDocument) ImplementsInputBotInlineResult() {}

// Game
type InputBotInlineResultGame struct {
	ID          string
	ShortName   string
	SendMessage InputBotInlineMessage
}

func (*InputBotInlineResultGame) CRC() uint32 {
	return 0x4fa417f2
}

func (*InputBotInlineResultGame) ImplementsInputBotInlineResult() {}

// Photo
type InputBotInlineResultPhoto struct {
	ID          string
	Type        string
	Photo       InputPhoto
	SendMessage InputBotInlineMessage
}

func (*InputBotInlineResultPhoto) CRC() uint32 {
	return 0xa8d864a7
}

func (*InputBotInlineResultPhoto) ImplementsInputBotInlineResult() {}

type InputChannel interface {
	tl.Object
	ImplementsInputChannel()
}

// Represents a channel
type InputChannelObj struct {
	ChannelID  int64
	AccessHash int64
}

func (*InputChannelObj) CRC() uint32 {
	return 0xf35aec28
}

func (*InputChannelObj) ImplementsInputChannel() {}

// Represents the absence of a channel
type InputChannelEmpty struct{}

func (*InputChannelEmpty) CRC() uint32 {
	return 0xee8c1e86
}

func (*InputChannelEmpty) ImplementsInputChannel() {}

// Defines a [min](https://core.telegram.org/api/min) channel that was seen in a certain message of a certain chat.
type InputChannelFromMessage struct {
	Peer      InputPeer
	MsgID     int32
	ChannelID int64
}

func (*InputChannelFromMessage) CRC() uint32 {
	return 0x5b934f9d
}

func (*InputChannelFromMessage) ImplementsInputChannel() {}

type InputChatPhoto interface {
	tl.Object
	ImplementsInputChatPhoto()
}

// Existing photo to be set as a chat profile photo.
type InputChatPhotoObj struct {
	ID InputPhoto
}

func (*InputChatPhotoObj) CRC() uint32 {
	return 0x8953ad37
}

func (*InputChatPhotoObj) ImplementsInputChatPhoto() {}

// Empty constructor, remove group photo.
type InputChatPhotoEmpty struct{}

func (*InputChatPhotoEmpty) CRC() uint32 {
	return 0x1ca48f57
}

func (*InputChatPhotoEmpty) ImplementsInputChatPhoto() {}

// New photo to be set as group profile photo.
type InputChatUploadedPhoto struct {
	File             InputFile `tl:"flag:0"`
	Video            InputFile `tl:"flag:1"`
	VideoStartTs     float64   `tl:"flag:2"`
	VideoEmojiMarkup VideoSize `tl:"flag:3"`
}

func (*InputChatUploadedPhoto) CRC() uint32 {
	return 0xbdcdaec0
}

func (*InputChatUploadedPhoto) FlagIndex() int {
	return 0
}

func (*InputChatUploadedPhoto) ImplementsInputChatPhoto() {}

type InputCheckPasswordSRP interface {
	tl.Object
	ImplementsInputCheckPasswordSRP()
}

// There is no password
type InputCheckPasswordEmpty struct{}

func (*InputCheckPasswordEmpty) CRC() uint32 {
	return 0x9880f658
}

func (*InputCheckPasswordEmpty) ImplementsInputCheckPasswordSRP() {}

// Constructor for checking the validity of a 2FA SRP password (see [SRP](https://core.telegram.org/api/srp))
type InputCheckPasswordSRPObj struct {
	SRPID int64
	A     []byte
	M1    []byte
}

func (*InputCheckPasswordSRPObj) CRC() uint32 {
	return 0xd27ff082
}

func (*InputCheckPasswordSRPObj) ImplementsInputCheckPasswordSRP() {}

type InputCollectible interface {
	tl.Object
	ImplementsInputCollectible()
}
type InputCollectiblePhone struct {
	Phone string
}

func (*InputCollectiblePhone) CRC() uint32 {
	return 0xa2e214a4
}

func (*InputCollectiblePhone) ImplementsInputCollectible() {}

type InputCollectibleUsername struct {
	Username string
}

func (*InputCollectibleUsername) CRC() uint32 {
	return 0xe39460a9
}

func (*InputCollectibleUsername) ImplementsInputCollectible() {}

type InputDialogPeer interface {
	tl.Object
	ImplementsInputDialogPeer()
}

// A peer
type InputDialogPeerObj struct {
	Peer InputPeer
}

func (*InputDialogPeerObj) CRC() uint32 {
	return 0xfcaafeb7
}

func (*InputDialogPeerObj) ImplementsInputDialogPeer() {}

// All peers in a [peer folder](https://core.telegram.org/api/folders#peer-folders)
type InputDialogPeerFolder struct {
	FolderID int32
}

func (*InputDialogPeerFolder) CRC() uint32 {
	return 0x64600527
}

func (*InputDialogPeerFolder) ImplementsInputDialogPeer() {}

type InputDocument interface {
	tl.Object
	ImplementsInputDocument()
}

// Defines a document for subsequent interaction.
type InputDocumentObj struct {
	ID            int64
	AccessHash    int64
	FileReference []byte
}

func (*InputDocumentObj) CRC() uint32 {
	return 0x1abfb575
}

func (*InputDocumentObj) ImplementsInputDocument() {}

// Empty constructor.
type InputDocumentEmpty struct{}

func (*InputDocumentEmpty) CRC() uint32 {
	return 0x72f0eaae
}

func (*InputDocumentEmpty) ImplementsInputDocument() {}

type InputEncryptedFile interface {
	tl.Object
	ImplementsInputEncryptedFile()
}

// Sets forwarded encrypted file for attachment.
type InputEncryptedFileObj struct {
	ID         int64
	AccessHash int64
}

func (*InputEncryptedFileObj) CRC() uint32 {
	return 0x5a17b5e5
}

func (*InputEncryptedFileObj) ImplementsInputEncryptedFile() {}

// Assigns a new big encrypted file (over 10 MB in size), saved in parts using the method [upload.saveBigFilePart](https://core.telegram.org/method/upload.saveBigFilePart).
type InputEncryptedFileBigUploaded struct {
	ID             int64
	Parts          int32
	KeyFingerprint int32
}

func (*InputEncryptedFileBigUploaded) CRC() uint32 {
	return 0x2dc173c8
}

func (*InputEncryptedFileBigUploaded) ImplementsInputEncryptedFile() {}

// Empty constructor.
type InputEncryptedFileEmpty struct{}

func (*InputEncryptedFileEmpty) CRC() uint32 {
	return 0x1837c364
}

func (*InputEncryptedFileEmpty) ImplementsInputEncryptedFile() {}

// Sets new encrypted file saved by parts using upload.saveFilePart method.
type InputEncryptedFileUploaded struct {
	ID             int64
	Parts          int32
	Md5Checksum    string
	KeyFingerprint int32
}

func (*InputEncryptedFileUploaded) CRC() uint32 {
	return 0x64bd0306
}

func (*InputEncryptedFileUploaded) ImplementsInputEncryptedFile() {}

type InputFile interface {
	tl.Object
	ImplementsInputFile()
}

// Defines a file saved in parts using the method [upload.saveFilePart](https://core.telegram.org/method/upload.saveFilePart).
type InputFileObj struct {
	ID          int64
	Parts       int32
	Name        string
	Md5Checksum string
}

func (*InputFileObj) CRC() uint32 {
	return 0xf52ff27f
}

func (*InputFileObj) ImplementsInputFile() {}

// Assigns a big file (over 10 MB in size), saved in part using the method [upload.saveBigFilePart](https://core.telegram.org/method/upload.saveBigFilePart).
type InputFileBig struct {
	ID    int64
	Parts int32
	Name  string
}

func (*InputFileBig) CRC() uint32 {
	return 0xfa4f0bb5
}

func (*InputFileBig) ImplementsInputFile() {}

type InputFileLocation interface {
	tl.Object
	ImplementsInputFileLocation()
}

// Document location (video, voice, audio, basically every type except photo)
type InputDocumentFileLocation struct {
	ID            int64
	AccessHash    int64
	FileReference []byte
	ThumbSize     string
}

func (*InputDocumentFileLocation) CRC() uint32 {
	return 0xbad07584
}

func (*InputDocumentFileLocation) ImplementsInputFileLocation() {}

// Location of encrypted secret chat file.
type InputEncryptedFileLocation struct {
	ID         int64
	AccessHash int64
}

func (*InputEncryptedFileLocation) CRC() uint32 {
	return 0xf5235d55
}

func (*InputEncryptedFileLocation) ImplementsInputFileLocation() {}

// DEPRECATED location of a photo
type InputFileLocationObj struct {
	VolumeID      int64
	LocalID       int32
	Secret        int64
	FileReference []byte
}

func (*InputFileLocationObj) CRC() uint32 {
	return 0xdfdaabe1
}

func (*InputFileLocationObj) ImplementsInputFileLocation() {}

// Chunk of a livestream
type InputGroupCallStream struct {
	Call         *InputGroupCall
	TimeMs       int64
	Scale        int32
	VideoChannel int32 `tl:"flag:0"`
	VideoQuality int32 `tl:"flag:0"`
}

func (*InputGroupCallStream) CRC() uint32 {
	return 0x598a92a
}

func (*InputGroupCallStream) FlagIndex() int {
	return 0
}

func (*InputGroupCallStream) ImplementsInputFileLocation() {}

// Location of profile photo of channel/group/supergroup/user
type InputPeerPhotoFileLocation struct {
	Big     bool `tl:"flag:0,encoded_in_bitflags"`
	Peer    InputPeer
	PhotoID int64
}

func (*InputPeerPhotoFileLocation) CRC() uint32 {
	return 0x37257e99
}

func (*InputPeerPhotoFileLocation) FlagIndex() int {
	return 0
}

func (*InputPeerPhotoFileLocation) ImplementsInputFileLocation() {}

// Use this object to download a photo with [upload.getFile](https://core.telegram.org/method/upload.getFile) method
type InputPhotoFileLocation struct {
	ID            int64
	AccessHash    int64
	FileReference []byte
	ThumbSize     string
}

func (*InputPhotoFileLocation) CRC() uint32 {
	return 0x40181ffe
}

func (*InputPhotoFileLocation) ImplementsInputFileLocation() {}

// DEPRECATED legacy photo file location
type InputPhotoLegacyFileLocation struct {
	ID            int64
	AccessHash    int64
	FileReference []byte
	VolumeID      int64
	LocalID       int32
	Secret        int64
}

func (*InputPhotoLegacyFileLocation) CRC() uint32 {
	return 0xd83466f3
}

func (*InputPhotoLegacyFileLocation) ImplementsInputFileLocation() {}

// Location of encrypted telegram [passport](https://core.telegram.org/passport) file.
type InputSecureFileLocation struct {
	ID         int64
	AccessHash int64
}

func (*InputSecureFileLocation) CRC() uint32 {
	return 0xcbc7ee28
}

func (*InputSecureFileLocation) ImplementsInputFileLocation() {}

// Location of stickerset thumbnail (see [files](https://core.telegram.org/api/files))
type InputStickerSetThumb struct {
	Stickerset   InputStickerSet
	ThumbVersion int32
}

func (*InputStickerSetThumb) CRC() uint32 {
	return 0x9d84f3db
}

func (*InputStickerSetThumb) ImplementsInputFileLocation() {}

// Used to download a JSON file that will contain all personal data related to features that do not have a specialized [takeout method](https://core.telegram.org/api/takeout) yet, see [here Â»](https://core.telegram.org/api/takeout) for more info on the takeout API.
type InputTakeoutFileLocation struct{}

func (*InputTakeoutFileLocation) CRC() uint32 {
	return 0x29be5899
}

func (*InputTakeoutFileLocation) ImplementsInputFileLocation() {}

type InputGame interface {
	tl.Object
	ImplementsInputGame()
}

// Indicates an already sent game
type InputGameID struct {
	ID         int64
	AccessHash int64
}

func (*InputGameID) CRC() uint32 {
	return 0x32c3e77
}

func (*InputGameID) ImplementsInputGame() {}

// Game by short name
type InputGameShortName struct {
	BotID     InputUser
	ShortName string
}

func (*InputGameShortName) CRC() uint32 {
	return 0xc331e80a
}

func (*InputGameShortName) ImplementsInputGame() {}

type InputGeoPoint interface {
	tl.Object
	ImplementsInputGeoPoint()
}

// Defines a GeoPoint by its coordinates.
type InputGeoPointObj struct {
	Lat            float64
	Long           float64
	AccuracyRadius int32 `tl:"flag:0"`
}

func (*InputGeoPointObj) CRC() uint32 {
	return 0x48222faf
}

func (*InputGeoPointObj) FlagIndex() int {
	return 0
}

func (*InputGeoPointObj) ImplementsInputGeoPoint() {}

// Empty GeoPoint constructor.
type InputGeoPointEmpty struct{}

func (*InputGeoPointEmpty) CRC() uint32 {
	return 0xe4c123d6
}

func (*InputGeoPointEmpty) ImplementsInputGeoPoint() {}

type InputInvoice interface {
	tl.Object
	ImplementsInputInvoice()
}

// An invoice contained in a [messageMediaInvoice](https://core.telegram.org/constructor/messageMediaInvoice) message.
type InputInvoiceMessage struct {
	Peer  InputPeer
	MsgID int32
}

func (*InputInvoiceMessage) CRC() uint32 {
	return 0xc5b56859
}

func (*InputInvoiceMessage) ImplementsInputInvoice() {}

// Used if the user wishes to start a channel [giveaway](https://core.telegram.org/api/giveaways) or send some [giftcodes](https://core.telegram.org/api/giveaways) to members of a channel, in exchange for [boosts](https://core.telegram.org/api/boost).
type InputInvoicePremiumGiftCode struct {
	Purpose InputStorePaymentPurpose
	Option  *PremiumGiftCodeOption
}

func (*InputInvoicePremiumGiftCode) CRC() uint32 {
	return 0x98986c0d
}

func (*InputInvoicePremiumGiftCode) ImplementsInputInvoice() {}

// An invoice slug taken from an [invoice deep link](https://core.telegram.org/api/links#invoice-links) or from the <a href="/api/config#premium-invoice-slug">`premium_invoice_slug` app config parameter Â»</a>
type InputInvoiceSlug struct {
	Slug string
}

func (*InputInvoiceSlug) CRC() uint32 {
	return 0xc326caef
}

func (*InputInvoiceSlug) ImplementsInputInvoice() {}

type InputInvoiceStars struct {
	Option *StarsTopupOption
}

func (*InputInvoiceStars) CRC() uint32 {
	return 0x1da33ad8
}

func (*InputInvoiceStars) ImplementsInputInvoice() {}

type InputMedia interface {
	tl.Object
	ImplementsInputMedia()
}

// Phone book contact
type InputMediaContact struct {
	PhoneNumber string
	FirstName   string
	LastName    string
	Vcard       string
}

func (*InputMediaContact) CRC() uint32 {
	return 0xf8ab7dfb
}

func (*InputMediaContact) ImplementsInputMedia() {}

// Send a [dice-based animated sticker](https://core.telegram.org/api/dice)
type InputMediaDice struct {
	Emoticon string
}

func (*InputMediaDice) CRC() uint32 {
	return 0xe66fbf7b
}

func (*InputMediaDice) ImplementsInputMedia() {}

// Forwarded document
type InputMediaDocument struct {
	Spoiler    bool `tl:"flag:2,encoded_in_bitflags"`
	ID         InputDocument
	TtlSeconds int32  `tl:"flag:0"`
	Query      string `tl:"flag:1"`
}

func (*InputMediaDocument) CRC() uint32 {
	return 0x33473058
}

func (*InputMediaDocument) FlagIndex() int {
	return 0
}

func (*InputMediaDocument) ImplementsInputMedia() {}

// Document that will be downloaded by the telegram servers
type InputMediaDocumentExternal struct {
	Spoiler    bool `tl:"flag:1,encoded_in_bitflags"`
	URL        string
	TtlSeconds int32 `tl:"flag:0"`
}

func (*InputMediaDocumentExternal) CRC() uint32 {
	return 0xfb52dc99
}

func (*InputMediaDocumentExternal) FlagIndex() int {
	return 0
}

func (*InputMediaDocumentExternal) ImplementsInputMedia() {}

// Empty media content of a message.
type InputMediaEmpty struct{}

func (*InputMediaEmpty) CRC() uint32 {
	return 0x9664f57f
}

func (*InputMediaEmpty) ImplementsInputMedia() {}

// A game
type InputMediaGame struct {
	ID InputGame
}

func (*InputMediaGame) CRC() uint32 {
	return 0xd33f43f3
}

func (*InputMediaGame) ImplementsInputMedia() {}

// [Live geolocation](https://core.telegram.org/api/live-location)
type InputMediaGeoLive struct {
	Stopped                     bool `tl:"flag:0,encoded_in_bitflags"`
	GeoPoint                    InputGeoPoint
	Heading                     int32 `tl:"flag:2"`
	Period                      int32 `tl:"flag:1"`
	ProximityNotificationRadius int32 `tl:"flag:3"`
}

func (*InputMediaGeoLive) CRC() uint32 {
	return 0x971fa843
}

func (*InputMediaGeoLive) FlagIndex() int {
	return 0
}

func (*InputMediaGeoLive) ImplementsInputMedia() {}

// Map.
type InputMediaGeoPoint struct {
	GeoPoint InputGeoPoint
}

func (*InputMediaGeoPoint) CRC() uint32 {
	return 0xf9c44144
}

func (*InputMediaGeoPoint) ImplementsInputMedia() {}

// Generated invoice of a [bot payment](https://core.telegram.org/bots/payments)
type InputMediaInvoice struct {
	Title         string
	Description   string
	Photo         *InputWebDocument `tl:"flag:0"`
	Invoice       *Invoice
	Payload       []byte
	Provider      string `tl:"flag:3"`
	ProviderData  *DataJson
	StartParam    string     `tl:"flag:1"`
	ExtendedMedia InputMedia `tl:"flag:2"`
}

func (*InputMediaInvoice) CRC() uint32 {
	return 0x405fef0d
}

func (*InputMediaInvoice) FlagIndex() int {
	return 0
}

func (*InputMediaInvoice) ImplementsInputMedia() {}

type InputMediaPaidMedia struct {
	StarsAmount   int64
	ExtendedMedia []InputMedia
}

func (*InputMediaPaidMedia) CRC() uint32 {
	return 0xaa661fc3
}

func (*InputMediaPaidMedia) ImplementsInputMedia() {}

// Forwarded photo
type InputMediaPhoto struct {
	Spoiler    bool `tl:"flag:1,encoded_in_bitflags"`
	ID         InputPhoto
	TtlSeconds int32 `tl:"flag:0"`
}

func (*InputMediaPhoto) CRC() uint32 {
	return 0xb3ba0635
}

func (*InputMediaPhoto) FlagIndex() int {
	return 0
}

func (*InputMediaPhoto) ImplementsInputMedia() {}

// New photo that will be uploaded by the server using the specified URL
type InputMediaPhotoExternal struct {
	Spoiler    bool `tl:"flag:1,encoded_in_bitflags"`
	URL        string
	TtlSeconds int32 `tl:"flag:0"`
}

func (*InputMediaPhotoExternal) CRC() uint32 {
	return 0xe5bbfe1a
}

func (*InputMediaPhotoExternal) FlagIndex() int {
	return 0
}

func (*InputMediaPhotoExternal) ImplementsInputMedia() {}

// A poll
type InputMediaPoll struct {
	Poll             *Poll
	CorrectAnswers   [][]byte        `tl:"flag:0"`
	Solution         string          `tl:"flag:1"`
	SolutionEntities []MessageEntity `tl:"flag:1"`
}

func (*InputMediaPoll) CRC() uint32 {
	return 0xf94e5f1
}

func (*InputMediaPoll) FlagIndex() int {
	return 0
}

func (*InputMediaPoll) ImplementsInputMedia() {}

// Forwarded story
type InputMediaStory struct {
	Peer InputPeer
	ID   int32
}

func (*InputMediaStory) CRC() uint32 {
	return 0x89fdd778
}

func (*InputMediaStory) ImplementsInputMedia() {}

// New document
type InputMediaUploadedDocument struct {
	NosoundVideo bool `tl:"flag:3,encoded_in_bitflags"`
	ForceFile    bool `tl:"flag:4,encoded_in_bitflags"`
	Spoiler      bool `tl:"flag:5,encoded_in_bitflags"`
	File         InputFile
	Thumb        InputFile `tl:"flag:2"`
	MimeType     string
	Attributes   []DocumentAttribute
	Stickers     []InputDocument `tl:"flag:0"`
	TtlSeconds   int32           `tl:"flag:1"`
}

func (*InputMediaUploadedDocument) CRC() uint32 {
	return 0x5b38c6c1
}

func (*InputMediaUploadedDocument) FlagIndex() int {
	return 0
}

func (*InputMediaUploadedDocument) ImplementsInputMedia() {}

// Photo
type InputMediaUploadedPhoto struct {
	Spoiler    bool `tl:"flag:2,encoded_in_bitflags"`
	File       InputFile
	Stickers   []InputDocument `tl:"flag:0"`
	TtlSeconds int32           `tl:"flag:1"`
}

func (*InputMediaUploadedPhoto) CRC() uint32 {
	return 0x1e287d04
}

func (*InputMediaUploadedPhoto) FlagIndex() int {
	return 0
}

func (*InputMediaUploadedPhoto) ImplementsInputMedia() {}

// Can be used to send a venue geolocation.
type InputMediaVenue struct {
	GeoPoint  InputGeoPoint
	Title     string
	Address   string
	Provider  string
	VenueID   string
	VenueType string
}

func (*InputMediaVenue) CRC() uint32 {
	return 0xc13d1c11
}

func (*InputMediaVenue) ImplementsInputMedia() {}

// Specifies options that will be used to generate the link preview for the caption, or even a standalone link preview without an attached message.
type InputMediaWebPage struct {
	ForceLargeMedia bool `tl:"flag:0,encoded_in_bitflags"`
	ForceSmallMedia bool `tl:"flag:1,encoded_in_bitflags"`
	Optional        bool `tl:"flag:2,encoded_in_bitflags"`
	URL             string
}

func (*InputMediaWebPage) CRC() uint32 {
	return 0xc21b8849
}

func (*InputMediaWebPage) FlagIndex() int {
	return 0
}

func (*InputMediaWebPage) ImplementsInputMedia() {}

type InputMessage interface {
	tl.Object
	ImplementsInputMessage()
}

// Used by bots for fetching information about the message that originated a callback query
type InputMessageCallbackQuery struct {
	ID      int32
	QueryID int64
}

func (*InputMessageCallbackQuery) CRC() uint32 {
	return 0xacfa1a7e
}

func (*InputMessageCallbackQuery) ImplementsInputMessage() {}

// Message by ID
type InputMessageID struct {
	ID int32
}

func (*InputMessageID) CRC() uint32 {
	return 0xa676a322
}

func (*InputMessageID) ImplementsInputMessage() {}

// Pinned message
type InputMessagePinned struct{}

func (*InputMessagePinned) CRC() uint32 {
	return 0x86872538
}

func (*InputMessagePinned) ImplementsInputMessage() {}

// Message to which the specified message replies to
type InputMessageReplyTo struct {
	ID int32
}

func (*InputMessageReplyTo) CRC() uint32 {
	return 0xbad88395
}

func (*InputMessageReplyTo) ImplementsInputMessage() {}

type InputNotifyPeer interface {
	tl.Object
	ImplementsInputNotifyPeer()
}

// All [channels](https://core.telegram.org/api/channel)
type InputNotifyBroadcasts struct{}

func (*InputNotifyBroadcasts) CRC() uint32 {
	return 0xb1db7c7e
}

func (*InputNotifyBroadcasts) ImplementsInputNotifyPeer() {}

// Notifications generated by all groups.
type InputNotifyChats struct{}

func (*InputNotifyChats) CRC() uint32 {
	return 0x4a95e84e
}

func (*InputNotifyChats) ImplementsInputNotifyPeer() {}

// Notifications generated by a [topic](https://core.telegram.org/api/forum#forum-topics) in a [forum](https://core.telegram.org/api/forum).
type InputNotifyForumTopic struct {
	Peer     InputPeer
	TopMsgID int32
}

func (*InputNotifyForumTopic) CRC() uint32 {
	return 0x5c467992
}

func (*InputNotifyForumTopic) ImplementsInputNotifyPeer() {}

// Notifications generated by a certain user or group.
type InputNotifyPeerObj struct {
	Peer InputPeer
}

func (*InputNotifyPeerObj) CRC() uint32 {
	return 0xb8bc5b0c
}

func (*InputNotifyPeerObj) ImplementsInputNotifyPeer() {}

// Notifications generated by all users.
type InputNotifyUsers struct{}

func (*InputNotifyUsers) CRC() uint32 {
	return 0x193b4417
}

func (*InputNotifyUsers) ImplementsInputNotifyPeer() {}

type InputPaymentCredentials interface {
	tl.Object
	ImplementsInputPaymentCredentials()
}

// Payment credentials
type InputPaymentCredentialsObj struct {
	Save bool `tl:"flag:0,encoded_in_bitflags"`
	Data *DataJson
}

func (*InputPaymentCredentialsObj) CRC() uint32 {
	return 0x3417d728
}

func (*InputPaymentCredentialsObj) FlagIndex() int {
	return 0
}

func (*InputPaymentCredentialsObj) ImplementsInputPaymentCredentials() {}

// Apple pay payment credentials
type InputPaymentCredentialsApplePay struct {
	PaymentData *DataJson
}

func (*InputPaymentCredentialsApplePay) CRC() uint32 {
	return 0xaa1c39f
}

func (*InputPaymentCredentialsApplePay) ImplementsInputPaymentCredentials() {}

// Google Pay payment credentials
type InputPaymentCredentialsGooglePay struct {
	PaymentToken *DataJson
}

func (*InputPaymentCredentialsGooglePay) CRC() uint32 {
	return 0x8ac32801
}

func (*InputPaymentCredentialsGooglePay) ImplementsInputPaymentCredentials() {}

// Saved payment credentials
type InputPaymentCredentialsSaved struct {
	ID          string
	TmpPassword []byte
}

func (*InputPaymentCredentialsSaved) CRC() uint32 {
	return 0xc10eb2cf
}

func (*InputPaymentCredentialsSaved) ImplementsInputPaymentCredentials() {}

type InputPeer interface {
	tl.Object
	ImplementsInputPeer()
}

// Defines a channel for further interaction.
type InputPeerChannel struct {
	ChannelID  int64
	AccessHash int64
}

func (*InputPeerChannel) CRC() uint32 {
	return 0x27bcbbfc
}

func (*InputPeerChannel) ImplementsInputPeer() {}

// Defines a [min](https://core.telegram.org/api/min) channel that was seen in a certain message of a certain chat.
type InputPeerChannelFromMessage struct {
	Peer      InputPeer
	MsgID     int32
	ChannelID int64
}

func (*InputPeerChannelFromMessage) CRC() uint32 {
	return 0xbd2a0840
}

func (*InputPeerChannelFromMessage) ImplementsInputPeer() {}

// Defines a chat for further interaction.
type InputPeerChat struct {
	ChatID int64
}

func (*InputPeerChat) CRC() uint32 {
	return 0x35a95cb9
}

func (*InputPeerChat) ImplementsInputPeer() {}

// An empty constructor, no user or chat is defined.
type InputPeerEmpty struct{}

func (*InputPeerEmpty) CRC() uint32 {
	return 0x7f3b18ea
}

func (*InputPeerEmpty) ImplementsInputPeer() {}

// Defines the current user.
type InputPeerSelf struct{}

func (*InputPeerSelf) CRC() uint32 {
	return 0x7da07ec9
}

func (*InputPeerSelf) ImplementsInputPeer() {}

// Defines a user for further interaction.
type InputPeerUser struct {
	UserID     int64
	AccessHash int64
}

func (*InputPeerUser) CRC() uint32 {
	return 0xdde8a54c
}

func (*InputPeerUser) ImplementsInputPeer() {}

// Defines a [min](https://core.telegram.org/api/min) user that was seen in a certain message of a certain chat.
type InputPeerUserFromMessage struct {
	Peer   InputPeer
	MsgID  int32
	UserID int64
}

func (*InputPeerUserFromMessage) CRC() uint32 {
	return 0xa87b0a1c
}

func (*InputPeerUserFromMessage) ImplementsInputPeer() {}

type InputPhoto interface {
	tl.Object
	ImplementsInputPhoto()
}

// Defines a photo for further interaction.
type InputPhotoObj struct {
	ID            int64
	AccessHash    int64
	FileReference []byte
}

func (*InputPhotoObj) CRC() uint32 {
	return 0x3bb3b94a
}

func (*InputPhotoObj) ImplementsInputPhoto() {}

// Empty constructor.
type InputPhotoEmpty struct{}

func (*InputPhotoEmpty) CRC() uint32 {
	return 0x1cd7bf0d
}

func (*InputPhotoEmpty) ImplementsInputPhoto() {}

type InputPrivacyRule interface {
	tl.Object
	ImplementsInputPrivacyRule()
}

// Allow all users
type InputPrivacyValueAllowAll struct{}

func (*InputPrivacyValueAllowAll) CRC() uint32 {
	return 0x184b35ce
}

func (*InputPrivacyValueAllowAll) ImplementsInputPrivacyRule() {}

// Allow only participants of certain chats
type InputPrivacyValueAllowChatParticipants struct {
	Chats []int64
}

func (*InputPrivacyValueAllowChatParticipants) CRC() uint32 {
	return 0x840649cf
}

func (*InputPrivacyValueAllowChatParticipants) ImplementsInputPrivacyRule() {}

// Allow only [close friends Â»](https://core.telegram.org/api/privacy)
type InputPrivacyValueAllowCloseFriends struct{}

func (*InputPrivacyValueAllowCloseFriends) CRC() uint32 {
	return 0x2f453e49
}

func (*InputPrivacyValueAllowCloseFriends) ImplementsInputPrivacyRule() {}

// Allow only contacts
type InputPrivacyValueAllowContacts struct{}

func (*InputPrivacyValueAllowContacts) CRC() uint32 {
	return 0xd09e07b
}

func (*InputPrivacyValueAllowContacts) ImplementsInputPrivacyRule() {}

type InputPrivacyValueAllowPremium struct{}

func (*InputPrivacyValueAllowPremium) CRC() uint32 {
	return 0x77cdc9f1
}

func (*InputPrivacyValueAllowPremium) ImplementsInputPrivacyRule() {}

// Allow only certain users
type InputPrivacyValueAllowUsers struct {
	Users []InputUser
}

func (*InputPrivacyValueAllowUsers) CRC() uint32 {
	return 0x131cc67f
}

func (*InputPrivacyValueAllowUsers) ImplementsInputPrivacyRule() {}

// Disallow all
type InputPrivacyValueDisallowAll struct{}

func (*InputPrivacyValueDisallowAll) CRC() uint32 {
	return 0xd66b66c9
}

func (*InputPrivacyValueDisallowAll) ImplementsInputPrivacyRule() {}

// Disallow only participants of certain chats
type InputPrivacyValueDisallowChatParticipants struct {
	Chats []int64
}

func (*InputPrivacyValueDisallowChatParticipants) CRC() uint32 {
	return 0xe94f0f86
}

func (*InputPrivacyValueDisallowChatParticipants) ImplementsInputPrivacyRule() {}

// Disallow only contacts
type InputPrivacyValueDisallowContacts struct{}

func (*InputPrivacyValueDisallowContacts) CRC() uint32 {
	return 0xba52007
}

func (*InputPrivacyValueDisallowContacts) ImplementsInputPrivacyRule() {}

// Disallow only certain users
type InputPrivacyValueDisallowUsers struct {
	Users []InputUser
}

func (*InputPrivacyValueDisallowUsers) CRC() uint32 {
	return 0x90110467
}

func (*InputPrivacyValueDisallowUsers) ImplementsInputPrivacyRule() {}

type InputQuickReplyShortcut interface {
	tl.Object
	ImplementsInputQuickReplyShortcut()
}
type InputQuickReplyShortcutObj struct {
	Shortcut string
}

func (*InputQuickReplyShortcutObj) CRC() uint32 {
	return 0x24596d41
}

func (*InputQuickReplyShortcutObj) ImplementsInputQuickReplyShortcut() {}

type InputQuickReplyShortcutID struct {
	ShortcutID int32
}

func (*InputQuickReplyShortcutID) CRC() uint32 {
	return 0x1190cf1
}

func (*InputQuickReplyShortcutID) ImplementsInputQuickReplyShortcut() {}

type InputReplyTo interface {
	tl.Object
	ImplementsInputReplyTo()
}

// Reply to a message.
type InputReplyToMessage struct {
	ReplyToMsgID  int32
	TopMsgID      int32           `tl:"flag:0"`
	ReplyToPeerID InputPeer       `tl:"flag:1"`
	QuoteText     string          `tl:"flag:2"`
	QuoteEntities []MessageEntity `tl:"flag:3"`
	QuoteOffset   int32           `tl:"flag:4"`
}

func (*InputReplyToMessage) CRC() uint32 {
	return 0x22c0f6d5
}

func (*InputReplyToMessage) FlagIndex() int {
	return 0
}

func (*InputReplyToMessage) ImplementsInputReplyTo() {}

// Reply to a story.
type InputReplyToStory struct {
	Peer    InputPeer
	StoryID int32
}

func (*InputReplyToStory) CRC() uint32 {
	return 0x5881323a
}

func (*InputReplyToStory) ImplementsInputReplyTo() {}

type InputSecureFile interface {
	tl.Object
	ImplementsInputSecureFile()
}

// Pre-uploaded [passport](https://core.telegram.org/passport) file, for more info [see the passport docs Â»](https://core.telegram.org/passport/encryption#inputsecurefile)
type InputSecureFileObj struct {
	ID         int64
	AccessHash int64
}

func (*InputSecureFileObj) CRC() uint32 {
	return 0x5367e5be
}

func (*InputSecureFileObj) ImplementsInputSecureFile() {}

// Uploaded secure file, for more info [see the passport docs Â»](https://core.telegram.org/passport/encryption#inputsecurefile)
type InputSecureFileUploaded struct {
	ID          int64
	Parts       int32
	Md5Checksum string
	FileHash    []byte
	Secret      []byte
}

func (*InputSecureFileUploaded) CRC() uint32 {
	return 0x3334b0f0
}

func (*InputSecureFileUploaded) ImplementsInputSecureFile() {}

type InputStickerSet interface {
	tl.Object
	ImplementsInputStickerSet()
}

// Animated emojis stickerset
type InputStickerSetAnimatedEmoji struct{}

func (*InputStickerSetAnimatedEmoji) CRC() uint32 {
	return 0x28703c8
}

func (*InputStickerSetAnimatedEmoji) ImplementsInputStickerSet() {}

// Animated emoji reaction stickerset (contains animations to play when a user clicks on a given animated emoji)
type InputStickerSetAnimatedEmojiAnimations struct{}

func (*InputStickerSetAnimatedEmojiAnimations) CRC() uint32 {
	return 0xcde3739
}

func (*InputStickerSetAnimatedEmojiAnimations) ImplementsInputStickerSet() {}

// Used for fetching [animated dice stickers](https://core.telegram.org/api/dice)
type InputStickerSetDice struct {
	Emoticon string
}

func (*InputStickerSetDice) CRC() uint32 {
	return 0xe67f520e
}

func (*InputStickerSetDice) ImplementsInputStickerSet() {}

// Default [custom emoji status](https://core.telegram.org/api/emoji-status) stickerset for channel statuses
type InputStickerSetEmojiChannelDefaultStatuses struct{}

func (*InputStickerSetEmojiChannelDefaultStatuses) CRC() uint32 {
	return 0x49748553
}

func (*InputStickerSetEmojiChannelDefaultStatuses) ImplementsInputStickerSet() {}

// Default [custom emoji status](https://core.telegram.org/api/emoji-status) stickerset
type InputStickerSetEmojiDefaultStatuses struct{}

func (*InputStickerSetEmojiDefaultStatuses) CRC() uint32 {
	return 0x29d0f5ee
}

func (*InputStickerSetEmojiDefaultStatuses) ImplementsInputStickerSet() {}

// Default [custom emoji](https://core.telegram.org/api/custom-emoji) stickerset for [forum topic icons](https://core.telegram.org/api/forum#forum-topics)
type InputStickerSetEmojiDefaultTopicIcons struct{}

func (*InputStickerSetEmojiDefaultTopicIcons) CRC() uint32 {
	return 0x44c1f8e9
}

func (*InputStickerSetEmojiDefaultTopicIcons) ImplementsInputStickerSet() {}

// Generic animation stickerset containing animations to play when [reacting to messages using a normal emoji without a custom animation](https://core.telegram.org/api/reactions)
type InputStickerSetEmojiGenericAnimations struct{}

func (*InputStickerSetEmojiGenericAnimations) CRC() uint32 {
	return 0x4c4d4ce
}

func (*InputStickerSetEmojiGenericAnimations) ImplementsInputStickerSet() {}

// Empty constructor
type InputStickerSetEmpty struct{}

func (*InputStickerSetEmpty) CRC() uint32 {
	return 0xffb62b95
}

func (*InputStickerSetEmpty) ImplementsInputStickerSet() {}

// Stickerset by ID
type InputStickerSetID struct {
	ID         int64
	AccessHash int64
}

func (*InputStickerSetID) CRC() uint32 {
	return 0x9de7a269
}

func (*InputStickerSetID) ImplementsInputStickerSet() {}

// Stickers to show when receiving a gifted Telegram Premium subscription
type InputStickerSetPremiumGifts struct{}

func (*InputStickerSetPremiumGifts) CRC() uint32 {
	return 0xc88b3b02
}

func (*InputStickerSetPremiumGifts) ImplementsInputStickerSet() {}

// Stickerset by short name, from a [stickerset deep link Â»](https://core.telegram.org/api/links#stickerset-links)
type InputStickerSetShortName struct {
	ShortName string
}

func (*InputStickerSetShortName) CRC() uint32 {
	return 0x861cc8a0
}

func (*InputStickerSetShortName) ImplementsInputStickerSet() {}

type InputStickeredMedia interface {
	tl.Object
	ImplementsInputStickeredMedia()
}

// A document with stickers attached
type InputStickeredMediaDocument struct {
	ID InputDocument
}

func (*InputStickeredMediaDocument) CRC() uint32 {
	return 0x438865b
}

func (*InputStickeredMediaDocument) ImplementsInputStickeredMedia() {}

// A photo with stickers attached
type InputStickeredMediaPhoto struct {
	ID InputPhoto
}

func (*InputStickeredMediaPhoto) CRC() uint32 {
	return 0x4a992157
}

func (*InputStickeredMediaPhoto) ImplementsInputStickeredMedia() {}

type InputStorePaymentPurpose interface {
	tl.Object
	ImplementsInputStorePaymentPurpose()
}

// Info about a gifted Telegram Premium purchase
type InputStorePaymentGiftPremium struct {
	UserID   InputUser
	Currency string
	Amount   int64
}

func (*InputStorePaymentGiftPremium) CRC() uint32 {
	return 0x616f7fe8
}

func (*InputStorePaymentGiftPremium) ImplementsInputStorePaymentPurpose() {}

// Used to gift [Telegram Premium](https://core.telegram.org/api/premium) subscriptions only to some specific subscribers of a channel or to some of our contacts, see [here Â»](https://core.telegram.org/api/giveaways) for more info on giveaways and gifts.
type InputStorePaymentPremiumGiftCode struct {
	Users     []InputUser
	BoostPeer InputPeer `tl:"flag:0"`
	Currency  string
	Amount    int64
}

func (*InputStorePaymentPremiumGiftCode) CRC() uint32 {
	return 0xa3805f3f
}

func (*InputStorePaymentPremiumGiftCode) FlagIndex() int {
	return 0
}

func (*InputStorePaymentPremiumGiftCode) ImplementsInputStorePaymentPurpose() {}

// Used to pay for a [giveaway, see here Â»](https://core.telegram.org/api/giveaways) for more info.
type InputStorePaymentPremiumGiveaway struct {
	OnlyNewSubscribers bool `tl:"flag:0,encoded_in_bitflags"`
	WinnersAreVisible  bool `tl:"flag:3,encoded_in_bitflags"`
	BoostPeer          InputPeer
	AdditionalPeers    []InputPeer `tl:"flag:1"`
	CountriesIso2      []string    `tl:"flag:2"`
	PrizeDescription   string      `tl:"flag:4"`
	RandomID           int64
	UntilDate          int32
	Currency           string
	Amount             int64
}

func (*InputStorePaymentPremiumGiveaway) CRC() uint32 {
	return 0x160544ca
}

func (*InputStorePaymentPremiumGiveaway) FlagIndex() int {
	return 0
}

func (*InputStorePaymentPremiumGiveaway) ImplementsInputStorePaymentPurpose() {}

// Info about a Telegram Premium purchase
type InputStorePaymentPremiumSubscription struct {
	Restore bool `tl:"flag:0,encoded_in_bitflags"`
	Upgrade bool `tl:"flag:1,encoded_in_bitflags"`
}

func (*InputStorePaymentPremiumSubscription) CRC() uint32 {
	return 0xa6751e66
}

func (*InputStorePaymentPremiumSubscription) FlagIndex() int {
	return 0
}

func (*InputStorePaymentPremiumSubscription) ImplementsInputStorePaymentPurpose() {}

type InputStorePaymentStars struct {
	Stars    int64
	Currency string
	Amount   int64
}

func (*InputStorePaymentStars) CRC() uint32 {
	return 0x4f0ee8df
}

func (*InputStorePaymentStars) ImplementsInputStorePaymentPurpose() {}

type InputTheme interface {
	tl.Object
	ImplementsInputTheme()
}

// Theme
type InputThemeObj struct {
	ID         int64
	AccessHash int64
}

func (*InputThemeObj) CRC() uint32 {
	return 0x3c5693e9
}

func (*InputThemeObj) ImplementsInputTheme() {}

// Theme by theme ID
type InputThemeSlug struct {
	Slug string
}

func (*InputThemeSlug) CRC() uint32 {
	return 0xf5890df1
}

func (*InputThemeSlug) ImplementsInputTheme() {}

type InputUser interface {
	tl.Object
	ImplementsInputUser()
}

// Defines a user for further interaction.
type InputUserObj struct {
	UserID     int64
	AccessHash int64
}

func (*InputUserObj) CRC() uint32 {
	return 0xf21158c6
}

func (*InputUserObj) ImplementsInputUser() {}

// Empty constructor, does not define a user.
type InputUserEmpty struct{}

func (*InputUserEmpty) CRC() uint32 {
	return 0xb98886cf
}

func (*InputUserEmpty) ImplementsInputUser() {}

// Defines a [min](https://core.telegram.org/api/min) user that was seen in a certain message of a certain chat.
type InputUserFromMessage struct {
	Peer   InputPeer
	MsgID  int32
	UserID int64
}

func (*InputUserFromMessage) CRC() uint32 {
	return 0x1da448e2
}

func (*InputUserFromMessage) ImplementsInputUser() {}

// Defines the current user.
type InputUserSelf struct{}

func (*InputUserSelf) CRC() uint32 {
	return 0xf7c1b13f
}

func (*InputUserSelf) ImplementsInputUser() {}

type InputWallPaper interface {
	tl.Object
	ImplementsInputWallPaper()
}

// [Wallpaper](https://core.telegram.org/api/wallpapers)
type InputWallPaperObj struct {
	ID         int64
	AccessHash int64
}

func (*InputWallPaperObj) CRC() uint32 {
	return 0xe630b979
}

func (*InputWallPaperObj) ImplementsInputWallPaper() {}

// [Wallpaper](https://core.telegram.org/api/wallpapers) with no file access hash, used for example when deleting (`unsave=true`) wallpapers using [account.saveWallPaper](https://core.telegram.org/method/account.saveWallPaper), specifying just the wallpaper ID.
type InputWallPaperNoFile struct {
	ID int64
}

func (*InputWallPaperNoFile) CRC() uint32 {
	return 0x967a462e
}

func (*InputWallPaperNoFile) ImplementsInputWallPaper() {}

// [Wallpaper](https://core.telegram.org/api/wallpapers) by slug (a unique ID, obtained from a [wallpaper link Â»](https://core.telegram.org/api/links#wallpaper-links))
type InputWallPaperSlug struct {
	Slug string
}

func (*InputWallPaperSlug) CRC() uint32 {
	return 0x72091c80
}

func (*InputWallPaperSlug) ImplementsInputWallPaper() {}

type InputWebFileLocation interface {
	tl.Object
	ImplementsInputWebFileLocation()
}

// Used to download an album cover for any music file using [upload.getWebFile](https://core.telegram.org/method/upload.getWebFile), see the [webfile docs for more info Â»](https://core.telegram.org/api/files#downloading-webfiles).
type InputWebFileAudioAlbumThumbLocation struct {
	Small     bool          `tl:"flag:2,encoded_in_bitflags"`
	Document  InputDocument `tl:"flag:0"`
	Title     string        `tl:"flag:1"`
	Performer string        `tl:"flag:1"`
}

func (*InputWebFileAudioAlbumThumbLocation) CRC() uint32 {
	return 0xf46fe924
}

func (*InputWebFileAudioAlbumThumbLocation) FlagIndex() int {
	return 0
}

func (*InputWebFileAudioAlbumThumbLocation) ImplementsInputWebFileLocation() {}

// Used to download a server-generated image with the map preview from a [geoPoint](https://core.telegram.org/constructor/geoPoint), see the [webfile docs for more info Â»](https://core.telegram.org/api/files#downloading-webfiles).
type InputWebFileGeoPointLocation struct {
	GeoPoint   InputGeoPoint
	AccessHash int64
	W          int32
	H          int32
	Zoom       int32
	Scale      int32
}

func (*InputWebFileGeoPointLocation) CRC() uint32 {
	return 0x9f2221c9
}

func (*InputWebFileGeoPointLocation) ImplementsInputWebFileLocation() {}

// Location of a remote HTTP(s) file
type InputWebFileLocationObj struct {
	URL        string
	AccessHash int64
}

func (*InputWebFileLocationObj) CRC() uint32 {
	return 0xc239d686
}

func (*InputWebFileLocationObj) ImplementsInputWebFileLocation() {}

type JsonValue interface {
	tl.Object
	ImplementsJsonValue()
}

// JSON array
type JsonArray struct {
	Value []JsonValue
}

func (*JsonArray) CRC() uint32 {
	return 0xf7444763
}

func (*JsonArray) ImplementsJsonValue() {}

// JSON boolean value
type JsonBool struct {
	Value bool
}

func (*JsonBool) CRC() uint32 {
	return 0xc7345e6a
}

func (*JsonBool) ImplementsJsonValue() {}

// null JSON value
type JsonNull struct{}

func (*JsonNull) CRC() uint32 {
	return 0x3f6d7b68
}

func (*JsonNull) ImplementsJsonValue() {}

// JSON numeric value
type JsonNumber struct {
	Value float64
}

func (*JsonNumber) CRC() uint32 {
	return 0x2be0dfa4
}

func (*JsonNumber) ImplementsJsonValue() {}

// JSON object value
type JsonObject struct {
	Value []*JsonObjectValue
}

func (*JsonObject) CRC() uint32 {
	return 0x99c1d49d
}

func (*JsonObject) ImplementsJsonValue() {}

// JSON string
type JsonString struct {
	Value string
}

func (*JsonString) CRC() uint32 {
	return 0xb71e767a
}

func (*JsonString) ImplementsJsonValue() {}

type KeyboardButton interface {
	tl.Object
	ImplementsKeyboardButton()
}
type InputKeyboardButtonRequestPeer struct {
	NameRequested     bool `tl:"flag:0,encoded_in_bitflags"`
	UsernameRequested bool `tl:"flag:1,encoded_in_bitflags"`
	PhotoRequested    bool `tl:"flag:2,encoded_in_bitflags"`
	Text              string
	ButtonID          int32
	PeerType          RequestPeerType
	MaxQuantity       int32
}

func (*InputKeyboardButtonRequestPeer) CRC() uint32 {
	return 0xc9662d05
}

func (*InputKeyboardButtonRequestPeer) FlagIndex() int {
	return 0
}

func (*InputKeyboardButtonRequestPeer) ImplementsKeyboardButton() {}

// Button to request a user to [authorize](https://core.telegram.org/method/messages.acceptUrlAuth) via URL using [Seamless Telegram Login](https://core.telegram.orghttps://telegram.org/blog/privacy-discussions-web-bots#meet-seamless-web-bots).
type InputKeyboardButtonURLAuth struct {
	RequestWriteAccess bool `tl:"flag:0,encoded_in_bitflags"`
	Text               string
	FwdText            string `tl:"flag:1"`
	URL                string
	Bot                InputUser
}

func (*InputKeyboardButtonURLAuth) CRC() uint32 {
	return 0xd02e7fd4
}

func (*InputKeyboardButtonURLAuth) FlagIndex() int {
	return 0
}

func (*InputKeyboardButtonURLAuth) ImplementsKeyboardButton() {}

// Button that links directly to a user profile
type InputKeyboardButtonUserProfile struct {
	Text   string
	UserID InputUser
}

func (*InputKeyboardButtonUserProfile) CRC() uint32 {
	return 0xe988037b
}

func (*InputKeyboardButtonUserProfile) ImplementsKeyboardButton() {}

// Bot keyboard button
type KeyboardButtonObj struct {
	Text string
}

func (*KeyboardButtonObj) CRC() uint32 {
	return 0xa2fa4880
}

func (*KeyboardButtonObj) ImplementsKeyboardButton() {}

// Button to buy a product
type KeyboardButtonBuy struct {
	Text string
}

func (*KeyboardButtonBuy) CRC() uint32 {
	return 0xafd93fbb
}

func (*KeyboardButtonBuy) ImplementsKeyboardButton() {}

// Callback button
type KeyboardButtonCallback struct {
	RequiresPassword bool `tl:"flag:0,encoded_in_bitflags"`
	Text             string
	Data             []byte
}

func (*KeyboardButtonCallback) CRC() uint32 {
	return 0x35bbdb6b
}

func (*KeyboardButtonCallback) FlagIndex() int {
	return 0
}

func (*KeyboardButtonCallback) ImplementsKeyboardButton() {}

// Button to start a game
type KeyboardButtonGame struct {
	Text string
}

func (*KeyboardButtonGame) CRC() uint32 {
	return 0x50f41ccf
}

func (*KeyboardButtonGame) ImplementsKeyboardButton() {}

// Button to request a user's geolocation
type KeyboardButtonRequestGeoLocation struct {
	Text string
}

func (*KeyboardButtonRequestGeoLocation) CRC() uint32 {
	return 0xfc796b3f
}

func (*KeyboardButtonRequestGeoLocation) ImplementsKeyboardButton() {}

// Prompts the user to select and share one or more peers with the bot using [messages.sendBotRequestedPeer](https://core.telegram.org/method/messages.sendBotRequestedPeer)
type KeyboardButtonRequestPeer struct {
	Text        string
	ButtonID    int32
	PeerType    RequestPeerType
	MaxQuantity int32
}

func (*KeyboardButtonRequestPeer) CRC() uint32 {
	return 0x53d7bfd8
}

func (*KeyboardButtonRequestPeer) ImplementsKeyboardButton() {}

// Button to request a user's phone number
type KeyboardButtonRequestPhone struct {
	Text string
}

func (*KeyboardButtonRequestPhone) CRC() uint32 {
	return 0xb16a6c29
}

func (*KeyboardButtonRequestPhone) ImplementsKeyboardButton() {}

// A button that allows the user to create and send a poll when pressed; available only in private
type KeyboardButtonRequestPoll struct {
	Quiz bool `tl:"flag:0"`
	Text string
}

func (*KeyboardButtonRequestPoll) CRC() uint32 {
	return 0xbbc7515d
}

func (*KeyboardButtonRequestPoll) FlagIndex() int {
	return 0
}

func (*KeyboardButtonRequestPoll) ImplementsKeyboardButton() {}

// Button to open a [bot mini app](https://core.telegram.org/api/bots/webapps) using [messages.requestSimpleWebView](https://core.telegram.org/method/messages.requestSimpleWebView), without sending user information to the web app.
type KeyboardButtonSimpleWebView struct {
	Text string
	URL  string
}

func (*KeyboardButtonSimpleWebView) CRC() uint32 {
	return 0xa0c0505c
}

func (*KeyboardButtonSimpleWebView) ImplementsKeyboardButton() {}

// Button to force a user to switch to inline mode: pressing the button will prompt the user to select one of their chats, open that chat and insert the bot's username and the specified inline query in the input field.
type KeyboardButtonSwitchInline struct {
	SamePeer  bool `tl:"flag:0,encoded_in_bitflags"`
	Text      string
	Query     string
	PeerTypes []InlineQueryPeerType `tl:"flag:1"`
}

func (*KeyboardButtonSwitchInline) CRC() uint32 {
	return 0x93b9fbb5
}

func (*KeyboardButtonSwitchInline) FlagIndex() int {
	return 0
}

func (*KeyboardButtonSwitchInline) ImplementsKeyboardButton() {}

// URL button
type KeyboardButtonURL struct {
	Text string
	URL  string
}

func (*KeyboardButtonURL) CRC() uint32 {
	return 0x258aff05
}

func (*KeyboardButtonURL) ImplementsKeyboardButton() {}

// Button to request a user to authorize via URL using [Seamless Telegram Login](https://core.telegram.orghttps://telegram.org/blog/privacy-discussions-web-bots#meet-seamless-web-bots). When the user clicks on such a button, [messages.requestUrlAuth](https://core.telegram.org/method/messages.requestUrlAuth) should be called, providing the `button_id` and the ID of the container message. The returned [urlAuthResultRequest](https://core.telegram.org/constructor/urlAuthResultRequest) object will contain more details about the authorization request (`request_write_access` if the bot would like to send messages to the user along with the username of the bot which will be used for user authorization). Finally, the user can choose to call [messages.acceptUrlAuth](https://core.telegram.org/method/messages.acceptUrlAuth) to get a [urlAuthResultAccepted](https://core.telegram.org/constructor/urlAuthResultAccepted) with the URL to open instead of the `url` of this constructor, or a [urlAuthResultDefault](https://core.telegram.org/constructor/urlAuthResultDefault), in which case the `url` of this constructor must be opened, instead. If the user refuses the authorization request but still wants to open the link, the `url` of this constructor must be used.
type KeyboardButtonURLAuth struct {
	Text     string
	FwdText  string `tl:"flag:0"`
	URL      string
	ButtonID int32
}

func (*KeyboardButtonURLAuth) CRC() uint32 {
	return 0x10b78d29
}

func (*KeyboardButtonURLAuth) FlagIndex() int {
	return 0
}

func (*KeyboardButtonURLAuth) ImplementsKeyboardButton() {}

// Button that links directly to a user profile
type KeyboardButtonUserProfile struct {
	Text   string
	UserID int64
}

func (*KeyboardButtonUserProfile) CRC() uint32 {
	return 0x308660c1
}

func (*KeyboardButtonUserProfile) ImplementsKeyboardButton() {}

// Button to open a [bot mini app](https://core.telegram.org/api/bots/webapps) using [messages.requestWebView](https://core.telegram.org/method/messages.requestWebView), sending over user information after user confirmation.
type KeyboardButtonWebView struct {
	Text string
	URL  string
}

func (*KeyboardButtonWebView) CRC() uint32 {
	return 0x13767230
}

func (*KeyboardButtonWebView) ImplementsKeyboardButton() {}

type LangPackString interface {
	tl.Object
	ImplementsLangPackString()
}

// Translated localization string
type LangPackStringObj struct {
	Key   string
	Value string
}

func (*LangPackStringObj) CRC() uint32 {
	return 0xcad181f6
}

func (*LangPackStringObj) ImplementsLangPackString() {}

// Deleted localization string
type LangPackStringDeleted struct {
	Key string
}

func (*LangPackStringDeleted) CRC() uint32 {
	return 0x2979eeb2
}

func (*LangPackStringDeleted) ImplementsLangPackString() {}

// A language pack string which has different forms based on the number of some object it mentions. See [https://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html](https://core.telegram.orghttps://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html) for more info
type LangPackStringPluralized struct {
	Key        string
	ZeroValue  string `tl:"flag:0"`
	OneValue   string `tl:"flag:1"`
	TwoValue   string `tl:"flag:2"`
	FewValue   string `tl:"flag:3"`
	ManyValue  string `tl:"flag:4"`
	OtherValue string
}

func (*LangPackStringPluralized) CRC() uint32 {
	return 0x6c47ac9f
}

func (*LangPackStringPluralized) FlagIndex() int {
	return 0
}

func (*LangPackStringPluralized) ImplementsLangPackString() {}

type MediaArea interface {
	tl.Object
	ImplementsMediaArea()
}

// Represents a channel post
type InputMediaAreaChannelPost struct {
	Coordinates *MediaAreaCoordinates
	Channel     InputChannel
	MsgID       int32
}

func (*InputMediaAreaChannelPost) CRC() uint32 {
	return 0x2271f2bf
}

func (*InputMediaAreaChannelPost) ImplementsMediaArea() {}

// Represents a [location tag](https://core.telegram.org/api/stories#media-areas) attached to a [story](https://core.telegram.org/api/stories), with additional venue information.
type InputMediaAreaVenue struct {
	Coordinates *MediaAreaCoordinates
	QueryID     int64
	ResultID    string
}

func (*InputMediaAreaVenue) CRC() uint32 {
	return 0xb282217f
}

func (*InputMediaAreaVenue) ImplementsMediaArea() {}

// Represents a channel post.
type MediaAreaChannelPost struct {
	Coordinates *MediaAreaCoordinates
	ChannelID   int64
	MsgID       int32
}

func (*MediaAreaChannelPost) CRC() uint32 {
	return 0x770416af
}

func (*MediaAreaChannelPost) ImplementsMediaArea() {}

// Represents a geolocation tag attached to a [story](https://core.telegram.org/api/stories).
type MediaAreaGeoPoint struct {
	Coordinates *MediaAreaCoordinates
	Geo         GeoPoint
	Address     *GeoPointAddress `tl:"flag:0"`
}

func (*MediaAreaGeoPoint) CRC() uint32 {
	return 0xcad5452d
}

func (*MediaAreaGeoPoint) FlagIndex() int {
	return 0
}

func (*MediaAreaGeoPoint) ImplementsMediaArea() {}

// Represents a reaction bubble.
type MediaAreaSuggestedReaction struct {
	Dark        bool `tl:"flag:0,encoded_in_bitflags"`
	Flipped     bool `tl:"flag:1,encoded_in_bitflags"`
	Coordinates *MediaAreaCoordinates
	Reaction    Reaction
}

func (*MediaAreaSuggestedReaction) CRC() uint32 {
	return 0x14455871
}

func (*MediaAreaSuggestedReaction) FlagIndex() int {
	return 0
}

func (*MediaAreaSuggestedReaction) ImplementsMediaArea() {}

type MediaAreaURL struct {
	Coordinates *MediaAreaCoordinates
	URL         string
}

func (*MediaAreaURL) CRC() uint32 {
	return 0x37381085
}

func (*MediaAreaURL) ImplementsMediaArea() {}

// Represents a location tag attached to a [story](https://core.telegram.org/api/stories), with additional venue information.
type MediaAreaVenue struct {
	Coordinates *MediaAreaCoordinates
	Geo         GeoPoint
	Title       string
	Address     string
	Provider    string
	VenueID     string
	VenueType   string
}

func (*MediaAreaVenue) CRC() uint32 {
	return 0xbe82db9c
}

func (*MediaAreaVenue) ImplementsMediaArea() {}

type Message interface {
	tl.Object
	ImplementsMessage()
}

// A message
type MessageObj struct {
	Out                  bool `tl:"flag:1,encoded_in_bitflags"`
	Mentioned            bool `tl:"flag:4,encoded_in_bitflags"`
	MediaUnread          bool `tl:"flag:5,encoded_in_bitflags"`
	Silent               bool `tl:"flag:13,encoded_in_bitflags"`
	Post                 bool `tl:"flag:14,encoded_in_bitflags"`
	FromScheduled        bool `tl:"flag:18,encoded_in_bitflags"`
	Legacy               bool `tl:"flag:19,encoded_in_bitflags"`
	EditHide             bool `tl:"flag:21,encoded_in_bitflags"`
	Pinned               bool `tl:"flag:24,encoded_in_bitflags"`
	Noforwards           bool `tl:"flag:26,encoded_in_bitflags"`
	InvertMedia          bool `tl:"flag:27,encoded_in_bitflags"`
	Offline              bool `tl:"flag2:1,encoded_in_bitflags"`
	ID                   int32
	FromID               Peer  `tl:"flag:8"`
	FromBoostsApplied    int32 `tl:"flag:29"`
	PeerID               Peer
	SavedPeerID          Peer               `tl:"flag:28"`
	FwdFrom              *MessageFwdHeader  `tl:"flag:2"`
	ViaBotID             int64              `tl:"flag:11"`
	ViaBusinessBotID     int64              `tl:"flag2:0"`
	ReplyTo              MessageReplyHeader `tl:"flag:3"`
	Date                 int32
	Message              string
	Media                MessageMedia         `tl:"flag:9"`
	ReplyMarkup          ReplyMarkup          `tl:"flag:6"`
	Entities             []MessageEntity      `tl:"flag:7"`
	Views                int32                `tl:"flag:10"`
	Forwards             int32                `tl:"flag:10"`
	Replies              *MessageReplies      `tl:"flag:23"`
	EditDate             int32                `tl:"flag:15"`
	PostAuthor           string               `tl:"flag:16"`
	GroupedID            int64                `tl:"flag:17"`
	Reactions            *MessageReactions    `tl:"flag:20"`
	RestrictionReason    []*RestrictionReason `tl:"flag:22"`
	TtlPeriod            int32                `tl:"flag:25"`
	QuickReplyShortcutID int32                `tl:"flag:30"`
	Effect               int64                `tl:"flag2:2"`
	Factcheck            *FactCheck           `tl:"flag2:3"`
}

func (*MessageObj) CRC() uint32 {
	return 0x94345242
}

func (*MessageObj) FlagIndex() int {
	return 12
}

func (*MessageObj) ImplementsMessage() {}

// Empty constructor, non-existent message.
type MessageEmpty struct {
	ID     int32
	PeerID Peer `tl:"flag:0"`
}

func (*MessageEmpty) CRC() uint32 {
	return 0x90a6ca84
}

func (*MessageEmpty) FlagIndex() int {
	return 0
}

func (*MessageEmpty) ImplementsMessage() {}

// Indicates a service message
type MessageService struct {
	Out         bool `tl:"flag:1,encoded_in_bitflags"`
	Mentioned   bool `tl:"flag:4,encoded_in_bitflags"`
	MediaUnread bool `tl:"flag:5,encoded_in_bitflags"`
	Silent      bool `tl:"flag:13,encoded_in_bitflags"`
	Post        bool `tl:"flag:14,encoded_in_bitflags"`
	Legacy      bool `tl:"flag:19,encoded_in_bitflags"`
	ID          int32
	FromID      Peer `tl:"flag:8"`
	PeerID      Peer
	ReplyTo     MessageReplyHeader `tl:"flag:3"`
	Date        int32
	Action      MessageAction
	TtlPeriod   int32 `tl:"flag:25"`
}

func (*MessageService) CRC() uint32 {
	return 0x2b085862
}

func (*MessageService) FlagIndex() int {
	return 0
}

func (*MessageService) ImplementsMessage() {}

type MessageAction interface {
	tl.Object
	ImplementsMessageAction()
}
type MessageActionBoostApply struct {
	Boosts int32
}

func (*MessageActionBoostApply) CRC() uint32 {
	return 0xcc02aa6d
}

func (*MessageActionBoostApply) ImplementsMessageAction() {}

// We have given the bot permission to send us direct messages.
type MessageActionBotAllowed struct {
	AttachMenu  bool   `tl:"flag:1,encoded_in_bitflags"`
	FromRequest bool   `tl:"flag:3,encoded_in_bitflags"`
	Domain      string `tl:"flag:0"`
	App         BotApp `tl:"flag:2"`
}

func (*MessageActionBotAllowed) CRC() uint32 {
	return 0xc516d679
}

func (*MessageActionBotAllowed) FlagIndex() int {
	return 0
}

func (*MessageActionBotAllowed) ImplementsMessageAction() {}

// The channel was created
type MessageActionChannelCreate struct {
	Title string
}

func (*MessageActionChannelCreate) CRC() uint32 {
	return 0x95d2ac92
}

func (*MessageActionChannelCreate) ImplementsMessageAction() {}

// Indicates the channel was [migrated](https://core.telegram.org/api/channel) from the specified chat
type MessageActionChannelMigrateFrom struct {
	Title  string
	ChatID int64
}

func (*MessageActionChannelMigrateFrom) CRC() uint32 {
	return 0xea3948e9
}

func (*MessageActionChannelMigrateFrom) ImplementsMessageAction() {}

// New member in the group
type MessageActionChatAddUser struct {
	Users []int64
}

func (*MessageActionChatAddUser) CRC() uint32 {
	return 0x15cefd00
}

func (*MessageActionChatAddUser) ImplementsMessageAction() {}

// Group created
type MessageActionChatCreate struct {
	Title string
	Users []int64
}

func (*MessageActionChatCreate) CRC() uint32 {
	return 0xbd47cbad
}

func (*MessageActionChatCreate) ImplementsMessageAction() {}

// Group profile photo removed.
type MessageActionChatDeletePhoto struct{}

func (*MessageActionChatDeletePhoto) CRC() uint32 {
	return 0x95e3fbef
}

func (*MessageActionChatDeletePhoto) ImplementsMessageAction() {}

// User left the group.
type MessageActionChatDeleteUser struct {
	UserID int64
}

func (*MessageActionChatDeleteUser) CRC() uint32 {
	return 0xa43f30cc
}

func (*MessageActionChatDeleteUser) ImplementsMessageAction() {}

// Group profile changed
type MessageActionChatEditPhoto struct {
	Photo Photo
}

func (*MessageActionChatEditPhoto) CRC() uint32 {
	return 0x7fcb13a8
}

func (*MessageActionChatEditPhoto) ImplementsMessageAction() {}

// Group name changed.
type MessageActionChatEditTitle struct {
	Title string
}

func (*MessageActionChatEditTitle) CRC() uint32 {
	return 0xb5a1ce5a
}

func (*MessageActionChatEditTitle) ImplementsMessageAction() {}

// A user joined the chat via an invite link
type MessageActionChatJoinedByLink struct {
	InviterID int64
}

func (*MessageActionChatJoinedByLink) CRC() uint32 {
	return 0x31224c3
}

func (*MessageActionChatJoinedByLink) ImplementsMessageAction() {}

// A user was accepted into the group by an admin
type MessageActionChatJoinedByRequest struct{}

func (*MessageActionChatJoinedByRequest) CRC() uint32 {
	return 0xebbca3cb
}

func (*MessageActionChatJoinedByRequest) ImplementsMessageAction() {}

// Indicates the chat was [migrated](https://core.telegram.org/api/channel) to the specified supergroup
type MessageActionChatMigrateTo struct {
	ChannelID int64
}

func (*MessageActionChatMigrateTo) CRC() uint32 {
	return 0xe1037f92
}

func (*MessageActionChatMigrateTo) ImplementsMessageAction() {}

// A contact just signed up to telegram
type MessageActionContactSignUp struct{}

func (*MessageActionContactSignUp) CRC() uint32 {
	return 0xf3f25f76
}

func (*MessageActionContactSignUp) ImplementsMessageAction() {}

// Custom action (most likely not supported by the current layer, an upgrade might be needed)
type MessageActionCustomAction struct {
	Message string
}

func (*MessageActionCustomAction) CRC() uint32 {
	return 0xfae69f56
}

func (*MessageActionCustomAction) ImplementsMessageAction() {}

// Empty constructor.
type MessageActionEmpty struct{}

func (*MessageActionEmpty) CRC() uint32 {
	return 0xb6aef7b0
}

func (*MessageActionEmpty) ImplementsMessageAction() {}

// Someone scored in a game
type MessageActionGameScore struct {
	GameID int64
	Score  int32
}

func (*MessageActionGameScore) CRC() uint32 {
	return 0x92a72876
}

func (*MessageActionGameScore) ImplementsMessageAction() {}

// A user of the chat is now in proximity of another user
type MessageActionGeoProximityReached struct {
	FromID   Peer
	ToID     Peer
	Distance int32
}

func (*MessageActionGeoProximityReached) CRC() uint32 {
	return 0x98e0d697
}

func (*MessageActionGeoProximityReached) ImplementsMessageAction() {}

// Contains a [Telegram Premium giftcode link](https://core.telegram.org/api/links#premium-giftcode-links).
type MessageActionGiftCode struct {
	ViaGiveaway    bool `tl:"flag:0,encoded_in_bitflags"`
	Unclaimed      bool `tl:"flag:2,encoded_in_bitflags"`
	BoostPeer      Peer `tl:"flag:1"`
	Months         int32
	Slug           string
	Currency       string `tl:"flag:2"`
	Amount         int64  `tl:"flag:2"`
	CryptoCurrency string `tl:"flag:3"`
	CryptoAmount   int64  `tl:"flag:3"`
}

func (*MessageActionGiftCode) CRC() uint32 {
	return 0x678c2e09
}

func (*MessageActionGiftCode) FlagIndex() int {
	return 0
}

func (*MessageActionGiftCode) ImplementsMessageAction() {}

// Info about a gifted Telegram Premium subscription
type MessageActionGiftPremium struct {
	Currency       string
	Amount         int64
	Months         int32
	CryptoCurrency string `tl:"flag:0"`
	CryptoAmount   int64  `tl:"flag:0"`
}

func (*MessageActionGiftPremium) CRC() uint32 {
	return 0xc83d6aec
}

func (*MessageActionGiftPremium) FlagIndex() int {
	return 0
}

func (*MessageActionGiftPremium) ImplementsMessageAction() {}

// A [giveaway](https://core.telegram.org/api/giveaways) was started.
type MessageActionGiveawayLaunch struct{}

func (*MessageActionGiveawayLaunch) CRC() uint32 {
	return 0x332ba9ed
}

func (*MessageActionGiveawayLaunch) ImplementsMessageAction() {}

// A [giveaway](https://core.telegram.org/api/giveaways) has ended.
type MessageActionGiveawayResults struct {
	WinnersCount   int32
	UnclaimedCount int32
}

func (*MessageActionGiveawayResults) CRC() uint32 {
	return 0x2a9fadc5
}

func (*MessageActionGiveawayResults) ImplementsMessageAction() {}

// The group call has ended
type MessageActionGroupCall struct {
	Call     *InputGroupCall
	Duration int32 `tl:"flag:0"`
}

func (*MessageActionGroupCall) CRC() uint32 {
	return 0x7a0d7f42
}

func (*MessageActionGroupCall) FlagIndex() int {
	return 0
}

func (*MessageActionGroupCall) ImplementsMessageAction() {}

// A group call was scheduled
type MessageActionGroupCallScheduled struct {
	Call         *InputGroupCall
	ScheduleDate int32
}

func (*MessageActionGroupCallScheduled) CRC() uint32 {
	return 0xb3a07661
}

func (*MessageActionGroupCallScheduled) ImplementsMessageAction() {}

// Chat history was cleared
type MessageActionHistoryClear struct{}

func (*MessageActionHistoryClear) CRC() uint32 {
	return 0x9fbab604
}

func (*MessageActionHistoryClear) ImplementsMessageAction() {}

// A set of users was invited to the group call
type MessageActionInviteToGroupCall struct {
	Call  *InputGroupCall
	Users []int64
}

func (*MessageActionInviteToGroupCall) CRC() uint32 {
	return 0x502f92f7
}

func (*MessageActionInviteToGroupCall) ImplementsMessageAction() {}

type MessageActionPaymentRefunded struct {
	Peer        Peer
	Currency    string
	TotalAmount int64
	Payload     []byte `tl:"flag:0"`
	Charge      *PaymentCharge
}

func (*MessageActionPaymentRefunded) CRC() uint32 {
	return 0x41b3e202
}

func (*MessageActionPaymentRefunded) FlagIndex() int {
	return 0
}

func (*MessageActionPaymentRefunded) ImplementsMessageAction() {}

// A payment was sent
type MessageActionPaymentSent struct {
	RecurringInit bool `tl:"flag:2,encoded_in_bitflags"`
	RecurringUsed bool `tl:"flag:3,encoded_in_bitflags"`
	Currency      string
	TotalAmount   int64
	InvoiceSlug   string `tl:"flag:0"`
}

func (*MessageActionPaymentSent) CRC() uint32 {
	return 0x96163f56
}

func (*MessageActionPaymentSent) FlagIndex() int {
	return 0
}

func (*MessageActionPaymentSent) ImplementsMessageAction() {}

// A user just sent a payment to me (a bot)
type MessageActionPaymentSentMe struct {
	RecurringInit    bool `tl:"flag:2,encoded_in_bitflags"`
	RecurringUsed    bool `tl:"flag:3,encoded_in_bitflags"`
	Currency         string
	TotalAmount      int64
	Payload          []byte
	Info             *PaymentRequestedInfo `tl:"flag:0"`
	ShippingOptionID string                `tl:"flag:1"`
	Charge           *PaymentCharge
}

func (*MessageActionPaymentSentMe) CRC() uint32 {
	return 0x8f31b327
}

func (*MessageActionPaymentSentMe) FlagIndex() int {
	return 0
}

func (*MessageActionPaymentSentMe) ImplementsMessageAction() {}

// A phone call
type MessageActionPhoneCall struct {
	Video    bool `tl:"flag:2,encoded_in_bitflags"`
	CallID   int64
	Reason   PhoneCallDiscardReason `tl:"flag:0"`
	Duration int32                  `tl:"flag:1"`
}

func (*MessageActionPhoneCall) CRC() uint32 {
	return 0x80e11a7f
}

func (*MessageActionPhoneCall) FlagIndex() int {
	return 0
}

func (*MessageActionPhoneCall) ImplementsMessageAction() {}

// A message was pinned
type MessageActionPinMessage struct{}

func (*MessageActionPinMessage) CRC() uint32 {
	return 0x94bd38ed
}

func (*MessageActionPinMessage) ImplementsMessageAction() {}

// Contains info about one or more peers that the user shared with the bot after clicking on a [keyboardButtonRequestPeer](https://core.telegram.org/constructor/keyboardButtonRequestPeer) button.
type MessageActionRequestedPeer struct {
	ButtonID int32
	Peers    []Peer
}

func (*MessageActionRequestedPeer) CRC() uint32 {
	return 0x31518e9b
}

func (*MessageActionRequestedPeer) ImplementsMessageAction() {}

type MessageActionRequestedPeerSentMe struct {
	ButtonID int32
	Peers    []RequestedPeer
}

func (*MessageActionRequestedPeerSentMe) CRC() uint32 {
	return 0x93b31848
}

func (*MessageActionRequestedPeerSentMe) ImplementsMessageAction() {}

// A screenshot of the chat was taken
type MessageActionScreenshotTaken struct{}

func (*MessageActionScreenshotTaken) CRC() uint32 {
	return 0x4792929b
}

func (*MessageActionScreenshotTaken) ImplementsMessageAction() {}

// Request for secure [telegram passport](https://core.telegram.org/passport) values was sent
type MessageActionSecureValuesSent struct {
	Types []SecureValueType
}

func (*MessageActionSecureValuesSent) CRC() uint32 {
	return 0xd95c6154
}

func (*MessageActionSecureValuesSent) ImplementsMessageAction() {}

// Secure [telegram passport](https://core.telegram.org/passport) values were received
type MessageActionSecureValuesSentMe struct {
	Values      []*SecureValue
	Credentials *SecureCredentialsEncrypted
}

func (*MessageActionSecureValuesSentMe) CRC() uint32 {
	return 0x1b287353
}

func (*MessageActionSecureValuesSentMe) ImplementsMessageAction() {}

// The chat theme was changed
type MessageActionSetChatTheme struct {
	Emoticon string
}

func (*MessageActionSetChatTheme) CRC() uint32 {
	return 0xaa786345
}

func (*MessageActionSetChatTheme) ImplementsMessageAction() {}

// The [wallpaper Â»](https://core.telegram.org/api/wallpapers) of the current chat was changed.
type MessageActionSetChatWallPaper struct {
	Same      bool `tl:"flag:0,encoded_in_bitflags"`
	ForBoth   bool `tl:"flag:1,encoded_in_bitflags"`
	Wallpaper WallPaper
}

func (*MessageActionSetChatWallPaper) CRC() uint32 {
	return 0x5060a3f4
}

func (*MessageActionSetChatWallPaper) FlagIndex() int {
	return 0
}

func (*MessageActionSetChatWallPaper) ImplementsMessageAction() {}

// The Time-To-Live of messages in this chat was changed.
type MessageActionSetMessagesTtl struct {
	Period          int32
	AutoSettingFrom int64 `tl:"flag:0"`
}

func (*MessageActionSetMessagesTtl) CRC() uint32 {
	return 0x3c134d7b
}

func (*MessageActionSetMessagesTtl) FlagIndex() int {
	return 0
}

func (*MessageActionSetMessagesTtl) ImplementsMessageAction() {}

// A new profile picture was suggested using [photos.uploadContactProfilePhoto](https://core.telegram.org/method/photos.uploadContactProfilePhoto).
type MessageActionSuggestProfilePhoto struct {
	Photo Photo
}

func (*MessageActionSuggestProfilePhoto) CRC() uint32 {
	return 0x57de635e
}

func (*MessageActionSuggestProfilePhoto) ImplementsMessageAction() {}

// A [forum topic](https://core.telegram.org/api/forum#forum-topics) was created.
type MessageActionTopicCreate struct {
	Title       string
	IconColor   int32
	IconEmojiID int64 `tl:"flag:0"`
}

func (*MessageActionTopicCreate) CRC() uint32 {
	return 0xd999256
}

func (*MessageActionTopicCreate) FlagIndex() int {
	return 0
}

func (*MessageActionTopicCreate) ImplementsMessageAction() {}

// [Forum topic](https://core.telegram.org/api/forum#forum-topics) information was edited.
type MessageActionTopicEdit struct {
	Title       string `tl:"flag:0"`
	IconEmojiID int64  `tl:"flag:1"`
	Closed      bool   `tl:"flag:2"`
	Hidden      bool   `tl:"flag:3"`
}

func (*MessageActionTopicEdit) CRC() uint32 {
	return 0xc0944820
}

func (*MessageActionTopicEdit) FlagIndex() int {
	return 0
}

func (*MessageActionTopicEdit) ImplementsMessageAction() {}

// Data from an opened [reply keyboard bot mini app](https://core.telegram.org/api/bots/webapps) was relayed to the bot that owns it (user side service message).
type MessageActionWebViewDataSent struct {
	Text string
}

func (*MessageActionWebViewDataSent) CRC() uint32 {
	return 0xb4c38cb5
}

func (*MessageActionWebViewDataSent) ImplementsMessageAction() {}

// Data from an opened [reply keyboard bot mini app](https://core.telegram.org/api/bots/webapps) was relayed to the bot that owns it (bot side service message).
type MessageActionWebViewDataSentMe struct {
	Text string
	Data string
}

func (*MessageActionWebViewDataSentMe) CRC() uint32 {
	return 0x47dd8079
}

func (*MessageActionWebViewDataSentMe) ImplementsMessageAction() {}

type MessageEntity interface {
	tl.Object
	ImplementsMessageEntity()
}

// Message entity that can be used to create a user [user mention](https://core.telegram.org/api/mentions): received mentions use the [messageEntityMentionName](https://core.telegram.org/constructor/messageEntityMentionName) constructor, instead.
type InputMessageEntityMentionName struct {
	Offset int32
	Length int32
	UserID InputUser
}

func (*InputMessageEntityMentionName) CRC() uint32 {
	return 0x208e68c9
}

func (*InputMessageEntityMentionName) ImplementsMessageEntity() {}

// Indicates a credit card number
type MessageEntityBankCard struct {
	Offset int32
	Length int32
}

func (*MessageEntityBankCard) CRC() uint32 {
	return 0x761e6af4
}

func (*MessageEntityBankCard) ImplementsMessageEntity() {}

// Message entity representing a block quote.
type MessageEntityBlockquote struct {
	Collapsed bool `tl:"flag:0,encoded_in_bitflags"`
	Offset    int32
	Length    int32
}

func (*MessageEntityBlockquote) CRC() uint32 {
	return 0xf1ccaaac
}

func (*MessageEntityBlockquote) FlagIndex() int {
	return 0
}

func (*MessageEntityBlockquote) ImplementsMessageEntity() {}

// Message entity representing <strong>bold text</strong>.
type MessageEntityBold struct {
	Offset int32
	Length int32
}

func (*MessageEntityBold) CRC() uint32 {
	return 0xbd610bc9
}

func (*MessageEntityBold) ImplementsMessageEntity() {}

// Message entity representing a bot /command
type MessageEntityBotCommand struct {
	Offset int32
	Length int32
}

func (*MessageEntityBotCommand) CRC() uint32 {
	return 0x6cef8ac7
}

func (*MessageEntityBotCommand) ImplementsMessageEntity() {}

// Message entity representing a <strong>$cashtag</strong>.
type MessageEntityCashtag struct {
	Offset int32
	Length int32
}

func (*MessageEntityCashtag) CRC() uint32 {
	return 0x4c4e743f
}

func (*MessageEntityCashtag) ImplementsMessageEntity() {}

// Message entity representing a `codeblock`.
type MessageEntityCode struct {
	Offset int32
	Length int32
}

func (*MessageEntityCode) CRC() uint32 {
	return 0x28a20571
}

func (*MessageEntityCode) ImplementsMessageEntity() {}

/*
Represents a custom emoji.<br>
Note that this entity must wrap exactly one regular emoji (the one contained in [documentAttributeCustomEmoji](https://core.telegram.org/constructor/documentAttributeCustomEmoji).`alt`) in the related text, otherwise the server will ignore it.
*/
type MessageEntityCustomEmoji struct {
	Offset     int32
	Length     int32
	DocumentID int64
}

func (*MessageEntityCustomEmoji) CRC() uint32 {
	return 0xc8cf05f8
}

func (*MessageEntityCustomEmoji) ImplementsMessageEntity() {}

// Message entity representing an [email@example.com](https://core.telegram.orgmailto:email@example.com).
type MessageEntityEmail struct {
	Offset int32
	Length int32
}

func (*MessageEntityEmail) CRC() uint32 {
	return 0x64e475c2
}

func (*MessageEntityEmail) ImplementsMessageEntity() {}

// <strong>#hashtag</strong> message entity
type MessageEntityHashtag struct {
	Offset int32
	Length int32
}

func (*MessageEntityHashtag) CRC() uint32 {
	return 0x6f635b0d
}

func (*MessageEntityHashtag) ImplementsMessageEntity() {}

// Message entity representing <em>italic text</em>.
type MessageEntityItalic struct {
	Offset int32
	Length int32
}

func (*MessageEntityItalic) CRC() uint32 {
	return 0x826f8b60
}

func (*MessageEntityItalic) ImplementsMessageEntity() {}

// Message entity [mentioning](https://core.telegram.org/api/mentions) a user by `@username`; [messageEntityMentionName](https://core.telegram.org/constructor/messageEntityMentionName) can also be used to mention users by their ID.
type MessageEntityMention struct {
	Offset int32
	Length int32
}

func (*MessageEntityMention) CRC() uint32 {
	return 0xfa04579d
}

func (*MessageEntityMention) ImplementsMessageEntity() {}

// Message entity representing a [user mention](https://core.telegram.org/api/mentions): for <em>creating</em> a mention use [inputMessageEntityMentionName](https://core.telegram.org/constructor/inputMessageEntityMentionName).
type MessageEntityMentionName struct {
	Offset int32
	Length int32
	UserID int64
}

func (*MessageEntityMentionName) CRC() uint32 {
	return 0xdc7b1140
}

func (*MessageEntityMentionName) ImplementsMessageEntity() {}

// Message entity representing a phone number.
type MessageEntityPhone struct {
	Offset int32
	Length int32
}

func (*MessageEntityPhone) CRC() uint32 {
	return 0x9b69e34b
}

func (*MessageEntityPhone) ImplementsMessageEntity() {}

// Message entity representing a preformatted `codeblock`, allowing the user to specify a programming language for the codeblock.
type MessageEntityPre struct {
	Offset   int32
	Length   int32
	Language string
}

func (*MessageEntityPre) CRC() uint32 {
	return 0x73924be0
}

func (*MessageEntityPre) ImplementsMessageEntity() {}

// Message entity representing a spoiler
type MessageEntitySpoiler struct {
	Offset int32
	Length int32
}

func (*MessageEntitySpoiler) CRC() uint32 {
	return 0x32ca960f
}

func (*MessageEntitySpoiler) ImplementsMessageEntity() {}

// Message entity representing <del>strikethrough</del> text.
type MessageEntityStrike struct {
	Offset int32
	Length int32
}

func (*MessageEntityStrike) CRC() uint32 {
	return 0xbf0693d4
}

func (*MessageEntityStrike) ImplementsMessageEntity() {}

// Message entity representing a [text url](https://core.telegram.orghttps://google.com): for in-text urls like [https://google.com](https://core.telegram.orghttps://google.com) use [messageEntityUrl](https://core.telegram.org/constructor/messageEntityUrl).
type MessageEntityTextURL struct {
	Offset int32
	Length int32
	URL    string
}

func (*MessageEntityTextURL) CRC() uint32 {
	return 0x76a6d327
}

func (*MessageEntityTextURL) ImplementsMessageEntity() {}

// Message entity representing underlined text.
type MessageEntityUnderline struct {
	Offset int32
	Length int32
}

func (*MessageEntityUnderline) CRC() uint32 {
	return 0x9c4e7e8b
}

func (*MessageEntityUnderline) ImplementsMessageEntity() {}

// Unknown message entity
type MessageEntityUnknown struct {
	Offset int32
	Length int32
}

func (*MessageEntityUnknown) CRC() uint32 {
	return 0xbb92ba95
}

func (*MessageEntityUnknown) ImplementsMessageEntity() {}

// Message entity representing an in-text url: [https://google.com](https://core.telegram.orghttps://google.com); for [text urls](https://core.telegram.orghttps://google.com), use [messageEntityTextUrl](https://core.telegram.org/constructor/messageEntityTextUrl).
type MessageEntityURL struct {
	Offset int32
	Length int32
}

func (*MessageEntityURL) CRC() uint32 {
	return 0x6ed02538
}

func (*MessageEntityURL) ImplementsMessageEntity() {}

type MessageExtendedMedia interface {
	tl.Object
	ImplementsMessageExtendedMedia()
}

// Extended media
type MessageExtendedMediaObj struct {
	Media MessageMedia
}

func (*MessageExtendedMediaObj) CRC() uint32 {
	return 0xee479c64
}

func (*MessageExtendedMediaObj) ImplementsMessageExtendedMedia() {}

// Extended media preview
type MessageExtendedMediaPreview struct {
	W             int32     `tl:"flag:0"`
	H             int32     `tl:"flag:0"`
	Thumb         PhotoSize `tl:"flag:1"`
	VideoDuration int32     `tl:"flag:2"`
}

func (*MessageExtendedMediaPreview) CRC() uint32 {
	return 0xad628cc8
}

func (*MessageExtendedMediaPreview) FlagIndex() int {
	return 0
}

func (*MessageExtendedMediaPreview) ImplementsMessageExtendedMedia() {}

type MessageMedia interface {
	tl.Object
	ImplementsMessageMedia()
}

// Attached contact.
type MessageMediaContact struct {
	PhoneNumber string
	FirstName   string
	LastName    string
	Vcard       string
	UserID      int64
}

func (*MessageMediaContact) CRC() uint32 {
	return 0x70322949
}

func (*MessageMediaContact) ImplementsMessageMedia() {}

// [Dice-based animated sticker](https://core.telegram.org/api/dice)
type MessageMediaDice struct {
	Value    int32
	Emoticon string
}

func (*MessageMediaDice) CRC() uint32 {
	return 0x3f7ee58b
}

func (*MessageMediaDice) ImplementsMessageMedia() {}

// Document (video, audio, voice, sticker, any media type except photo)
type MessageMediaDocument struct {
	Nopremium   bool     `tl:"flag:3,encoded_in_bitflags"`
	Spoiler     bool     `tl:"flag:4,encoded_in_bitflags"`
	Video       bool     `tl:"flag:6,encoded_in_bitflags"`
	Round       bool     `tl:"flag:7,encoded_in_bitflags"`
	Voice       bool     `tl:"flag:8,encoded_in_bitflags"`
	Document    Document `tl:"flag:0"`
	AltDocument Document `tl:"flag:5"`
	TtlSeconds  int32    `tl:"flag:2"`
}

func (*MessageMediaDocument) CRC() uint32 {
	return 0x4cf4d72d
}

func (*MessageMediaDocument) FlagIndex() int {
	return 0
}

func (*MessageMediaDocument) ImplementsMessageMedia() {}

// Empty constructor.
type MessageMediaEmpty struct{}

func (*MessageMediaEmpty) CRC() uint32 {
	return 0x3ded6320
}

func (*MessageMediaEmpty) ImplementsMessageMedia() {}

// Telegram game
type MessageMediaGame struct {
	Game *Game
}

func (*MessageMediaGame) CRC() uint32 {
	return 0xfdb19008
}

func (*MessageMediaGame) ImplementsMessageMedia() {}

// Attached map.
type MessageMediaGeo struct {
	Geo GeoPoint
}

func (*MessageMediaGeo) CRC() uint32 {
	return 0x56e0d474
}

func (*MessageMediaGeo) ImplementsMessageMedia() {}

// Indicates a [live geolocation](https://core.telegram.org/api/live-location)
type MessageMediaGeoLive struct {
	Geo                         GeoPoint
	Heading                     int32 `tl:"flag:0"`
	Period                      int32
	ProximityNotificationRadius int32 `tl:"flag:1"`
}

func (*MessageMediaGeoLive) CRC() uint32 {
	return 0xb940c666
}

func (*MessageMediaGeoLive) FlagIndex() int {
	return 0
}

func (*MessageMediaGeoLive) ImplementsMessageMedia() {}

// Contains info about a [giveaway, see here Â»](https://core.telegram.org/api/giveaways) for more info.
type MessageMediaGiveaway struct {
	OnlyNewSubscribers bool `tl:"flag:0,encoded_in_bitflags"`
	WinnersAreVisible  bool `tl:"flag:2,encoded_in_bitflags"`
	Channels           []int64
	CountriesIso2      []string `tl:"flag:1"`
	PrizeDescription   string   `tl:"flag:3"`
	Quantity           int32
	Months             int32
	UntilDate          int32
}

func (*MessageMediaGiveaway) CRC() uint32 {
	return 0xdaad85b0
}

func (*MessageMediaGiveaway) FlagIndex() int {
	return 0
}

func (*MessageMediaGiveaway) ImplementsMessageMedia() {}

// A [giveaway](https://core.telegram.org/api/giveaways) with public winners has finished, this constructor contains info about the winners.
type MessageMediaGiveawayResults struct {
	OnlyNewSubscribers   bool `tl:"flag:0,encoded_in_bitflags"`
	Refunded             bool `tl:"flag:2,encoded_in_bitflags"`
	ChannelID            int64
	AdditionalPeersCount int32 `tl:"flag:3"`
	LaunchMsgID          int32
	WinnersCount         int32
	UnclaimedCount       int32
	Winners              []int64
	Months               int32
	PrizeDescription     string `tl:"flag:1"`
	UntilDate            int32
}

func (*MessageMediaGiveawayResults) CRC() uint32 {
	return 0xc6991068
}

func (*MessageMediaGiveawayResults) FlagIndex() int {
	return 0
}

func (*MessageMediaGiveawayResults) ImplementsMessageMedia() {}

// Invoice
type MessageMediaInvoice struct {
	ShippingAddressRequested bool `tl:"flag:1,encoded_in_bitflags"`
	Test                     bool `tl:"flag:3,encoded_in_bitflags"`
	Title                    string
	Description              string
	Photo                    WebDocument `tl:"flag:0"`
	ReceiptMsgID             int32       `tl:"flag:2"`
	Currency                 string
	TotalAmount              int64
	StartParam               string
	ExtendedMedia            MessageExtendedMedia `tl:"flag:4"`
}

func (*MessageMediaInvoice) CRC() uint32 {
	return 0xf6a548d3
}

func (*MessageMediaInvoice) FlagIndex() int {
	return 0
}

func (*MessageMediaInvoice) ImplementsMessageMedia() {}

type MessageMediaPaidMedia struct {
	StarsAmount   int64
	ExtendedMedia []MessageExtendedMedia
}

func (*MessageMediaPaidMedia) CRC() uint32 {
	return 0xa8852491
}

func (*MessageMediaPaidMedia) ImplementsMessageMedia() {}

// Attached photo.
type MessageMediaPhoto struct {
	Spoiler    bool  `tl:"flag:3,encoded_in_bitflags"`
	Photo      Photo `tl:"flag:0"`
	TtlSeconds int32 `tl:"flag:2"`
}

func (*MessageMediaPhoto) CRC() uint32 {
	return 0x695150d7
}

func (*MessageMediaPhoto) FlagIndex() int {
	return 0
}

func (*MessageMediaPhoto) ImplementsMessageMedia() {}

// Poll
type MessageMediaPoll struct {
	Poll    *Poll
	Results *PollResults
}

func (*MessageMediaPoll) CRC() uint32 {
	return 0x4bd6e798
}

func (*MessageMediaPoll) ImplementsMessageMedia() {}

// Represents a forwarded [story](https://core.telegram.org/api/stories) or a story mention.
type MessageMediaStory struct {
	ViaMention bool `tl:"flag:1,encoded_in_bitflags"`
	Peer       Peer
	ID         int32
	Story      StoryItem `tl:"flag:0"`
}

func (*MessageMediaStory) CRC() uint32 {
	return 0x68cb6283
}

func (*MessageMediaStory) FlagIndex() int {
	return 0
}

func (*MessageMediaStory) ImplementsMessageMedia() {}

// Current version of the client does not support this media type.
type MessageMediaUnsupported struct{}

func (*MessageMediaUnsupported) CRC() uint32 {
	return 0x9f84f49e
}

func (*MessageMediaUnsupported) ImplementsMessageMedia() {}

// Venue
type MessageMediaVenue struct {
	Geo       GeoPoint
	Title     string
	Address   string
	Provider  string
	VenueID   string
	VenueType string
}

func (*MessageMediaVenue) CRC() uint32 {
	return 0x2ec0533f
}

func (*MessageMediaVenue) ImplementsMessageMedia() {}

// Preview of webpage
type MessageMediaWebPage struct {
	ForceLargeMedia bool `tl:"flag:0,encoded_in_bitflags"`
	ForceSmallMedia bool `tl:"flag:1,encoded_in_bitflags"`
	Manual          bool `tl:"flag:3,encoded_in_bitflags"`
	Safe            bool `tl:"flag:4,encoded_in_bitflags"`
	Webpage         WebPage
}

func (*MessageMediaWebPage) CRC() uint32 {
	return 0xddf10c3b
}

func (*MessageMediaWebPage) FlagIndex() int {
	return 0
}

func (*MessageMediaWebPage) ImplementsMessageMedia() {}

type MessagePeerVote interface {
	tl.Object
	ImplementsMessagePeerVote()
}

// How a peer voted in a poll
type MessagePeerVoteObj struct {
	Peer   Peer
	Option []byte
	Date   int32
}

func (*MessagePeerVoteObj) CRC() uint32 {
	return 0xb6cc2d5c
}

func (*MessagePeerVoteObj) ImplementsMessagePeerVote() {}

// How a peer voted in a poll (reduced constructor, returned if an `option` was provided to [messages.getPollVotes](https://core.telegram.org/method/messages.getPollVotes))
type MessagePeerVoteInputOption struct {
	Peer Peer
	Date int32
}

func (*MessagePeerVoteInputOption) CRC() uint32 {
	return 0x74cda504
}

func (*MessagePeerVoteInputOption) ImplementsMessagePeerVote() {}

// How a peer voted in a multiple-choice poll
type MessagePeerVoteMultiple struct {
	Peer    Peer
	Options [][]byte
	Date    int32
}

func (*MessagePeerVoteMultiple) CRC() uint32 {
	return 0x4628f6e6
}

func (*MessagePeerVoteMultiple) ImplementsMessagePeerVote() {}

type MessageReplyHeader interface {
	tl.Object
	ImplementsMessageReplyHeader()
}

// Message replies and [thread](https://core.telegram.org/api/threads) information
type MessageReplyHeaderObj struct {
	ReplyToScheduled bool              `tl:"flag:2,encoded_in_bitflags"`
	ForumTopic       bool              `tl:"flag:3,encoded_in_bitflags"`
	Quote            bool              `tl:"flag:9,encoded_in_bitflags"`
	ReplyToMsgID     int32             `tl:"flag:4"`
	ReplyToPeerID    Peer              `tl:"flag:0"`
	ReplyFrom        *MessageFwdHeader `tl:"flag:5"`
	ReplyMedia       MessageMedia      `tl:"flag:8"`
	ReplyToTopID     int32             `tl:"flag:1"`
	QuoteText        string            `tl:"flag:6"`
	QuoteEntities    []MessageEntity   `tl:"flag:7"`
	QuoteOffset      int32             `tl:"flag:10"`
}

func (*MessageReplyHeaderObj) CRC() uint32 {
	return 0xafbc09db
}

func (*MessageReplyHeaderObj) FlagIndex() int {
	return 0
}

func (*MessageReplyHeaderObj) ImplementsMessageReplyHeader() {}

// Represents a reply to a [story](https://core.telegram.org/api/stories)
type MessageReplyStoryHeader struct {
	Peer    Peer
	StoryID int32
}

func (*MessageReplyStoryHeader) CRC() uint32 {
	return 0xe5af939
}

func (*MessageReplyStoryHeader) ImplementsMessageReplyHeader() {}

type MessagesFilter interface {
	tl.Object
	ImplementsMessagesFilter()
}

// Return only chat photo changes
type InputMessagesFilterChatPhotos struct{}

func (*InputMessagesFilterChatPhotos) CRC() uint32 {
	return 0x3a20ecb8
}

func (*InputMessagesFilterChatPhotos) ImplementsMessagesFilter() {}

// Return only messages containing contacts
type InputMessagesFilterContacts struct{}

func (*InputMessagesFilterContacts) CRC() uint32 {
	return 0xe062db83
}

func (*InputMessagesFilterContacts) ImplementsMessagesFilter() {}

// Filter for messages containing documents.
type InputMessagesFilterDocument struct{}

func (*InputMessagesFilterDocument) CRC() uint32 {
	return 0x9eddf188
}

func (*InputMessagesFilterDocument) ImplementsMessagesFilter() {}

// Filter is absent.
type InputMessagesFilterEmpty struct{}

func (*InputMessagesFilterEmpty) CRC() uint32 {
	return 0x57e2f66c
}

func (*InputMessagesFilterEmpty) ImplementsMessagesFilter() {}

// Return only messages containing geolocations
type InputMessagesFilterGeo struct{}

func (*InputMessagesFilterGeo) CRC() uint32 {
	return 0xe7026d0d
}

func (*InputMessagesFilterGeo) ImplementsMessagesFilter() {}

// Return only messages containing gifs
type InputMessagesFilterGif struct{}

func (*InputMessagesFilterGif) CRC() uint32 {
	return 0xffc86587
}

func (*InputMessagesFilterGif) ImplementsMessagesFilter() {}

// Return only messages containing audio files
type InputMessagesFilterMusic struct{}

func (*InputMessagesFilterMusic) CRC() uint32 {
	return 0x3751b49e
}

func (*InputMessagesFilterMusic) ImplementsMessagesFilter() {}

// Return only messages where the current user was [mentioned](https://core.telegram.org/api/mentions).
type InputMessagesFilterMyMentions struct{}

func (*InputMessagesFilterMyMentions) CRC() uint32 {
	return 0xc1f8e69a
}

func (*InputMessagesFilterMyMentions) ImplementsMessagesFilter() {}

// Return only phone calls
type InputMessagesFilterPhoneCalls struct {
	Missed bool `tl:"flag:0,encoded_in_bitflags"`
}

func (*InputMessagesFilterPhoneCalls) CRC() uint32 {
	return 0x80c99768
}

func (*InputMessagesFilterPhoneCalls) FlagIndex() int {
	return 0
}

func (*InputMessagesFilterPhoneCalls) ImplementsMessagesFilter() {}

// Filter for messages containing photos or videos.
type InputMessagesFilterPhotoVideo struct{}

func (*InputMessagesFilterPhotoVideo) CRC() uint32 {
	return 0x56e9f0e4
}

func (*InputMessagesFilterPhotoVideo) ImplementsMessagesFilter() {}

// Filter for messages containing photos.
type InputMessagesFilterPhotos struct{}

func (*InputMessagesFilterPhotos) CRC() uint32 {
	return 0x9609a51c
}

func (*InputMessagesFilterPhotos) ImplementsMessagesFilter() {}

// Fetch only pinned messages
type InputMessagesFilterPinned struct{}

func (*InputMessagesFilterPinned) CRC() uint32 {
	return 0x1bb00451
}

func (*InputMessagesFilterPinned) ImplementsMessagesFilter() {}

// Return only round videos
type InputMessagesFilterRoundVideo struct{}

func (*InputMessagesFilterRoundVideo) CRC() uint32 {
	return 0xb549da53
}

func (*InputMessagesFilterRoundVideo) ImplementsMessagesFilter() {}

// Return only round videos and voice notes
type InputMessagesFilterRoundVoice struct{}

func (*InputMessagesFilterRoundVoice) CRC() uint32 {
	return 0x7a7c17a4
}

func (*InputMessagesFilterRoundVoice) ImplementsMessagesFilter() {}

// Return only messages containing URLs
type InputMessagesFilterURL struct{}

func (*InputMessagesFilterURL) CRC() uint32 {
	return 0x7ef0dd87
}

func (*InputMessagesFilterURL) ImplementsMessagesFilter() {}

// Filter for messages containing videos.
type InputMessagesFilterVideo struct{}

func (*InputMessagesFilterVideo) CRC() uint32 {
	return 0x9fc00e65
}

func (*InputMessagesFilterVideo) ImplementsMessagesFilter() {}

// Return only messages containing voice notes
type InputMessagesFilterVoice struct{}

func (*InputMessagesFilterVoice) CRC() uint32 {
	return 0x50f5c392
}

func (*InputMessagesFilterVoice) ImplementsMessagesFilter() {}

type NotificationSound interface {
	tl.Object
	ImplementsNotificationSound()
}

// Indicates the default notification sound should be used
type NotificationSoundDefault struct{}

func (*NotificationSoundDefault) CRC() uint32 {
	return 0x97e8bebe
}

func (*NotificationSoundDefault) ImplementsNotificationSound() {}

// Indicates a specific local notification sound should be used
type NotificationSoundLocal struct {
	Title string
	Data  string
}

func (*NotificationSoundLocal) CRC() uint32 {
	return 0x830b9ae4
}

func (*NotificationSoundLocal) ImplementsNotificationSound() {}

// No notification sound should be used
type NotificationSoundNone struct{}

func (*NotificationSoundNone) CRC() uint32 {
	return 0x6f0c34df
}

func (*NotificationSoundNone) ImplementsNotificationSound() {}

// A specific previously uploaded notification sound should be used
type NotificationSoundRingtone struct {
	ID int64
}

func (*NotificationSoundRingtone) CRC() uint32 {
	return 0xff6c8049
}

func (*NotificationSoundRingtone) ImplementsNotificationSound() {}

type NotifyPeer interface {
	tl.Object
	ImplementsNotifyPeer()
}

// Channel notification settings
type NotifyBroadcasts struct{}

func (*NotifyBroadcasts) CRC() uint32 {
	return 0xd612e8ef
}

func (*NotifyBroadcasts) ImplementsNotifyPeer() {}

// Notifications generated by all groups.
type NotifyChats struct{}

func (*NotifyChats) CRC() uint32 {
	return 0xc007cec3
}

func (*NotifyChats) ImplementsNotifyPeer() {}

// Notifications generated by a [topic](https://core.telegram.org/api/forum#forum-topics) in a [forum](https://core.telegram.org/api/forum).
type NotifyForumTopic struct {
	Peer     Peer
	TopMsgID int32
}

func (*NotifyForumTopic) CRC() uint32 {
	return 0x226e6308
}

func (*NotifyForumTopic) ImplementsNotifyPeer() {}

// Notifications generated by a certain user or group.
type NotifyPeerObj struct {
	Peer Peer
}

func (*NotifyPeerObj) CRC() uint32 {
	return 0x9fd40bd8
}

func (*NotifyPeerObj) ImplementsNotifyPeer() {}

// Notifications generated by all users.
type NotifyUsers struct{}

func (*NotifyUsers) CRC() uint32 {
	return 0xb4c83b4c
}

func (*NotifyUsers) ImplementsNotifyPeer() {}

type PageBlock interface {
	tl.Object
	ImplementsPageBlock()
}

// Link to section within the page itself (like `&lt;a href="#target"&gt;anchor&lt;/a&gt;`)
type PageBlockAnchor struct {
	Name string
}

func (*PageBlockAnchor) CRC() uint32 {
	return 0xce0d37b0
}

func (*PageBlockAnchor) ImplementsPageBlock() {}

// Audio
type PageBlockAudio struct {
	AudioID int64
	Caption *PageCaption
}

func (*PageBlockAudio) CRC() uint32 {
	return 0x804361ea
}

func (*PageBlockAudio) ImplementsPageBlock() {}

// Author and date of creation of article
type PageBlockAuthorDate struct {
	Author        RichText
	PublishedDate int32
}

func (*PageBlockAuthorDate) CRC() uint32 {
	return 0xbaafe5e0
}

func (*PageBlockAuthorDate) ImplementsPageBlock() {}

// Quote (equivalent to the HTML `&lt;blockquote&gt;`)
type PageBlockBlockquote struct {
	Text    RichText
	Caption RichText
}

func (*PageBlockBlockquote) CRC() uint32 {
	return 0x263d7c26
}

func (*PageBlockBlockquote) ImplementsPageBlock() {}

// Reference to a telegram channel
type PageBlockChannel struct {
	Channel Chat
}

func (*PageBlockChannel) CRC() uint32 {
	return 0xef1751b5
}

func (*PageBlockChannel) ImplementsPageBlock() {}

// Collage of media
type PageBlockCollage struct {
	Items   []PageBlock
	Caption *PageCaption
}

func (*PageBlockCollage) CRC() uint32 {
	return 0x65a0fa4d
}

func (*PageBlockCollage) ImplementsPageBlock() {}

// A page cover
type PageBlockCover struct {
	Cover PageBlock
}

func (*PageBlockCover) CRC() uint32 {
	return 0x39f23300
}

func (*PageBlockCover) ImplementsPageBlock() {}

// A collapsible details block
type PageBlockDetails struct {
	Open   bool `tl:"flag:0,encoded_in_bitflags"`
	Blocks []PageBlock
	Title  RichText
}

func (*PageBlockDetails) CRC() uint32 {
	return 0x76768bed
}

func (*PageBlockDetails) FlagIndex() int {
	return 0
}

func (*PageBlockDetails) ImplementsPageBlock() {}

// An empty block separating a page
type PageBlockDivider struct{}

func (*PageBlockDivider) CRC() uint32 {
	return 0xdb20b188
}

func (*PageBlockDivider) ImplementsPageBlock() {}

// An embedded webpage
type PageBlockEmbed struct {
	FullWidth      bool   `tl:"flag:0,encoded_in_bitflags"`
	AllowScrolling bool   `tl:"flag:3,encoded_in_bitflags"`
	URL            string `tl:"flag:1"`
	Html           string `tl:"flag:2"`
	PosterPhotoID  int64  `tl:"flag:4"`
	W              int32  `tl:"flag:5"`
	H              int32  `tl:"flag:5"`
	Caption        *PageCaption
}

func (*PageBlockEmbed) CRC() uint32 {
	return 0xa8718dc5
}

func (*PageBlockEmbed) FlagIndex() int {
	return 0
}

func (*PageBlockEmbed) ImplementsPageBlock() {}

// An embedded post
type PageBlockEmbedPost struct {
	URL           string
	WebpageID     int64
	AuthorPhotoID int64
	Author        string
	Date          int32
	Blocks        []PageBlock
	Caption       *PageCaption
}

func (*PageBlockEmbedPost) CRC() uint32 {
	return 0xf259a80b
}

func (*PageBlockEmbedPost) ImplementsPageBlock() {}

// Page footer
type PageBlockFooter struct {
	Text RichText
}

func (*PageBlockFooter) CRC() uint32 {
	return 0x48870999
}

func (*PageBlockFooter) ImplementsPageBlock() {}

// Page header
type PageBlockHeader struct {
	Text RichText
}

func (*PageBlockHeader) CRC() uint32 {
	return 0xbfd064ec
}

func (*PageBlockHeader) ImplementsPageBlock() {}

// Kicker
type PageBlockKicker struct {
	Text RichText
}

func (*PageBlockKicker) CRC() uint32 {
	return 0x1e148390
}

func (*PageBlockKicker) ImplementsPageBlock() {}

// Unordered list of IV blocks
type PageBlockList struct {
	Items []PageListItem
}

func (*PageBlockList) CRC() uint32 {
	return 0xe4e88011
}

func (*PageBlockList) ImplementsPageBlock() {}

// A map
type PageBlockMap struct {
	Geo     GeoPoint
	Zoom    int32
	W       int32
	H       int32
	Caption *PageCaption
}

func (*PageBlockMap) CRC() uint32 {
	return 0xa44f3ef6
}

func (*PageBlockMap) ImplementsPageBlock() {}

// Ordered list of IV blocks
type PageBlockOrderedList struct {
	Items []PageListOrderedItem
}

func (*PageBlockOrderedList) CRC() uint32 {
	return 0x9a8ae1e1
}

func (*PageBlockOrderedList) ImplementsPageBlock() {}

// A paragraph
type PageBlockParagraph struct {
	Text RichText
}

func (*PageBlockParagraph) CRC() uint32 {
	return 0x467a0766
}

func (*PageBlockParagraph) ImplementsPageBlock() {}

// A photo
type PageBlockPhoto struct {
	PhotoID   int64
	Caption   *PageCaption
	URL       string `tl:"flag:0"`
	WebpageID int64  `tl:"flag:0"`
}

func (*PageBlockPhoto) CRC() uint32 {
	return 0x1759c560
}

func (*PageBlockPhoto) FlagIndex() int {
	return 0
}

func (*PageBlockPhoto) ImplementsPageBlock() {}

// Preformatted (`&lt;pre&gt;` text)
type PageBlockPreformatted struct {
	Text     RichText
	Language string
}

func (*PageBlockPreformatted) CRC() uint32 {
	return 0xc070d93e
}

func (*PageBlockPreformatted) ImplementsPageBlock() {}

// Pullquote
type PageBlockPullquote struct {
	Text    RichText
	Caption RichText
}

func (*PageBlockPullquote) CRC() uint32 {
	return 0x4f4456d3
}

func (*PageBlockPullquote) ImplementsPageBlock() {}

// Related articles
type PageBlockRelatedArticles struct {
	Title    RichText
	Articles []*PageRelatedArticle
}

func (*PageBlockRelatedArticles) CRC() uint32 {
	return 0x16115a96
}

func (*PageBlockRelatedArticles) ImplementsPageBlock() {}

// Slideshow
type PageBlockSlideshow struct {
	Items   []PageBlock
	Caption *PageCaption
}

func (*PageBlockSlideshow) CRC() uint32 {
	return 0x31f9590
}

func (*PageBlockSlideshow) ImplementsPageBlock() {}

// Subheader
type PageBlockSubheader struct {
	Text RichText
}

func (*PageBlockSubheader) CRC() uint32 {
	return 0xf12bb6e1
}

func (*PageBlockSubheader) ImplementsPageBlock() {}

// Subtitle
type PageBlockSubtitle struct {
	Text RichText
}

func (*PageBlockSubtitle) CRC() uint32 {
	return 0x8ffa9a1f
}

func (*PageBlockSubtitle) ImplementsPageBlock() {}

// Table
type PageBlockTable struct {
	Bordered bool `tl:"flag:0,encoded_in_bitflags"`
	Striped  bool `tl:"flag:1,encoded_in_bitflags"`
	Title    RichText
	Rows     []*PageTableRow
}

func (*PageBlockTable) CRC() uint32 {
	return 0xbf4dea82
}

func (*PageBlockTable) FlagIndex() int {
	return 0
}

func (*PageBlockTable) ImplementsPageBlock() {}

// Title
type PageBlockTitle struct {
	Text RichText
}

func (*PageBlockTitle) CRC() uint32 {
	return 0x70abc3fd
}

func (*PageBlockTitle) ImplementsPageBlock() {}

// Unsupported IV element
type PageBlockUnsupported struct{}

func (*PageBlockUnsupported) CRC() uint32 {
	return 0x13567e8a
}

func (*PageBlockUnsupported) ImplementsPageBlock() {}

// Video
type PageBlockVideo struct {
	Autoplay bool `tl:"flag:0,encoded_in_bitflags"`
	Loop     bool `tl:"flag:1,encoded_in_bitflags"`
	VideoID  int64
	Caption  *PageCaption
}

func (*PageBlockVideo) CRC() uint32 {
	return 0x7c8fe7b6
}

func (*PageBlockVideo) FlagIndex() int {
	return 0
}

func (*PageBlockVideo) ImplementsPageBlock() {}

type PageListItem interface {
	tl.Object
	ImplementsPageListItem()
}

// List item
type PageListItemBlocks struct {
	Blocks []PageBlock
}

func (*PageListItemBlocks) CRC() uint32 {
	return 0x25e073fc
}

func (*PageListItemBlocks) ImplementsPageListItem() {}

// List item
type PageListItemText struct {
	Text RichText
}

func (*PageListItemText) CRC() uint32 {
	return 0xb92fb6cd
}

func (*PageListItemText) ImplementsPageListItem() {}

type PageListOrderedItem interface {
	tl.Object
	ImplementsPageListOrderedItem()
}

// Ordered list of [IV](https://core.telegram.orghttps://instantview.telegram.org) blocks
type PageListOrderedItemBlocks struct {
	Num    string
	Blocks []PageBlock
}

func (*PageListOrderedItemBlocks) CRC() uint32 {
	return 0x98dd8936
}

func (*PageListOrderedItemBlocks) ImplementsPageListOrderedItem() {}

// Ordered list of text items
type PageListOrderedItemText struct {
	Num  string
	Text RichText
}

func (*PageListOrderedItemText) CRC() uint32 {
	return 0x5e068047
}

func (*PageListOrderedItemText) ImplementsPageListOrderedItem() {}

type PasswordKdfAlgo interface {
	tl.Object
	ImplementsPasswordKdfAlgo()
}

// This key derivation algorithm defines that [SRP 2FA login](https://core.telegram.org/api/srp) must be used
type PasswordKdfAlgoSHA256SHA256Pbkdf2Hmacsha512Iter100000SHA256ModPow struct {
	Salt1 []byte
	Salt2 []byte
	G     int32
	P     []byte
}

func (*PasswordKdfAlgoSHA256SHA256Pbkdf2Hmacsha512Iter100000SHA256ModPow) CRC() uint32 {
	return 0x3a912d4a
}

func (*PasswordKdfAlgoSHA256SHA256Pbkdf2Hmacsha512Iter100000SHA256ModPow) ImplementsPasswordKdfAlgo() {
}

// Unknown KDF (most likely, the client is outdated and does not support the specified KDF algorithm)
type PasswordKdfAlgoUnknown struct{}

func (*PasswordKdfAlgoUnknown) CRC() uint32 {
	return 0xd45ab096
}

func (*PasswordKdfAlgoUnknown) ImplementsPasswordKdfAlgo() {}

type Peer interface {
	tl.Object
	ImplementsPeer()
}

// Channel/supergroup
type PeerChannel struct {
	ChannelID int64
}

func (*PeerChannel) CRC() uint32 {
	return 0xa2a5371e
}

func (*PeerChannel) ImplementsPeer() {}

// Group.
type PeerChat struct {
	ChatID int64
}

func (*PeerChat) CRC() uint32 {
	return 0x36c6019a
}

func (*PeerChat) ImplementsPeer() {}

// Chat partner
type PeerUser struct {
	UserID int64
}

func (*PeerUser) CRC() uint32 {
	return 0x59511722
}

func (*PeerUser) ImplementsPeer() {}

type PeerLocated interface {
	tl.Object
	ImplementsPeerLocated()
}

// Peer geolocated nearby
type PeerLocatedObj struct {
	Peer     Peer
	Expires  int32
	Distance int32
}

func (*PeerLocatedObj) CRC() uint32 {
	return 0xca461b5d
}

func (*PeerLocatedObj) ImplementsPeerLocated() {}

// Current peer
type PeerSelfLocated struct {
	Expires int32
}

func (*PeerSelfLocated) CRC() uint32 {
	return 0xf8ec284b
}

func (*PeerSelfLocated) ImplementsPeerLocated() {}

type PhoneCall interface {
	tl.Object
	ImplementsPhoneCall()
}

// Phone call
type PhoneCallObj struct {
	P2PAllowed       bool `tl:"flag:5,encoded_in_bitflags"`
	Video            bool `tl:"flag:6,encoded_in_bitflags"`
	ID               int64
	AccessHash       int64
	Date             int32
	AdminID          int64
	ParticipantID    int64
	GAOrB            []byte
	KeyFingerprint   int64
	Protocol         *PhoneCallProtocol
	Connections      []PhoneConnection
	StartDate        int32
	CustomParameters *DataJson `tl:"flag:7"`
}

func (*PhoneCallObj) CRC() uint32 {
	return 0x30535af5
}

func (*PhoneCallObj) FlagIndex() int {
	return 0
}

func (*PhoneCallObj) ImplementsPhoneCall() {}

// An accepted phone call
type PhoneCallAccepted struct {
	Video         bool `tl:"flag:6,encoded_in_bitflags"`
	ID            int64
	AccessHash    int64
	Date          int32
	AdminID       int64
	ParticipantID int64
	GB            []byte
	Protocol      *PhoneCallProtocol
}

func (*PhoneCallAccepted) CRC() uint32 {
	return 0x3660c311
}

func (*PhoneCallAccepted) FlagIndex() int {
	return 0
}

func (*PhoneCallAccepted) ImplementsPhoneCall() {}

// Indicates a discarded phone call
type PhoneCallDiscarded struct {
	NeedRating bool `tl:"flag:2,encoded_in_bitflags"`
	NeedDebug  bool `tl:"flag:3,encoded_in_bitflags"`
	Video      bool `tl:"flag:6,encoded_in_bitflags"`
	ID         int64
	Reason     PhoneCallDiscardReason `tl:"flag:0"`
	Duration   int32                  `tl:"flag:1"`
}

func (*PhoneCallDiscarded) CRC() uint32 {
	return 0x50ca4de1
}

func (*PhoneCallDiscarded) FlagIndex() int {
	return 0
}

func (*PhoneCallDiscarded) ImplementsPhoneCall() {}

// Empty constructor
type PhoneCallEmpty struct {
	ID int64
}

func (*PhoneCallEmpty) CRC() uint32 {
	return 0x5366c915
}

func (*PhoneCallEmpty) ImplementsPhoneCall() {}

// Requested phone call
type PhoneCallRequested struct {
	Video         bool `tl:"flag:6,encoded_in_bitflags"`
	ID            int64
	AccessHash    int64
	Date          int32
	AdminID       int64
	ParticipantID int64
	GAHash        []byte
	Protocol      *PhoneCallProtocol
}

func (*PhoneCallRequested) CRC() uint32 {
	return 0x14b0ed0c
}

func (*PhoneCallRequested) FlagIndex() int {
	return 0
}

func (*PhoneCallRequested) ImplementsPhoneCall() {}

// Incoming phone call
type PhoneCallWaiting struct {
	Video         bool `tl:"flag:6,encoded_in_bitflags"`
	ID            int64
	AccessHash    int64
	Date          int32
	AdminID       int64
	ParticipantID int64
	Protocol      *PhoneCallProtocol
	ReceiveDate   int32 `tl:"flag:0"`
}

func (*PhoneCallWaiting) CRC() uint32 {
	return 0xc5226f17
}

func (*PhoneCallWaiting) FlagIndex() int {
	return 0
}

func (*PhoneCallWaiting) ImplementsPhoneCall() {}

type PhoneConnection interface {
	tl.Object
	ImplementsPhoneConnection()
}

// Identifies an endpoint that can be used to connect to the other user in a phone call
type PhoneConnectionObj struct {
	Tcp     bool `tl:"flag:0,encoded_in_bitflags"`
	ID      int64
	Ip      string
	Ipv6    string
	Port    int32
	PeerTag []byte
}

func (*PhoneConnectionObj) CRC() uint32 {
	return 0x9cc123c7
}

func (*PhoneConnectionObj) FlagIndex() int {
	return 0
}

func (*PhoneConnectionObj) ImplementsPhoneConnection() {}

// WebRTC connection parameters
type PhoneConnectionWebrtc struct {
	Turn     bool `tl:"flag:0,encoded_in_bitflags"`
	Stun     bool `tl:"flag:1,encoded_in_bitflags"`
	ID       int64
	Ip       string
	Ipv6     string
	Port     int32
	Username string
	Password string
}

func (*PhoneConnectionWebrtc) CRC() uint32 {
	return 0x635fe375
}

func (*PhoneConnectionWebrtc) FlagIndex() int {
	return 0
}

func (*PhoneConnectionWebrtc) ImplementsPhoneConnection() {}

type Photo interface {
	tl.Object
	ImplementsPhoto()
}

// Photo
type PhotoObj struct {
	HasStickers   bool `tl:"flag:0,encoded_in_bitflags"`
	ID            int64
	AccessHash    int64
	FileReference []byte
	Date          int32
	Sizes         []PhotoSize
	VideoSizes    []VideoSize `tl:"flag:1"`
	DcID          int32
}

func (*PhotoObj) CRC() uint32 {
	return 0xfb197a65
}

func (*PhotoObj) FlagIndex() int {
	return 0
}

func (*PhotoObj) ImplementsPhoto() {}

// Empty constructor, non-existent photo
type PhotoEmpty struct {
	ID int64
}

func (*PhotoEmpty) CRC() uint32 {
	return 0x2331b22d
}

func (*PhotoEmpty) ImplementsPhoto() {}

type PhotoSize interface {
	tl.Object
	ImplementsPhotoSize()
}

// Description of an image and its content.
type PhotoCachedSize struct {
	Type  string
	W     int32
	H     int32
	Bytes []byte
}

func (*PhotoCachedSize) CRC() uint32 {
	return 0x21e1ad6
}

func (*PhotoCachedSize) ImplementsPhotoSize() {}

// Messages with animated stickers can have a compressed svg (&lt; 300 bytes) to show the outline of the sticker before fetching the actual lottie animation.
type PhotoPathSize struct {
	Type  string
	Bytes []byte
}

func (*PhotoPathSize) CRC() uint32 {
	return 0xd8214d41
}

func (*PhotoPathSize) ImplementsPhotoSize() {}

// Image description.
type PhotoSizeObj struct {
	Type string
	W    int32
	H    int32
	Size int32
}

func (*PhotoSizeObj) CRC() uint32 {
	return 0x75c78e60
}

func (*PhotoSizeObj) ImplementsPhotoSize() {}

// Empty constructor. Image with this thumbnail is unavailable.
type PhotoSizeEmpty struct {
	Type string
}

func (*PhotoSizeEmpty) CRC() uint32 {
	return 0xe17e23c
}

func (*PhotoSizeEmpty) ImplementsPhotoSize() {}

// Progressively encoded photosize
type PhotoSizeProgressive struct {
	Type  string
	W     int32
	H     int32
	Sizes []int32
}

func (*PhotoSizeProgressive) CRC() uint32 {
	return 0xfa3efb95
}

func (*PhotoSizeProgressive) ImplementsPhotoSize() {}

// A low-resolution compressed JPG payload
type PhotoStrippedSize struct {
	Type  string
	Bytes []byte
}

func (*PhotoStrippedSize) CRC() uint32 {
	return 0xe0b0bc2e
}

func (*PhotoStrippedSize) ImplementsPhotoSize() {}

type PostInteractionCounters interface {
	tl.Object
	ImplementsPostInteractionCounters()
}

// Interaction counters for a message.
type PostInteractionCountersMessage struct {
	MsgID     int32
	Views     int32
	Forwards  int32
	Reactions int32
}

func (*PostInteractionCountersMessage) CRC() uint32 {
	return 0xe7058e7f
}

func (*PostInteractionCountersMessage) ImplementsPostInteractionCounters() {}

// Interaction counters for a story.
type PostInteractionCountersStory struct {
	StoryID   int32
	Views     int32
	Forwards  int32
	Reactions int32
}

func (*PostInteractionCountersStory) CRC() uint32 {
	return 0x8a480e27
}

func (*PostInteractionCountersStory) ImplementsPostInteractionCounters() {}

type PrivacyRule interface {
	tl.Object
	ImplementsPrivacyRule()
}

// Allow all users
type PrivacyValueAllowAll struct{}

func (*PrivacyValueAllowAll) CRC() uint32 {
	return 0x65427b82
}

func (*PrivacyValueAllowAll) ImplementsPrivacyRule() {}

// Allow all participants of certain chats
type PrivacyValueAllowChatParticipants struct {
	Chats []int64
}

func (*PrivacyValueAllowChatParticipants) CRC() uint32 {
	return 0x6b134e8e
}

func (*PrivacyValueAllowChatParticipants) ImplementsPrivacyRule() {}

// Allow only [close friends Â»](https://core.telegram.org/api/privacy)
type PrivacyValueAllowCloseFriends struct{}

func (*PrivacyValueAllowCloseFriends) CRC() uint32 {
	return 0xf7e8d89b
}

func (*PrivacyValueAllowCloseFriends) ImplementsPrivacyRule() {}

// Allow all contacts
type PrivacyValueAllowContacts struct{}

func (*PrivacyValueAllowContacts) CRC() uint32 {
	return 0xfffe1bac
}

func (*PrivacyValueAllowContacts) ImplementsPrivacyRule() {}

type PrivacyValueAllowPremium struct{}

func (*PrivacyValueAllowPremium) CRC() uint32 {
	return 0xece9814b
}

func (*PrivacyValueAllowPremium) ImplementsPrivacyRule() {}

// Allow only certain users
type PrivacyValueAllowUsers struct {
	Users []int64
}

func (*PrivacyValueAllowUsers) CRC() uint32 {
	return 0xb8905fb2
}

func (*PrivacyValueAllowUsers) ImplementsPrivacyRule() {}

// Disallow all users
type PrivacyValueDisallowAll struct{}

func (*PrivacyValueDisallowAll) CRC() uint32 {
	return 0x8b73e763
}

func (*PrivacyValueDisallowAll) ImplementsPrivacyRule() {}

// Disallow only participants of certain chats
type PrivacyValueDisallowChatParticipants struct {
	Chats []int64
}

func (*PrivacyValueDisallowChatParticipants) CRC() uint32 {
	return 0x41c87565
}

func (*PrivacyValueDisallowChatParticipants) ImplementsPrivacyRule() {}

// Disallow only contacts
type PrivacyValueDisallowContacts struct{}

func (*PrivacyValueDisallowContacts) CRC() uint32 {
	return 0xf888fa1a
}

func (*PrivacyValueDisallowContacts) ImplementsPrivacyRule() {}

// Disallow only certain users
type PrivacyValueDisallowUsers struct {
	Users []int64
}

func (*PrivacyValueDisallowUsers) CRC() uint32 {
	return 0xe4621141
}

func (*PrivacyValueDisallowUsers) ImplementsPrivacyRule() {}

type PublicForward interface {
	tl.Object
	ImplementsPublicForward()
}

// Contains info about a forward of a [story](https://core.telegram.org/api/stories) as a message.
type PublicForwardMessage struct {
	Message Message
}

func (*PublicForwardMessage) CRC() uint32 {
	return 0x1f2bf4a
}

func (*PublicForwardMessage) ImplementsPublicForward() {}

// Contains info about a forward of a [story](https://core.telegram.org/api/stories) as a repost by a public channel.
type PublicForwardStory struct {
	Peer  Peer
	Story StoryItem
}

func (*PublicForwardStory) CRC() uint32 {
	return 0xedf3add0
}

func (*PublicForwardStory) ImplementsPublicForward() {}

type Reaction interface {
	tl.Object
	ImplementsReaction()
}

// [Custom emoji](https://core.telegram.org/api/custom-emoji) message reaction
type ReactionCustomEmoji struct {
	DocumentID int64
}

func (*ReactionCustomEmoji) CRC() uint32 {
	return 0x8935fc73
}

func (*ReactionCustomEmoji) ImplementsReaction() {}

// Normal emoji message reaction
type ReactionEmoji struct {
	Emoticon string
}

func (*ReactionEmoji) CRC() uint32 {
	return 0x1b2286b8
}

func (*ReactionEmoji) ImplementsReaction() {}

// No reaction
type ReactionEmpty struct{}

func (*ReactionEmpty) CRC() uint32 {
	return 0x79f5d419
}

func (*ReactionEmpty) ImplementsReaction() {}

type RecentMeURL interface {
	tl.Object
	ImplementsRecentMeURL()
}

// Recent t.me link to a chat
type RecentMeURLChat struct {
	URL    string
	ChatID int64
}

func (*RecentMeURLChat) CRC() uint32 {
	return 0xb2da71d2
}

func (*RecentMeURLChat) ImplementsRecentMeURL() {}

// Recent t.me invite link to a chat
type RecentMeURLChatInvite struct {
	URL        string
	ChatInvite ChatInvite
}

func (*RecentMeURLChatInvite) CRC() uint32 {
	return 0xeb49081d
}

func (*RecentMeURLChatInvite) ImplementsRecentMeURL() {}

// Recent t.me stickerset installation URL
type RecentMeURLStickerSet struct {
	URL string
	Set StickerSetCovered
}

func (*RecentMeURLStickerSet) CRC() uint32 {
	return 0xbc0a57dc
}

func (*RecentMeURLStickerSet) ImplementsRecentMeURL() {}

// Unknown t.me url
type RecentMeURLUnknown struct {
	URL string
}

func (*RecentMeURLUnknown) CRC() uint32 {
	return 0x46e1d13d
}

func (*RecentMeURLUnknown) ImplementsRecentMeURL() {}

// Recent t.me link to a user
type RecentMeURLUser struct {
	URL    string
	UserID int64
}

func (*RecentMeURLUser) CRC() uint32 {
	return 0xb92c09e2
}

func (*RecentMeURLUser) ImplementsRecentMeURL() {}

type ReplyMarkup interface {
	tl.Object
	ImplementsReplyMarkup()
}

// Bot or inline keyboard
type ReplyInlineMarkup struct {
	Rows []*KeyboardButtonRow
}

func (*ReplyInlineMarkup) CRC() uint32 {
	return 0x48a30254
}

func (*ReplyInlineMarkup) ImplementsReplyMarkup() {}

// Force the user to send a reply
type ReplyKeyboardForceReply struct {
	SingleUse   bool   `tl:"flag:1,encoded_in_bitflags"`
	Selective   bool   `tl:"flag:2,encoded_in_bitflags"`
	Placeholder string `tl:"flag:3"`
}

func (*ReplyKeyboardForceReply) CRC() uint32 {
	return 0x86b40b08
}

func (*ReplyKeyboardForceReply) FlagIndex() int {
	return 0
}

func (*ReplyKeyboardForceReply) ImplementsReplyMarkup() {}

// Hide sent bot keyboard
type ReplyKeyboardHide struct {
	Selective bool `tl:"flag:2,encoded_in_bitflags"`
}

func (*ReplyKeyboardHide) CRC() uint32 {
	return 0xa03e5b85
}

func (*ReplyKeyboardHide) FlagIndex() int {
	return 0
}

func (*ReplyKeyboardHide) ImplementsReplyMarkup() {}

// Bot keyboard
type ReplyKeyboardMarkup struct {
	Resize      bool `tl:"flag:0,encoded_in_bitflags"`
	SingleUse   bool `tl:"flag:1,encoded_in_bitflags"`
	Selective   bool `tl:"flag:2,encoded_in_bitflags"`
	Persistent  bool `tl:"flag:4,encoded_in_bitflags"`
	Rows        []*KeyboardButtonRow
	Placeholder string `tl:"flag:3"`
}

func (*ReplyKeyboardMarkup) CRC() uint32 {
	return 0x85dd99d1
}

func (*ReplyKeyboardMarkup) FlagIndex() int {
	return 0
}

func (*ReplyKeyboardMarkup) ImplementsReplyMarkup() {}

type RequestPeerType interface {
	tl.Object
	ImplementsRequestPeerType()
}

// Choose a channel
type RequestPeerTypeBroadcast struct {
	Creator         bool             `tl:"flag:0,encoded_in_bitflags"`
	HasUsername     bool             `tl:"flag:3"`
	UserAdminRights *ChatAdminRights `tl:"flag:1"`
	BotAdminRights  *ChatAdminRights `tl:"flag:2"`
}

func (*RequestPeerTypeBroadcast) CRC() uint32 {
	return 0x339bef6c
}

func (*RequestPeerTypeBroadcast) FlagIndex() int {
	return 0
}

func (*RequestPeerTypeBroadcast) ImplementsRequestPeerType() {}

// Choose a chat or supergroup
type RequestPeerTypeChat struct {
	Creator         bool             `tl:"flag:0,encoded_in_bitflags"`
	BotParticipant  bool             `tl:"flag:5,encoded_in_bitflags"`
	HasUsername     bool             `tl:"flag:3"`
	Forum           bool             `tl:"flag:4"`
	UserAdminRights *ChatAdminRights `tl:"flag:1"`
	BotAdminRights  *ChatAdminRights `tl:"flag:2"`
}

func (*RequestPeerTypeChat) CRC() uint32 {
	return 0xc9f06e1b
}

func (*RequestPeerTypeChat) FlagIndex() int {
	return 0
}

func (*RequestPeerTypeChat) ImplementsRequestPeerType() {}

// Choose a user.
type RequestPeerTypeUser struct {
	Bot     bool `tl:"flag:0"`
	Premium bool `tl:"flag:1"`
}

func (*RequestPeerTypeUser) CRC() uint32 {
	return 0x5f3b8a00
}

func (*RequestPeerTypeUser) FlagIndex() int {
	return 0
}

func (*RequestPeerTypeUser) ImplementsRequestPeerType() {}

type RequestedPeer interface {
	tl.Object
	ImplementsRequestedPeer()
}
type RequestedPeerChannel struct {
	ChannelID int64
	Title     string `tl:"flag:0"`
	Username  string `tl:"flag:1"`
	Photo     Photo  `tl:"flag:2"`
}

func (*RequestedPeerChannel) CRC() uint32 {
	return 0x8ba403e4
}

func (*RequestedPeerChannel) FlagIndex() int {
	return 0
}

func (*RequestedPeerChannel) ImplementsRequestedPeer() {}

type RequestedPeerChat struct {
	ChatID int64
	Title  string `tl:"flag:0"`
	Photo  Photo  `tl:"flag:2"`
}

func (*RequestedPeerChat) CRC() uint32 {
	return 0x7307544f
}

func (*RequestedPeerChat) FlagIndex() int {
	return 0
}

func (*RequestedPeerChat) ImplementsRequestedPeer() {}

type RequestedPeerUser struct {
	UserID    int64
	FirstName string `tl:"flag:0"`
	LastName  string `tl:"flag:0"`
	Username  string `tl:"flag:1"`
	Photo     Photo  `tl:"flag:2"`
}

func (*RequestedPeerUser) CRC() uint32 {
	return 0xd62ff46a
}

func (*RequestedPeerUser) FlagIndex() int {
	return 0
}

func (*RequestedPeerUser) ImplementsRequestedPeer() {}

type RichText interface {
	tl.Object
	ImplementsRichText()
}

// Text linking to another section of the page
type TextAnchor struct {
	Text RichText
	Name string
}

func (*TextAnchor) CRC() uint32 {
	return 0x35553762
}

func (*TextAnchor) ImplementsRichText() {}

// <strong>Bold</strong> text
type TextBold struct {
	Text RichText
}

func (*TextBold) CRC() uint32 {
	return 0x6724abc4
}

func (*TextBold) ImplementsRichText() {}

// Concatenation of rich texts
type TextConcat struct {
	Texts []RichText
}

func (*TextConcat) CRC() uint32 {
	return 0x7e6260d7
}

func (*TextConcat) ImplementsRichText() {}

// Rich text email link
type TextEmail struct {
	Text  RichText
	Email string
}

func (*TextEmail) CRC() uint32 {
	return 0xde5a0dd6
}

func (*TextEmail) ImplementsRichText() {}

// Empty rich text element
type TextEmpty struct{}

func (*TextEmpty) CRC() uint32 {
	return 0xdc3d824f
}

func (*TextEmpty) ImplementsRichText() {}

// `fixed-width` rich text
type TextFixed struct {
	Text RichText
}

func (*TextFixed) CRC() uint32 {
	return 0x6c3f19b9
}

func (*TextFixed) ImplementsRichText() {}

// Inline image
type TextImage struct {
	DocumentID int64
	W          int32
	H          int32
}

func (*TextImage) CRC() uint32 {
	return 0x81ccf4f
}

func (*TextImage) ImplementsRichText() {}

// <em>Italic</em> text
type TextItalic struct {
	Text RichText
}

func (*TextItalic) CRC() uint32 {
	return 0xd912a59c
}

func (*TextItalic) ImplementsRichText() {}

// Highlighted text
type TextMarked struct {
	Text RichText
}

func (*TextMarked) CRC() uint32 {
	return 0x34b8621
}

func (*TextMarked) ImplementsRichText() {}

// Rich text linked to a phone number
type TextPhone struct {
	Text  RichText
	Phone string
}

func (*TextPhone) CRC() uint32 {
	return 0x1ccb966a
}

func (*TextPhone) ImplementsRichText() {}

// Plain text
type TextPlain struct {
	Text string
}

func (*TextPlain) CRC() uint32 {
	return 0x744694e0
}

func (*TextPlain) ImplementsRichText() {}

// <del>Strikethrough</del> text
type TextStrike struct {
	Text RichText
}

func (*TextStrike) CRC() uint32 {
	return 0x9bf8bb95
}

func (*TextStrike) ImplementsRichText() {}

// Subscript text
type TextSubscript struct {
	Text RichText
}

func (*TextSubscript) CRC() uint32 {
	return 0xed6a8504
}

func (*TextSubscript) ImplementsRichText() {}

// Superscript text
type TextSuperscript struct {
	Text RichText
}

func (*TextSuperscript) CRC() uint32 {
	return 0xc7fb5e01
}

func (*TextSuperscript) ImplementsRichText() {}

// Underlined text
type TextUnderline struct {
	Text RichText
}

func (*TextUnderline) CRC() uint32 {
	return 0xc12622c4
}

func (*TextUnderline) ImplementsRichText() {}

// Link
type TextURL struct {
	Text      RichText
	URL       string
	WebpageID int64
}

func (*TextURL) CRC() uint32 {
	return 0x3c2884c1
}

func (*TextURL) ImplementsRichText() {}

type SecureFile interface {
	tl.Object
	ImplementsSecureFile()
}

// Secure [passport](https://core.telegram.org/passport) file, for more info [see the passport docs Â»](https://core.telegram.org/passport/encryption#inputsecurefile)
type SecureFileObj struct {
	ID         int64
	AccessHash int64
	Size       int64
	DcID       int32
	Date       int32
	FileHash   []byte
	Secret     []byte
}

func (*SecureFileObj) CRC() uint32 {
	return 0x7d09c27e
}

func (*SecureFileObj) ImplementsSecureFile() {}

// Empty constructor
type SecureFileEmpty struct{}

func (*SecureFileEmpty) CRC() uint32 {
	return 0x64199744
}

func (*SecureFileEmpty) ImplementsSecureFile() {}

type SecurePasswordKdfAlgo interface {
	tl.Object
	ImplementsSecurePasswordKdfAlgo()
}

// PBKDF2 with SHA512 and 100000 iterations KDF algo
type SecurePasswordKdfAlgoPbkdf2Hmacsha512Iter100000 struct {
	Salt []byte
}

func (*SecurePasswordKdfAlgoPbkdf2Hmacsha512Iter100000) CRC() uint32 {
	return 0xbbf2dda0
}

func (*SecurePasswordKdfAlgoPbkdf2Hmacsha512Iter100000) ImplementsSecurePasswordKdfAlgo() {}

// SHA512 KDF algo
type SecurePasswordKdfAlgoSHA512 struct {
	Salt []byte
}

func (*SecurePasswordKdfAlgoSHA512) CRC() uint32 {
	return 0x86471d92
}

func (*SecurePasswordKdfAlgoSHA512) ImplementsSecurePasswordKdfAlgo() {}

// Unknown KDF algo (most likely the client has to be updated)
type SecurePasswordKdfAlgoUnknown struct{}

func (*SecurePasswordKdfAlgoUnknown) CRC() uint32 {
	return 0x4a8537
}

func (*SecurePasswordKdfAlgoUnknown) ImplementsSecurePasswordKdfAlgo() {}

type SecurePlainData interface {
	tl.Object
	ImplementsSecurePlainData()
}

// Email address to use in [telegram passport](https://core.telegram.org/passport): [it must be verified, first Â»](https://core.telegram.org/passport/encryption#secureplaindata).
type SecurePlainEmail struct {
	Email string
}

func (*SecurePlainEmail) CRC() uint32 {
	return 0x21ec5a5f
}

func (*SecurePlainEmail) ImplementsSecurePlainData() {}

// Phone number to use in [telegram passport](https://core.telegram.org/passport): [it must be verified, first Â»](https://core.telegram.org/passport/encryption#secureplaindata).
type SecurePlainPhone struct {
	Phone string
}

func (*SecurePlainPhone) CRC() uint32 {
	return 0x7d6099dd
}

func (*SecurePlainPhone) ImplementsSecurePlainData() {}

type SecureRequiredType interface {
	tl.Object
	ImplementsSecureRequiredType()
}

// Required type
type SecureRequiredTypeObj struct {
	NativeNames         bool `tl:"flag:0,encoded_in_bitflags"`
	SelfieRequired      bool `tl:"flag:1,encoded_in_bitflags"`
	TranslationRequired bool `tl:"flag:2,encoded_in_bitflags"`
	Type                SecureValueType
}

func (*SecureRequiredTypeObj) CRC() uint32 {
	return 0x829d99da
}

func (*SecureRequiredTypeObj) FlagIndex() int {
	return 0
}

func (*SecureRequiredTypeObj) ImplementsSecureRequiredType() {}

// One of
type SecureRequiredTypeOneOf struct {
	Types []SecureRequiredType
}

func (*SecureRequiredTypeOneOf) CRC() uint32 {
	return 0x27477b4
}

func (*SecureRequiredTypeOneOf) ImplementsSecureRequiredType() {}

type SecureValueError interface {
	tl.Object
	ImplementsSecureValueError()
}

// Secure value error
type SecureValueErrorObj struct {
	Type SecureValueType
	Hash []byte
	Text string
}

func (*SecureValueErrorObj) CRC() uint32 {
	return 0x869d758f
}

func (*SecureValueErrorObj) ImplementsSecureValueError() {}

// Represents an issue in one of the data fields that was provided by the user. The error is considered resolved when the field's value changes.
type SecureValueErrorData struct {
	Type     SecureValueType
	DataHash []byte
	Field    string
	Text     string
}

func (*SecureValueErrorData) CRC() uint32 {
	return 0xe8a40bd9
}

func (*SecureValueErrorData) ImplementsSecureValueError() {}

// Represents an issue with a document scan. The error is considered resolved when the file with the document scan changes.
type SecureValueErrorFile struct {
	Type     SecureValueType
	FileHash []byte
	Text     string
}

func (*SecureValueErrorFile) CRC() uint32 {
	return 0x7a700873
}

func (*SecureValueErrorFile) ImplementsSecureValueError() {}

// Represents an issue with a list of scans. The error is considered resolved when the list of files containing the scans changes.
type SecureValueErrorFiles struct {
	Type     SecureValueType
	FileHash [][]byte
	Text     string
}

func (*SecureValueErrorFiles) CRC() uint32 {
	return 0x666220e9
}

func (*SecureValueErrorFiles) ImplementsSecureValueError() {}

// Represents an issue with the front side of a document. The error is considered resolved when the file with the front side of the document changes.
type SecureValueErrorFrontSide struct {
	Type     SecureValueType
	FileHash []byte
	Text     string
}

func (*SecureValueErrorFrontSide) CRC() uint32 {
	return 0xbe3dfa
}

func (*SecureValueErrorFrontSide) ImplementsSecureValueError() {}

// Represents an issue with the reverse side of a document. The error is considered resolved when the file with reverse side of the document changes.
type SecureValueErrorReverseSide struct {
	Type     SecureValueType
	FileHash []byte
	Text     string
}

func (*SecureValueErrorReverseSide) CRC() uint32 {
	return 0x868a2aa5
}

func (*SecureValueErrorReverseSide) ImplementsSecureValueError() {}

// Represents an issue with the selfie with a document. The error is considered resolved when the file with the selfie changes.
type SecureValueErrorSelfie struct {
	Type     SecureValueType
	FileHash []byte
	Text     string
}

func (*SecureValueErrorSelfie) CRC() uint32 {
	return 0xe537ced6
}

func (*SecureValueErrorSelfie) ImplementsSecureValueError() {}

// Represents an issue with one of the files that constitute the translation of a document. The error is considered resolved when the file changes.
type SecureValueErrorTranslationFile struct {
	Type     SecureValueType
	FileHash []byte
	Text     string
}

func (*SecureValueErrorTranslationFile) CRC() uint32 {
	return 0xa1144770
}

func (*SecureValueErrorTranslationFile) ImplementsSecureValueError() {}

// Represents an issue with the translated version of a document. The error is considered resolved when a file with the document translation changes.
type SecureValueErrorTranslationFiles struct {
	Type     SecureValueType
	FileHash [][]byte
	Text     string
}

func (*SecureValueErrorTranslationFiles) CRC() uint32 {
	return 0x34636dd8
}

func (*SecureValueErrorTranslationFiles) ImplementsSecureValueError() {}

type SendMessageAction interface {
	tl.Object
	ImplementsSendMessageAction()
}

// Invalidate all previous action updates. E.g. when user deletes entered text or aborts a video upload.
type SendMessageCancelAction struct{}

func (*SendMessageCancelAction) CRC() uint32 {
	return 0xfd5ec8f5
}

func (*SendMessageCancelAction) ImplementsSendMessageAction() {}

// User is selecting a contact to share.
type SendMessageChooseContactAction struct{}

func (*SendMessageChooseContactAction) CRC() uint32 {
	return 0x628cbc6f
}

func (*SendMessageChooseContactAction) ImplementsSendMessageAction() {}

// User is choosing a sticker
type SendMessageChooseStickerAction struct{}

func (*SendMessageChooseStickerAction) CRC() uint32 {
	return 0xb05ac6b1
}

func (*SendMessageChooseStickerAction) ImplementsSendMessageAction() {}

// User has clicked on an animated emoji triggering a [reaction, click here for more info Â»](https://core.telegram.org/api/animated-emojis#emoji-reactions).
type SendMessageEmojiInteraction struct {
	Emoticon    string
	MsgID       int32
	Interaction *DataJson
}

func (*SendMessageEmojiInteraction) CRC() uint32 {
	return 0x25972bcb
}

func (*SendMessageEmojiInteraction) ImplementsSendMessageAction() {}

// User is watching an animated emoji reaction triggered by another user, [click here for more info Â»](https://core.telegram.org/api/animated-emojis#emoji-reactions).
type SendMessageEmojiInteractionSeen struct {
	Emoticon string
}

func (*SendMessageEmojiInteractionSeen) CRC() uint32 {
	return 0xb665902e
}

func (*SendMessageEmojiInteractionSeen) ImplementsSendMessageAction() {}

// User is playing a game
type SendMessageGamePlayAction struct{}

func (*SendMessageGamePlayAction) CRC() uint32 {
	return 0xdd6a8f48
}

func (*SendMessageGamePlayAction) ImplementsSendMessageAction() {}

// User is selecting a location to share.
type SendMessageGeoLocationAction struct{}

func (*SendMessageGeoLocationAction) CRC() uint32 {
	return 0x176f8ba1
}

func (*SendMessageGeoLocationAction) ImplementsSendMessageAction() {}

// Chat history is being imported
type SendMessageHistoryImportAction struct {
	Progress int32
}

func (*SendMessageHistoryImportAction) CRC() uint32 {
	return 0xdbda9246
}

func (*SendMessageHistoryImportAction) ImplementsSendMessageAction() {}

// User is recording a voice message.
type SendMessageRecordAudioAction struct{}

func (*SendMessageRecordAudioAction) CRC() uint32 {
	return 0xd52f73f7
}

func (*SendMessageRecordAudioAction) ImplementsSendMessageAction() {}

// User is recording a round video to share
type SendMessageRecordRoundAction struct{}

func (*SendMessageRecordRoundAction) CRC() uint32 {
	return 0x88f27fbc
}

func (*SendMessageRecordRoundAction) ImplementsSendMessageAction() {}

// User is recording a video.
type SendMessageRecordVideoAction struct{}

func (*SendMessageRecordVideoAction) CRC() uint32 {
	return 0xa187d66f
}

func (*SendMessageRecordVideoAction) ImplementsSendMessageAction() {}

// User is typing.
type SendMessageTypingAction struct{}

func (*SendMessageTypingAction) CRC() uint32 {
	return 0x16bf744e
}

func (*SendMessageTypingAction) ImplementsSendMessageAction() {}

// User is uploading a voice message.
type SendMessageUploadAudioAction struct {
	Progress int32
}

func (*SendMessageUploadAudioAction) CRC() uint32 {
	return 0xf351d7ab
}

func (*SendMessageUploadAudioAction) ImplementsSendMessageAction() {}

// User is uploading a file.
type SendMessageUploadDocumentAction struct {
	Progress int32
}

func (*SendMessageUploadDocumentAction) CRC() uint32 {
	return 0xaa0cd9e4
}

func (*SendMessageUploadDocumentAction) ImplementsSendMessageAction() {}

// User is uploading a photo.
type SendMessageUploadPhotoAction struct {
	Progress int32
}

func (*SendMessageUploadPhotoAction) CRC() uint32 {
	return 0xd1d34a26
}

func (*SendMessageUploadPhotoAction) ImplementsSendMessageAction() {}

// User is uploading a round video
type SendMessageUploadRoundAction struct {
	Progress int32
}

func (*SendMessageUploadRoundAction) CRC() uint32 {
	return 0x243e1c66
}

func (*SendMessageUploadRoundAction) ImplementsSendMessageAction() {}

// User is uploading a video.
type SendMessageUploadVideoAction struct {
	Progress int32
}

func (*SendMessageUploadVideoAction) CRC() uint32 {
	return 0xe9763aec
}

func (*SendMessageUploadVideoAction) ImplementsSendMessageAction() {}

// User is currently speaking in the group call
type SpeakingInGroupCallAction struct{}

func (*SpeakingInGroupCallAction) CRC() uint32 {
	return 0xd92c2285
}

func (*SpeakingInGroupCallAction) ImplementsSendMessageAction() {}

type StarsTransactionPeer interface {
	tl.Object
	ImplementsStarsTransactionPeer()
}
type StarsTransactionPeerObj struct {
	Peer Peer
}

func (*StarsTransactionPeerObj) CRC() uint32 {
	return 0xd80da15d
}

func (*StarsTransactionPeerObj) ImplementsStarsTransactionPeer() {}

type StarsTransactionPeerAds struct{}

func (*StarsTransactionPeerAds) CRC() uint32 {
	return 0x60682812
}

func (*StarsTransactionPeerAds) ImplementsStarsTransactionPeer() {}

type StarsTransactionPeerAppStore struct{}

func (*StarsTransactionPeerAppStore) CRC() uint32 {
	return 0xb457b375
}

func (*StarsTransactionPeerAppStore) ImplementsStarsTransactionPeer() {}

type StarsTransactionPeerFragment struct{}

func (*StarsTransactionPeerFragment) CRC() uint32 {
	return 0xe92fd902
}

func (*StarsTransactionPeerFragment) ImplementsStarsTransactionPeer() {}

type StarsTransactionPeerPlayMarket struct{}

func (*StarsTransactionPeerPlayMarket) CRC() uint32 {
	return 0x7b560a0b
}

func (*StarsTransactionPeerPlayMarket) ImplementsStarsTransactionPeer() {}

type StarsTransactionPeerPremiumBot struct{}

func (*StarsTransactionPeerPremiumBot) CRC() uint32 {
	return 0x250dbaf8
}

func (*StarsTransactionPeerPremiumBot) ImplementsStarsTransactionPeer() {}

type StarsTransactionPeerUnsupported struct{}

func (*StarsTransactionPeerUnsupported) CRC() uint32 {
	return 0x95f2bfe4
}

func (*StarsTransactionPeerUnsupported) ImplementsStarsTransactionPeer() {}

type StatsGraph interface {
	tl.Object
	ImplementsStatsGraph()
}

// [Channel statistics graph](https://core.telegram.org/api/stats)
type StatsGraphObj struct {
	Json      *DataJson
	ZoomToken string `tl:"flag:0"`
}

func (*StatsGraphObj) CRC() uint32 {
	return 0x8ea464b6
}

func (*StatsGraphObj) FlagIndex() int {
	return 0
}

func (*StatsGraphObj) ImplementsStatsGraph() {}

// This [channel statistics graph](https://core.telegram.org/api/stats) must be generated asynchronously using [stats.loadAsyncGraph](https://core.telegram.org/method/stats.loadAsyncGraph) to reduce server load
type StatsGraphAsync struct {
	Token string
}

func (*StatsGraphAsync) CRC() uint32 {
	return 0x4a27eb2d
}

func (*StatsGraphAsync) ImplementsStatsGraph() {}

// An error occurred while generating the [statistics graph](https://core.telegram.org/api/stats)
type StatsGraphError struct {
	Error string
}

func (*StatsGraphError) CRC() uint32 {
	return 0xbedc9822
}

func (*StatsGraphError) ImplementsStatsGraph() {}

type StickerSetCovered interface {
	tl.Object
	ImplementsStickerSetCovered()
}

// Stickerset with a single sticker as preview
type StickerSetCoveredObj struct {
	Set   *StickerSet
	Cover Document
}

func (*StickerSetCoveredObj) CRC() uint32 {
	return 0x6410a5d2
}

func (*StickerSetCoveredObj) ImplementsStickerSetCovered() {}

/*
Stickerset preview with all stickers of the stickerset included.<br>
Currently used only for [custom emoji stickersets](https://core.telegram.org/api/custom-emoji), to avoid a further call to [messages.getStickerSet](https://core.telegram.org/method/messages.getStickerSet).
*/
type StickerSetFullCovered struct {
	Set       *StickerSet
	Packs     []*StickerPack
	Keywords  []*StickerKeyword
	Documents []Document
}

func (*StickerSetFullCovered) CRC() uint32 {
	return 0x40d13c0e
}

func (*StickerSetFullCovered) ImplementsStickerSetCovered() {}

// Stickerset, with multiple stickers as preview
type StickerSetMultiCovered struct {
	Set    *StickerSet
	Covers []Document
}

func (*StickerSetMultiCovered) CRC() uint32 {
	return 0x3407e51b
}

func (*StickerSetMultiCovered) ImplementsStickerSetCovered() {}

// Just the stickerset information, with no previews.
type StickerSetNoCovered struct {
	Set *StickerSet
}

func (*StickerSetNoCovered) CRC() uint32 {
	return 0x77b15d1c
}

func (*StickerSetNoCovered) ImplementsStickerSetCovered() {}

type StoryItem interface {
	tl.Object
	ImplementsStoryItem()
}

// Represents a [story](https://core.telegram.org/api/stories).
type StoryItemObj struct {
	Pinned           bool `tl:"flag:5,encoded_in_bitflags"`
	Public           bool `tl:"flag:7,encoded_in_bitflags"`
	CloseFriends     bool `tl:"flag:8,encoded_in_bitflags"`
	Min              bool `tl:"flag:9,encoded_in_bitflags"`
	Noforwards       bool `tl:"flag:10,encoded_in_bitflags"`
	Edited           bool `tl:"flag:11,encoded_in_bitflags"`
	Contacts         bool `tl:"flag:12,encoded_in_bitflags"`
	SelectedContacts bool `tl:"flag:13,encoded_in_bitflags"`
	Out              bool `tl:"flag:16,encoded_in_bitflags"`
	ID               int32
	Date             int32
	FromID           Peer            `tl:"flag:18"`
	FwdFrom          *StoryFwdHeader `tl:"flag:17"`
	ExpireDate       int32
	Caption          string          `tl:"flag:0"`
	Entities         []MessageEntity `tl:"flag:1"`
	Media            MessageMedia
	MediaAreas       []MediaArea   `tl:"flag:14"`
	Privacy          []PrivacyRule `tl:"flag:2"`
	Views            *StoryViews   `tl:"flag:3"`
	SentReaction     Reaction      `tl:"flag:15"`
}

func (*StoryItemObj) CRC() uint32 {
	return 0x79b26a24
}

func (*StoryItemObj) FlagIndex() int {
	return 0
}

func (*StoryItemObj) ImplementsStoryItem() {}

// Represents a previously active story, that was deleted
type StoryItemDeleted struct {
	ID int32
}

func (*StoryItemDeleted) CRC() uint32 {
	return 0x51e6ee4f
}

func (*StoryItemDeleted) ImplementsStoryItem() {}

// Represents an active story, whose full information was omitted for space and performance reasons; use [stories.getStoriesByID](https://core.telegram.org/method/stories.getStoriesByID) to fetch full info about the skipped story when and if needed.
type StoryItemSkipped struct {
	CloseFriends bool `tl:"flag:8,encoded_in_bitflags"`
	ID           int32
	Date         int32
	ExpireDate   int32
}

func (*StoryItemSkipped) CRC() uint32 {
	return 0xffadc913
}

func (*StoryItemSkipped) FlagIndex() int {
	return 0
}

func (*StoryItemSkipped) ImplementsStoryItem() {}

type StoryReaction interface {
	tl.Object
	ImplementsStoryReaction()
}

// How a certain peer reacted to a story
type StoryReactionObj struct {
	PeerID   Peer
	Date     int32
	Reaction Reaction
}

func (*StoryReactionObj) CRC() uint32 {
	return 0x6090d6d5
}

func (*StoryReactionObj) ImplementsStoryReaction() {}

// A certain peer has forwarded the story as a message to a public chat or channel.
type StoryReactionPublicForward struct {
	Message Message
}

func (*StoryReactionPublicForward) CRC() uint32 {
	return 0xbbab2643
}

func (*StoryReactionPublicForward) ImplementsStoryReaction() {}

// A certain peer has reposted the story.
type StoryReactionPublicRepost struct {
	PeerID Peer
	Story  StoryItem
}

func (*StoryReactionPublicRepost) CRC() uint32 {
	return 0xcfcd0f13
}

func (*StoryReactionPublicRepost) ImplementsStoryReaction() {}

type StoryView interface {
	tl.Object
	ImplementsStoryView()
}

// [Story](https://core.telegram.org/api/stories) view date and reaction information
type StoryViewObj struct {
	Blocked              bool `tl:"flag:0,encoded_in_bitflags"`
	BlockedMyStoriesFrom bool `tl:"flag:1,encoded_in_bitflags"`
	UserID               int64
	Date                 int32
	Reaction             Reaction `tl:"flag:2"`
}

func (*StoryViewObj) CRC() uint32 {
	return 0xb0bdeac5
}

func (*StoryViewObj) FlagIndex() int {
	return 0
}

func (*StoryViewObj) ImplementsStoryView() {}

// A certain peer has forwarded the story as a message to a public chat or channel.
type StoryViewPublicForward struct {
	Blocked              bool `tl:"flag:0,encoded_in_bitflags"`
	BlockedMyStoriesFrom bool `tl:"flag:1,encoded_in_bitflags"`
	Message              Message
}

func (*StoryViewPublicForward) CRC() uint32 {
	return 0x9083670b
}

func (*StoryViewPublicForward) FlagIndex() int {
	return 0
}

func (*StoryViewPublicForward) ImplementsStoryView() {}

// A certain peer has reposted the story.
type StoryViewPublicRepost struct {
	Blocked              bool `tl:"flag:0,encoded_in_bitflags"`
	BlockedMyStoriesFrom bool `tl:"flag:1,encoded_in_bitflags"`
	PeerID               Peer
	Story                StoryItem
}

func (*StoryViewPublicRepost) CRC() uint32 {
	return 0xbd74cf49
}

func (*StoryViewPublicRepost) FlagIndex() int {
	return 0
}

func (*StoryViewPublicRepost) ImplementsStoryView() {}

type Update interface {
	tl.Object
	ImplementsUpdate()
}

// The list of installed [attachment menu entries Â»](https://core.telegram.org/api/bots/attach) has changed, use [messages.getAttachMenuBots](https://core.telegram.org/method/messages.getAttachMenuBots) to fetch the updated list.
type UpdateAttachMenuBots struct{}

func (*UpdateAttachMenuBots) CRC() uint32 {
	return 0x17b7a20b
}

func (*UpdateAttachMenuBots) ImplementsUpdate() {}

// Media autosave settings have changed and must be refetched using [account.getAutoSaveSettings](https://core.telegram.org/method/account.getAutoSaveSettings).
type UpdateAutoSaveSettings struct{}

func (*UpdateAutoSaveSettings) CRC() uint32 {
	return 0xec05b097
}

func (*UpdateAutoSaveSettings) ImplementsUpdate() {}

type UpdateBotBusinessConnect struct {
	Connection *BotBusinessConnection
	Qts        int32
}

func (*UpdateBotBusinessConnect) CRC() uint32 {
	return 0x8ae5c97a
}

func (*UpdateBotBusinessConnect) ImplementsUpdate() {}

// A callback button was pressed, and the button data was sent to the bot that created the button
type UpdateBotCallbackQuery struct {
	QueryID       int64
	UserID        int64
	Peer          Peer
	MsgID         int32
	ChatInstance  int64
	Data          []byte `tl:"flag:0"`
	GameShortName string `tl:"flag:1"`
}

func (*UpdateBotCallbackQuery) CRC() uint32 {
	return 0xb9cfc48d
}

func (*UpdateBotCallbackQuery) FlagIndex() int {
	return 0
}

func (*UpdateBotCallbackQuery) ImplementsUpdate() {}

// A [channel boost](https://core.telegram.org/api/boost) has changed (bots only)
type UpdateBotChatBoost struct {
	Peer  Peer
	Boost *Boost
	Qts   int32
}

func (*UpdateBotChatBoost) CRC() uint32 {
	return 0x904dd49c
}

func (*UpdateBotChatBoost) ImplementsUpdate() {}

// Someone has requested to join a chat or channel (bots only, users will receive an [updatePendingJoinRequests](https://core.telegram.org/constructor/updatePendingJoinRequests), instead)
type UpdateBotChatInviteRequester struct {
	Peer   Peer
	Date   int32
	UserID int64
	About  string
	Invite ExportedChatInvite
	Qts    int32
}

func (*UpdateBotChatInviteRequester) CRC() uint32 {
	return 0x11dfa986
}

func (*UpdateBotChatInviteRequester) ImplementsUpdate() {}

// The [command set](https://core.telegram.org/api/bots/commands) of a certain bot in a certain chat has changed.
type UpdateBotCommands struct {
	Peer     Peer
	BotID    int64
	Commands []*BotCommand
}

func (*UpdateBotCommands) CRC() uint32 {
	return 0x4d712f2e
}

func (*UpdateBotCommands) ImplementsUpdate() {}

type UpdateBotDeleteBusinessMessage struct {
	ConnectionID string
	Peer         Peer
	Messages     []int32
	Qts          int32
}

func (*UpdateBotDeleteBusinessMessage) CRC() uint32 {
	return 0xa02a982e
}

func (*UpdateBotDeleteBusinessMessage) ImplementsUpdate() {}

type UpdateBotEditBusinessMessage struct {
	ConnectionID   string
	Message        Message
	ReplyToMessage Message `tl:"flag:0"`
	Qts            int32
}

func (*UpdateBotEditBusinessMessage) CRC() uint32 {
	return 0x7df587c
}

func (*UpdateBotEditBusinessMessage) FlagIndex() int {
	return 0
}

func (*UpdateBotEditBusinessMessage) ImplementsUpdate() {}

// An incoming inline query
type UpdateBotInlineQuery struct {
	QueryID  int64
	UserID   int64
	Query    string
	Geo      GeoPoint            `tl:"flag:0"`
	PeerType InlineQueryPeerType `tl:"flag:1"`
	Offset   string
}

func (*UpdateBotInlineQuery) CRC() uint32 {
	return 0x496f379c
}

func (*UpdateBotInlineQuery) FlagIndex() int {
	return 0
}

func (*UpdateBotInlineQuery) ImplementsUpdate() {}

// The result of an inline query that was chosen by a user and sent to their chat partner. Please see our documentation on the [feedback collecting](https://core.telegram.orghttps://core.telegram.org/bots/inline#collecting-feedback) for details on how to enable these updates for your bot.
type UpdateBotInlineSend struct {
	UserID int64
	Query  string
	Geo    GeoPoint `tl:"flag:0"`
	ID     string
	MsgID  InputBotInlineMessageID `tl:"flag:1"`
}

func (*UpdateBotInlineSend) CRC() uint32 {
	return 0x12f12a07
}

func (*UpdateBotInlineSend) FlagIndex() int {
	return 0
}

func (*UpdateBotInlineSend) ImplementsUpdate() {}

// The menu button behavior for the specified bot has changed
type UpdateBotMenuButton struct {
	BotID  int64
	Button BotMenuButton
}

func (*UpdateBotMenuButton) CRC() uint32 {
	return 0x14b85813
}

func (*UpdateBotMenuButton) ImplementsUpdate() {}

// Bots only: a user has changed their reactions on a message with public reactions.
type UpdateBotMessageReaction struct {
	Peer         Peer
	MsgID        int32
	Date         int32
	Actor        Peer
	OldReactions []Reaction
	NewReactions []Reaction
	Qts          int32
}

func (*UpdateBotMessageReaction) CRC() uint32 {
	return 0xac21d3ce
}

func (*UpdateBotMessageReaction) ImplementsUpdate() {}

// Bots only: the number of reactions on a message with anonymous reactions has changed.
type UpdateBotMessageReactions struct {
	Peer      Peer
	MsgID     int32
	Date      int32
	Reactions []*ReactionCount
	Qts       int32
}

func (*UpdateBotMessageReactions) CRC() uint32 {
	return 0x9cb7759
}

func (*UpdateBotMessageReactions) ImplementsUpdate() {}

type UpdateBotNewBusinessMessage struct {
	ConnectionID   string
	Message        Message
	ReplyToMessage Message `tl:"flag:0"`
	Qts            int32
}

func (*UpdateBotNewBusinessMessage) CRC() uint32 {
	return 0x9ddb347c
}

func (*UpdateBotNewBusinessMessage) FlagIndex() int {
	return 0
}

func (*UpdateBotNewBusinessMessage) ImplementsUpdate() {}

// This object contains information about an incoming pre-checkout query.
type UpdateBotPrecheckoutQuery struct {
	QueryID          int64
	UserID           int64
	Payload          []byte
	Info             *PaymentRequestedInfo `tl:"flag:0"`
	ShippingOptionID string                `tl:"flag:1"`
	Currency         string
	TotalAmount      int64
}

func (*UpdateBotPrecheckoutQuery) CRC() uint32 {
	return 0x8caa9a96
}

func (*UpdateBotPrecheckoutQuery) FlagIndex() int {
	return 0
}

func (*UpdateBotPrecheckoutQuery) ImplementsUpdate() {}

// This object contains information about an incoming shipping query.
type UpdateBotShippingQuery struct {
	QueryID         int64
	UserID          int64
	Payload         []byte
	ShippingAddress *PostAddress
}

func (*UpdateBotShippingQuery) CRC() uint32 {
	return 0xb5aefd7d
}

func (*UpdateBotShippingQuery) ImplementsUpdate() {}

// A bot was stopped or re-started.
type UpdateBotStopped struct {
	UserID  int64
	Date    int32
	Stopped bool
	Qts     int32
}

func (*UpdateBotStopped) CRC() uint32 {
	return 0xc4870a49
}

func (*UpdateBotStopped) ImplementsUpdate() {}

// A new incoming event; for bots only
type UpdateBotWebhookJson struct {
	Data *DataJson
}

func (*UpdateBotWebhookJson) CRC() uint32 {
	return 0x8317c0c3
}

func (*UpdateBotWebhookJson) ImplementsUpdate() {}

// A new incoming query; for bots only
type UpdateBotWebhookJsonQuery struct {
	QueryID int64
	Data    *DataJson
	Timeout int32
}

func (*UpdateBotWebhookJsonQuery) CRC() uint32 {
	return 0x9b9240a6
}

func (*UpdateBotWebhookJsonQuery) ImplementsUpdate() {}

type UpdateBroadcastRevenueTransactions struct {
	Peer     Peer
	Balances *BroadcastRevenueBalances
}

func (*UpdateBroadcastRevenueTransactions) CRC() uint32 {
	return 0xdfd961f5
}

func (*UpdateBroadcastRevenueTransactions) ImplementsUpdate() {}

type UpdateBusinessBotCallbackQuery struct {
	QueryID        int64
	UserID         int64
	ConnectionID   string
	Message        Message
	ReplyToMessage Message `tl:"flag:2"`
	ChatInstance   int64
	Data           []byte `tl:"flag:0"`
}

func (*UpdateBusinessBotCallbackQuery) CRC() uint32 {
	return 0x1ea2fda7
}

func (*UpdateBusinessBotCallbackQuery) FlagIndex() int {
	return 0
}

func (*UpdateBusinessBotCallbackQuery) ImplementsUpdate() {}

// A new channel or supergroup is available, or info about an existing channel has changed and must be refeteched.
type UpdateChannel struct {
	ChannelID int64
}

func (*UpdateChannel) CRC() uint32 {
	return 0x635b4c09
}

func (*UpdateChannel) ImplementsUpdate() {}

// The history of a [channel/supergroup](https://core.telegram.org/api/channel) was hidden.
type UpdateChannelAvailableMessages struct {
	ChannelID      int64
	AvailableMinID int32
}

func (*UpdateChannelAvailableMessages) CRC() uint32 {
	return 0xb23fc698
}

func (*UpdateChannelAvailableMessages) ImplementsUpdate() {}

// The forward counter of a message in a channel has changed
type UpdateChannelMessageForwards struct {
	ChannelID int64
	ID        int32
	Forwards  int32
}

func (*UpdateChannelMessageForwards) CRC() uint32 {
	return 0xd29a27f4
}

func (*UpdateChannelMessageForwards) ImplementsUpdate() {}

// The view counter of a message in a channel has changed
type UpdateChannelMessageViews struct {
	ChannelID int64
	ID        int32
	Views     int32
}

func (*UpdateChannelMessageViews) CRC() uint32 {
	return 0xf226ac08
}

func (*UpdateChannelMessageViews) ImplementsUpdate() {}

// A participant has left, joined, was banned or admined in a [channel or supergroup](https://core.telegram.org/api/channel).
type UpdateChannelParticipant struct {
	ViaChatlist     bool `tl:"flag:3,encoded_in_bitflags"`
	ChannelID       int64
	Date            int32
	ActorID         int64
	UserID          int64
	PrevParticipant ChannelParticipant `tl:"flag:0"`
	NewParticipant  ChannelParticipant `tl:"flag:1"`
	Invite          ExportedChatInvite `tl:"flag:2"`
	Qts             int32
}

func (*UpdateChannelParticipant) CRC() uint32 {
	return 0x985d3abb
}

func (*UpdateChannelParticipant) FlagIndex() int {
	return 0
}

func (*UpdateChannelParticipant) ImplementsUpdate() {}

// A [forum topic Â»](https://core.telegram.org/api/forum#forum-topics) was pinned or unpinned.
type UpdateChannelPinnedTopic struct {
	Pinned    bool `tl:"flag:0,encoded_in_bitflags"`
	ChannelID int64
	TopicID   int32
}

func (*UpdateChannelPinnedTopic) CRC() uint32 {
	return 0x192efbe3
}

func (*UpdateChannelPinnedTopic) FlagIndex() int {
	return 0
}

func (*UpdateChannelPinnedTopic) ImplementsUpdate() {}

// The [pinned topics](https://core.telegram.org/api/forum#forum-topics) of a forum have changed.
type UpdateChannelPinnedTopics struct {
	ChannelID int64
	Order     []int32 `tl:"flag:0"`
}

func (*UpdateChannelPinnedTopics) CRC() uint32 {
	return 0xfe198602
}

func (*UpdateChannelPinnedTopics) FlagIndex() int {
	return 0
}

func (*UpdateChannelPinnedTopics) ImplementsUpdate() {}

// The specified [channel/supergroup](https://core.telegram.org/api/channel) messages were read
type UpdateChannelReadMessagesContents struct {
	ChannelID int64
	TopMsgID  int32 `tl:"flag:0"`
	Messages  []int32
}

func (*UpdateChannelReadMessagesContents) CRC() uint32 {
	return 0xea29055d
}

func (*UpdateChannelReadMessagesContents) FlagIndex() int {
	return 0
}

func (*UpdateChannelReadMessagesContents) ImplementsUpdate() {}

/*
There are new updates in the specified channel, the client must fetch them.<br>
If the difference is too long or if the channel isn't currently in the states, start fetching from the specified pts.
*/
type UpdateChannelTooLong struct {
	ChannelID int64
	Pts       int32 `tl:"flag:0"`
}

func (*UpdateChannelTooLong) CRC() uint32 {
	return 0x108d941f
}

func (*UpdateChannelTooLong) FlagIndex() int {
	return 0
}

func (*UpdateChannelTooLong) ImplementsUpdate() {}

// A user is typing in a [supergroup, channel](https://core.telegram.org/api/channel) or [message thread](https://core.telegram.org/api/threads)
type UpdateChannelUserTyping struct {
	ChannelID int64
	TopMsgID  int32 `tl:"flag:0"`
	FromID    Peer
	Action    SendMessageAction
}

func (*UpdateChannelUserTyping) CRC() uint32 {
	return 0x8c88c923
}

func (*UpdateChannelUserTyping) FlagIndex() int {
	return 0
}

func (*UpdateChannelUserTyping) ImplementsUpdate() {}

/*
Users may also choose to display messages from all topics as if they were sent to a normal group, using a "View as messages" setting in the local client.<br>
This setting only affects the current account, and is synced to other logged in sessions using the [channels.toggleViewForumAsMessages](https://core.telegram.org/method/channels.toggleViewForumAsMessages) method; invoking this method will update the value of the `view_forum_as_messages` flag of [channelFull](https://core.telegram.org/constructor/channelFull) or [dialog](https://core.telegram.org/constructor/dialog) and emit an [updateChannelViewForumAsMessages](https://core.telegram.org/constructor/updateChannelViewForumAsMessages).
*/
type UpdateChannelViewForumAsMessages struct {
	ChannelID int64
	Enabled   bool
}

func (*UpdateChannelViewForumAsMessages) CRC() uint32 {
	return 0x7b68920
}

func (*UpdateChannelViewForumAsMessages) ImplementsUpdate() {}

// A webpage preview of a link in a [channel/supergroup](https://core.telegram.org/api/channel) message was generated
type UpdateChannelWebPage struct {
	ChannelID int64
	Webpage   WebPage
	Pts       int32
	PtsCount  int32
}

func (*UpdateChannelWebPage) CRC() uint32 {
	return 0x2f2ba99f
}

func (*UpdateChannelWebPage) ImplementsUpdate() {}

// A new chat is available
type UpdateChat struct {
	ChatID int64
}

func (*UpdateChat) CRC() uint32 {
	return 0xf89a6a4e
}

func (*UpdateChat) ImplementsUpdate() {}

// Default banned rights in a [normal chat](https://core.telegram.org/api/channel) were updated
type UpdateChatDefaultBannedRights struct {
	Peer                Peer
	DefaultBannedRights *ChatBannedRights
	Version             int32
}

func (*UpdateChatDefaultBannedRights) CRC() uint32 {
	return 0x54c01850
}

func (*UpdateChatDefaultBannedRights) ImplementsUpdate() {}

// A user has joined or left a specific chat
type UpdateChatParticipant struct {
	ChatID          int64
	Date            int32
	ActorID         int64
	UserID          int64
	PrevParticipant ChatParticipant    `tl:"flag:0"`
	NewParticipant  ChatParticipant    `tl:"flag:1"`
	Invite          ExportedChatInvite `tl:"flag:2"`
	Qts             int32
}

func (*UpdateChatParticipant) CRC() uint32 {
	return 0xd087663a
}

func (*UpdateChatParticipant) FlagIndex() int {
	return 0
}

func (*UpdateChatParticipant) ImplementsUpdate() {}

// New group member.
type UpdateChatParticipantAdd struct {
	ChatID    int64
	UserID    int64
	InviterID int64
	Date      int32
	Version   int32
}

func (*UpdateChatParticipantAdd) CRC() uint32 {
	return 0x3dda5451
}

func (*UpdateChatParticipantAdd) ImplementsUpdate() {}

// Admin permissions of a user in a [basic group](https://core.telegram.org/api/channel#basic-groups) were changed
type UpdateChatParticipantAdmin struct {
	ChatID  int64
	UserID  int64
	IsAdmin bool
	Version int32
}

func (*UpdateChatParticipantAdmin) CRC() uint32 {
	return 0xd7ca61a2
}

func (*UpdateChatParticipantAdmin) ImplementsUpdate() {}

// A member has left the group.
type UpdateChatParticipantDelete struct {
	ChatID  int64
	UserID  int64
	Version int32
}

func (*UpdateChatParticipantDelete) CRC() uint32 {
	return 0xe32f3d77
}

func (*UpdateChatParticipantDelete) ImplementsUpdate() {}

// Composition of chat participants changed.
type UpdateChatParticipants struct {
	Participants ChatParticipants
}

func (*UpdateChatParticipants) CRC() uint32 {
	return 0x7761198
}

func (*UpdateChatParticipants) ImplementsUpdate() {}

// The user is preparing a message in a group; typing, recording, uploading, etc. This update is valid for 6 seconds. If no further updates of this kind are received after 6 seconds, it should be considered that the user stopped doing whatever they were doing
type UpdateChatUserTyping struct {
	ChatID int64
	FromID Peer
	Action SendMessageAction
}

func (*UpdateChatUserTyping) CRC() uint32 {
	return 0x83487af0
}

func (*UpdateChatUserTyping) ImplementsUpdate() {}

// The server-side configuration has changed; the client should re-fetch the config using [help.getConfig](https://core.telegram.org/method/help.getConfig)
type UpdateConfig struct{}

func (*UpdateConfig) CRC() uint32 {
	return 0xa229dd06
}

func (*UpdateConfig) ImplementsUpdate() {}

// All contacts were deleted
type UpdateContactsReset struct{}

func (*UpdateContactsReset) CRC() uint32 {
	return 0x7084a7be
}

func (*UpdateContactsReset) ImplementsUpdate() {}

// Changes in the data center configuration options.
type UpdateDcOptions struct {
	DcOptions []*DcOption
}

func (*UpdateDcOptions) CRC() uint32 {
	return 0x8e5e9873
}

func (*UpdateDcOptions) ImplementsUpdate() {}

// Some messages in a [supergroup/channel](https://core.telegram.org/api/channel) were deleted
type UpdateDeleteChannelMessages struct {
	ChannelID int64
	Messages  []int32
	Pts       int32
	PtsCount  int32
}

func (*UpdateDeleteChannelMessages) CRC() uint32 {
	return 0xc32d5b12
}

func (*UpdateDeleteChannelMessages) ImplementsUpdate() {}

// Messages were deleted.
type UpdateDeleteMessages struct {
	Messages []int32
	Pts      int32
	PtsCount int32
}

func (*UpdateDeleteMessages) CRC() uint32 {
	return 0xa20db0e5
}

func (*UpdateDeleteMessages) ImplementsUpdate() {}

type UpdateDeleteQuickReply struct {
	ShortcutID int32
}

func (*UpdateDeleteQuickReply) CRC() uint32 {
	return 0x53e6f1ec
}

func (*UpdateDeleteQuickReply) ImplementsUpdate() {}

type UpdateDeleteQuickReplyMessages struct {
	ShortcutID int32
	Messages   []int32
}

func (*UpdateDeleteQuickReplyMessages) CRC() uint32 {
	return 0x566fe7cd
}

func (*UpdateDeleteQuickReplyMessages) ImplementsUpdate() {}

// Some [scheduled messages](https://core.telegram.org/api/scheduled-messages) were deleted from the schedule queue of a chat
type UpdateDeleteScheduledMessages struct {
	Peer     Peer
	Messages []int32
}

func (*UpdateDeleteScheduledMessages) CRC() uint32 {
	return 0x90866cee
}

func (*UpdateDeleteScheduledMessages) ImplementsUpdate() {}

// A new [folder](https://core.telegram.org/api/folders) was added
type UpdateDialogFilter struct {
	ID     int32
	Filter DialogFilter `tl:"flag:0"`
}

func (*UpdateDialogFilter) CRC() uint32 {
	return 0x26ffde7d
}

func (*UpdateDialogFilter) FlagIndex() int {
	return 0
}

func (*UpdateDialogFilter) ImplementsUpdate() {}

// New [folder](https://core.telegram.org/api/folders) order
type UpdateDialogFilterOrder struct {
	Order []int32
}

func (*UpdateDialogFilterOrder) CRC() uint32 {
	return 0xa5d72105
}

func (*UpdateDialogFilterOrder) ImplementsUpdate() {}

// Clients should update [folder](https://core.telegram.org/api/folders) info
type UpdateDialogFilters struct{}

func (*UpdateDialogFilters) CRC() uint32 {
	return 0x3504914f
}

func (*UpdateDialogFilters) ImplementsUpdate() {}

// A dialog was pinned/unpinned
type UpdateDialogPinned struct {
	Pinned   bool  `tl:"flag:0,encoded_in_bitflags"`
	FolderID int32 `tl:"flag:1"`
	Peer     DialogPeer
}

func (*UpdateDialogPinned) CRC() uint32 {
	return 0x6e6fe51c
}

func (*UpdateDialogPinned) FlagIndex() int {
	return 0
}

func (*UpdateDialogPinned) ImplementsUpdate() {}

// The manual unread mark of a chat was changed
type UpdateDialogUnreadMark struct {
	Unread bool `tl:"flag:0,encoded_in_bitflags"`
	Peer   DialogPeer
}

func (*UpdateDialogUnreadMark) CRC() uint32 {
	return 0xe16459c3
}

func (*UpdateDialogUnreadMark) FlagIndex() int {
	return 0
}

func (*UpdateDialogUnreadMark) ImplementsUpdate() {}

// Notifies a change of a message [draft](https://core.telegram.org/api/drafts).
type UpdateDraftMessage struct {
	Peer     Peer
	TopMsgID int32 `tl:"flag:0"`
	Draft    DraftMessage
}

func (*UpdateDraftMessage) CRC() uint32 {
	return 0x1b49ec6d
}

func (*UpdateDraftMessage) FlagIndex() int {
	return 0
}

func (*UpdateDraftMessage) ImplementsUpdate() {}

// A message was edited in a [channel/supergroup](https://core.telegram.org/api/channel)
type UpdateEditChannelMessage struct {
	Message  Message
	Pts      int32
	PtsCount int32
}

func (*UpdateEditChannelMessage) CRC() uint32 {
	return 0x1b3f4df7
}

func (*UpdateEditChannelMessage) ImplementsUpdate() {}

// A message was edited
type UpdateEditMessage struct {
	Message  Message
	Pts      int32
	PtsCount int32
}

func (*UpdateEditMessage) CRC() uint32 {
	return 0xe40370a3
}

func (*UpdateEditMessage) ImplementsUpdate() {}

// Interlocutor is typing a message in an encrypted chat. Update period is 6 second. If upon this time there is no repeated update, it shall be considered that the interlocutor stopped typing.
type UpdateEncryptedChatTyping struct {
	ChatID int32
}

func (*UpdateEncryptedChatTyping) CRC() uint32 {
	return 0x1710f156
}

func (*UpdateEncryptedChatTyping) ImplementsUpdate() {}

// Communication history in an encrypted chat was marked as read.
type UpdateEncryptedMessagesRead struct {
	ChatID  int32
	MaxDate int32
	Date    int32
}

func (*UpdateEncryptedMessagesRead) CRC() uint32 {
	return 0x38fe25b7
}

func (*UpdateEncryptedMessagesRead) ImplementsUpdate() {}

// Change of state in an encrypted chat.
type UpdateEncryption struct {
	Chat EncryptedChat
	Date int32
}

func (*UpdateEncryption) CRC() uint32 {
	return 0xb4a2e88d
}

func (*UpdateEncryption) ImplementsUpdate() {}

// The list of favorited stickers was changed, the client should call [messages.getFavedStickers](https://core.telegram.org/method/messages.getFavedStickers) to refetch the new list
type UpdateFavedStickers struct{}

func (*UpdateFavedStickers) CRC() uint32 {
	return 0xe511996d
}

func (*UpdateFavedStickers) ImplementsUpdate() {}

// The peer list of a [peer folder](https://core.telegram.org/api/folders#peer-folders) was updated
type UpdateFolderPeers struct {
	FolderPeers []*FolderPeer
	Pts         int32
	PtsCount    int32
}

func (*UpdateFolderPeers) CRC() uint32 {
	return 0x19360dc0
}

func (*UpdateFolderPeers) ImplementsUpdate() {}

// Live geoposition message was viewed
type UpdateGeoLiveViewed struct {
	Peer  Peer
	MsgID int32
}

func (*UpdateGeoLiveViewed) CRC() uint32 {
	return 0x871fb939
}

func (*UpdateGeoLiveViewed) ImplementsUpdate() {}

// A new groupcall was started
type UpdateGroupCall struct {
	ChatID int64
	Call   GroupCall
}

func (*UpdateGroupCall) CRC() uint32 {
	return 0x14b24500
}

func (*UpdateGroupCall) ImplementsUpdate() {}

// New WebRTC parameters
type UpdateGroupCallConnection struct {
	Presentation bool `tl:"flag:0,encoded_in_bitflags"`
	Params       *DataJson
}

func (*UpdateGroupCallConnection) CRC() uint32 {
	return 0xb783982
}

func (*UpdateGroupCallConnection) FlagIndex() int {
	return 0
}

func (*UpdateGroupCallConnection) ImplementsUpdate() {}

// The participant list of a certain group call has changed
type UpdateGroupCallParticipants struct {
	Call         *InputGroupCall
	Participants []*GroupCallParticipant
	Version      int32
}

func (*UpdateGroupCallParticipants) CRC() uint32 {
	return 0xf2ebdb4e
}

func (*UpdateGroupCallParticipants) ImplementsUpdate() {}

// This notification is received by bots when a button is pressed
type UpdateInlineBotCallbackQuery struct {
	QueryID       int64
	UserID        int64
	MsgID         InputBotInlineMessageID
	ChatInstance  int64
	Data          []byte `tl:"flag:0"`
	GameShortName string `tl:"flag:1"`
}

func (*UpdateInlineBotCallbackQuery) CRC() uint32 {
	return 0x691e9052
}

func (*UpdateInlineBotCallbackQuery) FlagIndex() int {
	return 0
}

func (*UpdateInlineBotCallbackQuery) ImplementsUpdate() {}

// Language pack updated
type UpdateLangPack struct {
	Difference *LangPackDifference
}

func (*UpdateLangPack) CRC() uint32 {
	return 0x56022f4d
}

func (*UpdateLangPack) ImplementsUpdate() {}

// A language pack has changed, the client should manually fetch the changed strings using [langpack.getDifference](https://core.telegram.org/method/langpack.getDifference)
type UpdateLangPackTooLong struct {
	LangCode string
}

func (*UpdateLangPackTooLong) CRC() uint32 {
	return 0x46560264
}

func (*UpdateLangPackTooLong) ImplementsUpdate() {}

// A login token (for login via QR code) was accepted.
type UpdateLoginToken struct{}

func (*UpdateLoginToken) CRC() uint32 {
	return 0x564fe691
}

func (*UpdateLoginToken) ImplementsUpdate() {}

// Extended media update
type UpdateMessageExtendedMedia struct {
	Peer          Peer
	MsgID         int32
	ExtendedMedia []MessageExtendedMedia
}

func (*UpdateMessageExtendedMedia) CRC() uint32 {
	return 0xd5a41724
}

func (*UpdateMessageExtendedMedia) ImplementsUpdate() {}

// Sent message with <strong>random_id</strong> client identifier was assigned an identifier.
type UpdateMessageID struct {
	ID       int32
	RandomID int64
}

func (*UpdateMessageID) CRC() uint32 {
	return 0x4e90bfd6
}

func (*UpdateMessageID) ImplementsUpdate() {}

// The results of a poll have changed
type UpdateMessagePoll struct {
	PollID  int64
	Poll    *Poll `tl:"flag:0"`
	Results *PollResults
}

func (*UpdateMessagePoll) CRC() uint32 {
	return 0xaca1657b
}

func (*UpdateMessagePoll) FlagIndex() int {
	return 0
}

func (*UpdateMessagePoll) ImplementsUpdate() {}

// A specific peer has voted in a poll
type UpdateMessagePollVote struct {
	PollID  int64
	Peer    Peer
	Options [][]byte
	Qts     int32
}

func (*UpdateMessagePollVote) CRC() uint32 {
	return 0x24f40e77
}

func (*UpdateMessagePollVote) ImplementsUpdate() {}

// New [message reactions Â»](https://core.telegram.org/api/reactions) are available
type UpdateMessageReactions struct {
	Peer      Peer
	MsgID     int32
	TopMsgID  int32 `tl:"flag:0"`
	Reactions *MessageReactions
}

func (*UpdateMessageReactions) CRC() uint32 {
	return 0x5e1b3cb8
}

func (*UpdateMessageReactions) FlagIndex() int {
	return 0
}

func (*UpdateMessageReactions) ImplementsUpdate() {}

// A stickerset was just moved to top, [see here for more info Â»](https://core.telegram.org/api/stickers#recent-stickersets)
type UpdateMoveStickerSetToTop struct {
	Masks      bool `tl:"flag:0,encoded_in_bitflags"`
	Emojis     bool `tl:"flag:1,encoded_in_bitflags"`
	Stickerset int64
}

func (*UpdateMoveStickerSetToTop) CRC() uint32 {
	return 0x86fccf85
}

func (*UpdateMoveStickerSetToTop) FlagIndex() int {
	return 0
}

func (*UpdateMoveStickerSetToTop) ImplementsUpdate() {}

// A new session logged into the current user's account through an unknown device.
type UpdateNewAuthorization struct {
	Unconfirmed bool `tl:"flag:0,encoded_in_bitflags"`
	Hash        int64
	Date        int32  `tl:"flag:0"`
	Device      string `tl:"flag:0"`
	Location    string `tl:"flag:0"`
}

func (*UpdateNewAuthorization) CRC() uint32 {
	return 0x8951abef
}

func (*UpdateNewAuthorization) FlagIndex() int {
	return 0
}

func (*UpdateNewAuthorization) ImplementsUpdate() {}

// A new message was sent in a [channel/supergroup](https://core.telegram.org/api/channel)
type UpdateNewChannelMessage struct {
	Message  Message
	Pts      int32
	PtsCount int32
}

func (*UpdateNewChannelMessage) CRC() uint32 {
	return 0x62ba04d9
}

func (*UpdateNewChannelMessage) ImplementsUpdate() {}

// New encrypted message.
type UpdateNewEncryptedMessage struct {
	Message EncryptedMessage
	Qts     int32
}

func (*UpdateNewEncryptedMessage) CRC() uint32 {
	return 0x12bcbd9a
}

func (*UpdateNewEncryptedMessage) ImplementsUpdate() {}

// New message in a private chat or in a [basic group](https://core.telegram.orghttps://core.telegram.org/api/channel#basic-groups).
type UpdateNewMessage struct {
	Message  Message
	Pts      int32
	PtsCount int32
}

func (*UpdateNewMessage) CRC() uint32 {
	return 0x1f2b0afd
}

func (*UpdateNewMessage) ImplementsUpdate() {}

type UpdateNewQuickReply struct {
	QuickReply *QuickReply
}

func (*UpdateNewQuickReply) CRC() uint32 {
	return 0xf53da717
}

func (*UpdateNewQuickReply) ImplementsUpdate() {}

// A message was added to the [schedule queue of a chat](https://core.telegram.org/api/scheduled-messages)
type UpdateNewScheduledMessage struct {
	Message Message
}

func (*UpdateNewScheduledMessage) CRC() uint32 {
	return 0x39a51dfb
}

func (*UpdateNewScheduledMessage) ImplementsUpdate() {}

// A new stickerset was installed
type UpdateNewStickerSet struct {
	Stickerset MessagesStickerSet
}

func (*UpdateNewStickerSet) CRC() uint32 {
	return 0x688a30aa
}

func (*UpdateNewStickerSet) ImplementsUpdate() {}

type UpdateNewStoryReaction struct {
	StoryID  int32
	Peer     Peer
	Reaction Reaction
}

func (*UpdateNewStoryReaction) CRC() uint32 {
	return 0x1824e40b
}

func (*UpdateNewStoryReaction) ImplementsUpdate() {}

// Changes in notification settings.
type UpdateNotifySettings struct {
	Peer           NotifyPeer
	NotifySettings *PeerNotifySettings
}

func (*UpdateNotifySettings) CRC() uint32 {
	return 0xbec268ef
}

func (*UpdateNotifySettings) ImplementsUpdate() {}

// We blocked a peer, see [here Â»](https://core.telegram.org/api/block) for more info on blocklists.
type UpdatePeerBlocked struct {
	Blocked              bool `tl:"flag:0,encoded_in_bitflags"`
	BlockedMyStoriesFrom bool `tl:"flag:1,encoded_in_bitflags"`
	PeerID               Peer
}

func (*UpdatePeerBlocked) CRC() uint32 {
	return 0xebe07752
}

func (*UpdatePeerBlocked) FlagIndex() int {
	return 0
}

func (*UpdatePeerBlocked) ImplementsUpdate() {}

// The Time-To-Live for messages sent by the current user in a specific chat has changed
type UpdatePeerHistoryTtl struct {
	Peer      Peer
	TtlPeriod int32 `tl:"flag:0"`
}

func (*UpdatePeerHistoryTtl) CRC() uint32 {
	return 0xbb9bb9a5
}

func (*UpdatePeerHistoryTtl) FlagIndex() int {
	return 0
}

func (*UpdatePeerHistoryTtl) ImplementsUpdate() {}

// List of peers near you was updated
type UpdatePeerLocated struct {
	Peers []PeerLocated
}

func (*UpdatePeerLocated) CRC() uint32 {
	return 0xb4afcfb0
}

func (*UpdatePeerLocated) ImplementsUpdate() {}

// Settings of a certain peer have changed
type UpdatePeerSettings struct {
	Peer     Peer
	Settings *PeerSettings
}

func (*UpdatePeerSettings) CRC() uint32 {
	return 0x6a7e7366
}

func (*UpdatePeerSettings) ImplementsUpdate() {}

// The [wallpaper Â»](https://core.telegram.org/api/wallpapers) of a given peer has changed.
type UpdatePeerWallpaper struct {
	WallpaperOverridden bool `tl:"flag:1,encoded_in_bitflags"`
	Peer                Peer
	Wallpaper           WallPaper `tl:"flag:0"`
}

func (*UpdatePeerWallpaper) CRC() uint32 {
	return 0xae3f101d
}

func (*UpdatePeerWallpaper) FlagIndex() int {
	return 0
}

func (*UpdatePeerWallpaper) ImplementsUpdate() {}

// Someone has requested to join a chat or channel
type UpdatePendingJoinRequests struct {
	Peer             Peer
	RequestsPending  int32
	RecentRequesters []int64
}

func (*UpdatePendingJoinRequests) CRC() uint32 {
	return 0x7063c3db
}

func (*UpdatePendingJoinRequests) ImplementsUpdate() {}

// An incoming phone call
type UpdatePhoneCall struct {
	PhoneCall PhoneCall
}

func (*UpdatePhoneCall) CRC() uint32 {
	return 0xab0f6b1e
}

func (*UpdatePhoneCall) ImplementsUpdate() {}

// Incoming phone call signaling payload
type UpdatePhoneCallSignalingData struct {
	PhoneCallID int64
	Data        []byte
}

func (*UpdatePhoneCallSignalingData) CRC() uint32 {
	return 0x2661bf09
}

func (*UpdatePhoneCallSignalingData) ImplementsUpdate() {}

// Messages were pinned/unpinned in a [channel/supergroup](https://core.telegram.org/api/channel)
type UpdatePinnedChannelMessages struct {
	Pinned    bool `tl:"flag:0,encoded_in_bitflags"`
	ChannelID int64
	Messages  []int32
	Pts       int32
	PtsCount  int32
}

func (*UpdatePinnedChannelMessages) CRC() uint32 {
	return 0x5bb98608
}

func (*UpdatePinnedChannelMessages) FlagIndex() int {
	return 0
}

func (*UpdatePinnedChannelMessages) ImplementsUpdate() {}

// Pinned dialogs were updated
type UpdatePinnedDialogs struct {
	FolderID int32        `tl:"flag:1"`
	Order    []DialogPeer `tl:"flag:0"`
}

func (*UpdatePinnedDialogs) CRC() uint32 {
	return 0xfa0f3ca2
}

func (*UpdatePinnedDialogs) FlagIndex() int {
	return 0
}

func (*UpdatePinnedDialogs) ImplementsUpdate() {}

// Some messages were pinned in a chat
type UpdatePinnedMessages struct {
	Pinned   bool `tl:"flag:0,encoded_in_bitflags"`
	Peer     Peer
	Messages []int32
	Pts      int32
	PtsCount int32
}

func (*UpdatePinnedMessages) CRC() uint32 {
	return 0xed85eab5
}

func (*UpdatePinnedMessages) FlagIndex() int {
	return 0
}

func (*UpdatePinnedMessages) ImplementsUpdate() {}

// [Pinned saved dialogs Â»](https://core.telegram.org/api/saved-messages) were updated
type UpdatePinnedSavedDialogs struct {
	Order []DialogPeer `tl:"flag:0"`
}

func (*UpdatePinnedSavedDialogs) CRC() uint32 {
	return 0x686c85a6
}

func (*UpdatePinnedSavedDialogs) FlagIndex() int {
	return 0
}

func (*UpdatePinnedSavedDialogs) ImplementsUpdate() {}

// Privacy rules were changed
type UpdatePrivacy struct {
	Key   PrivacyKey
	Rules []PrivacyRule
}

func (*UpdatePrivacy) CRC() uint32 {
	return 0xee3b272a
}

func (*UpdatePrivacy) ImplementsUpdate() {}

// [Common message box sequence PTS](https://core.telegram.org/api/updates) has changed, [state has to be refetched using updates.getState](https://core.telegram.org/api/updates#fetching-state)
type UpdatePtsChanged struct{}

func (*UpdatePtsChanged) CRC() uint32 {
	return 0x3354678f
}

func (*UpdatePtsChanged) ImplementsUpdate() {}

type UpdateQuickReplies struct {
	QuickReplies []*QuickReply
}

func (*UpdateQuickReplies) CRC() uint32 {
	return 0xf9470ab2
}

func (*UpdateQuickReplies) ImplementsUpdate() {}

type UpdateQuickReplyMessage struct {
	Message Message
}

func (*UpdateQuickReplyMessage) CRC() uint32 {
	return 0x3e050d0f
}

func (*UpdateQuickReplyMessage) ImplementsUpdate() {}

// Incoming comments in a [discussion thread](https://core.telegram.org/api/threads) were marked as read
type UpdateReadChannelDiscussionInbox struct {
	ChannelID     int64
	TopMsgID      int32
	ReadMaxID     int32
	BroadcastID   int64 `tl:"flag:0"`
	BroadcastPost int32 `tl:"flag:0"`
}

func (*UpdateReadChannelDiscussionInbox) CRC() uint32 {
	return 0xd6b19546
}

func (*UpdateReadChannelDiscussionInbox) FlagIndex() int {
	return 0
}

func (*UpdateReadChannelDiscussionInbox) ImplementsUpdate() {}

// Outgoing comments in a [discussion thread](https://core.telegram.org/api/threads) were marked as read
type UpdateReadChannelDiscussionOutbox struct {
	ChannelID int64
	TopMsgID  int32
	ReadMaxID int32
}

func (*UpdateReadChannelDiscussionOutbox) CRC() uint32 {
	return 0x695c9e7c
}

func (*UpdateReadChannelDiscussionOutbox) ImplementsUpdate() {}

// Incoming messages in a [channel/supergroup](https://core.telegram.org/api/channel) were read
type UpdateReadChannelInbox struct {
	FolderID         int32 `tl:"flag:0"`
	ChannelID        int64
	MaxID            int32
	StillUnreadCount int32
	Pts              int32
}

func (*UpdateReadChannelInbox) CRC() uint32 {
	return 0x922e6e10
}

func (*UpdateReadChannelInbox) FlagIndex() int {
	return 0
}

func (*UpdateReadChannelInbox) ImplementsUpdate() {}

// Outgoing messages in a [channel/supergroup](https://core.telegram.org/api/channel) were read
type UpdateReadChannelOutbox struct {
	ChannelID int64
	MaxID     int32
}

func (*UpdateReadChannelOutbox) CRC() uint32 {
	return 0xb75f99a9
}

func (*UpdateReadChannelOutbox) ImplementsUpdate() {}

// Some featured [custom emoji stickers](https://core.telegram.org/api/custom-emoji) were marked as read
type UpdateReadFeaturedEmojiStickers struct{}

func (*UpdateReadFeaturedEmojiStickers) CRC() uint32 {
	return 0xfb4c496c
}

func (*UpdateReadFeaturedEmojiStickers) ImplementsUpdate() {}

// Some featured stickers were marked as read
type UpdateReadFeaturedStickers struct{}

func (*UpdateReadFeaturedStickers) CRC() uint32 {
	return 0x571d2742
}

func (*UpdateReadFeaturedStickers) ImplementsUpdate() {}

// Incoming messages were read
type UpdateReadHistoryInbox struct {
	FolderID         int32 `tl:"flag:0"`
	Peer             Peer
	MaxID            int32
	StillUnreadCount int32
	Pts              int32
	PtsCount         int32
}

func (*UpdateReadHistoryInbox) CRC() uint32 {
	return 0x9c974fdf
}

func (*UpdateReadHistoryInbox) FlagIndex() int {
	return 0
}

func (*UpdateReadHistoryInbox) ImplementsUpdate() {}

// Outgoing messages were read
type UpdateReadHistoryOutbox struct {
	Peer     Peer
	MaxID    int32
	Pts      int32
	PtsCount int32
}

func (*UpdateReadHistoryOutbox) CRC() uint32 {
	return 0x2f2f21bf
}

func (*UpdateReadHistoryOutbox) ImplementsUpdate() {}

// Contents of messages in the common [message box](https://core.telegram.org/api/updates) were read
type UpdateReadMessagesContents struct {
	Messages []int32
	Pts      int32
	PtsCount int32
	Date     int32 `tl:"flag:0"`
}

func (*UpdateReadMessagesContents) CRC() uint32 {
	return 0xf8227181
}

func (*UpdateReadMessagesContents) FlagIndex() int {
	return 0
}

func (*UpdateReadMessagesContents) ImplementsUpdate() {}

// Stories of a specific peer were marked as read.
type UpdateReadStories struct {
	Peer  Peer
	MaxID int32
}

func (*UpdateReadStories) CRC() uint32 {
	return 0xf74e932b
}

func (*UpdateReadStories) ImplementsUpdate() {}

// The list of recent [emoji statuses](https://core.telegram.org/api/emoji-status) has changed
type UpdateRecentEmojiStatuses struct{}

func (*UpdateRecentEmojiStatuses) CRC() uint32 {
	return 0x30f443db
}

func (*UpdateRecentEmojiStatuses) ImplementsUpdate() {}

// The list of recent [message reactions](https://core.telegram.org/api/reactions) has changed
type UpdateRecentReactions struct{}

func (*UpdateRecentReactions) CRC() uint32 {
	return 0x6f7863f4
}

func (*UpdateRecentReactions) ImplementsUpdate() {}

// The recent sticker list was updated
type UpdateRecentStickers struct{}

func (*UpdateRecentStickers) CRC() uint32 {
	return 0x9a422c20
}

func (*UpdateRecentStickers) ImplementsUpdate() {}

// A [saved message dialog](https://core.telegram.org/api/saved-messages) was pinned/unpinned
type UpdateSavedDialogPinned struct {
	Pinned bool `tl:"flag:0,encoded_in_bitflags"`
	Peer   DialogPeer
}

func (*UpdateSavedDialogPinned) CRC() uint32 {
	return 0xaeaf9e74
}

func (*UpdateSavedDialogPinned) FlagIndex() int {
	return 0
}

func (*UpdateSavedDialogPinned) ImplementsUpdate() {}

// The saved gif list has changed, the client should refetch it using [messages.getSavedGifs](https://core.telegram.orghttps://core.telegram.org/method/messages.getSavedGifs)
type UpdateSavedGifs struct{}

func (*UpdateSavedGifs) CRC() uint32 {
	return 0x9375341e
}

func (*UpdateSavedGifs) ImplementsUpdate() {}

type UpdateSavedReactionTags struct{}

func (*UpdateSavedReactionTags) CRC() uint32 {
	return 0x39c67432
}

func (*UpdateSavedReactionTags) ImplementsUpdate() {}

// The list of saved notification sounds has changed, use [account.getSavedRingtones](https://core.telegram.org/method/account.getSavedRingtones) to fetch the new list.
type UpdateSavedRingtones struct{}

func (*UpdateSavedRingtones) CRC() uint32 {
	return 0x74d8be99
}

func (*UpdateSavedRingtones) ImplementsUpdate() {}

// Indicates we [reacted to a story Â»](https://core.telegram.org/api/stories#reactions).
type UpdateSentStoryReaction struct {
	Peer     Peer
	StoryID  int32
	Reaction Reaction
}

func (*UpdateSentStoryReaction) CRC() uint32 {
	return 0x7d627683
}

func (*UpdateSentStoryReaction) ImplementsUpdate() {}

// A service message for the user.
type UpdateServiceNotification struct {
	Popup       bool  `tl:"flag:0,encoded_in_bitflags"`
	InvertMedia bool  `tl:"flag:2,encoded_in_bitflags"`
	InboxDate   int32 `tl:"flag:1"`
	Type        string
	Message     string
	Media       MessageMedia
	Entities    []MessageEntity
}

func (*UpdateServiceNotification) CRC() uint32 {
	return 0xebe46819
}

func (*UpdateServiceNotification) FlagIndex() int {
	return 0
}

func (*UpdateServiceNotification) ImplementsUpdate() {}

type UpdateSmsJob struct {
	JobID string
}

func (*UpdateSmsJob) CRC() uint32 {
	return 0xf16269d4
}

func (*UpdateSmsJob) ImplementsUpdate() {}

type UpdateStarsBalance struct {
	Balance int64
}

func (*UpdateStarsBalance) CRC() uint32 {
	return 0xfb85198
}

func (*UpdateStarsBalance) ImplementsUpdate() {}

type UpdateStarsRevenueStatus struct {
	Peer   Peer
	Status *StarsRevenueStatus
}

func (*UpdateStarsRevenueStatus) CRC() uint32 {
	return 0xa584b019
}

func (*UpdateStarsRevenueStatus) ImplementsUpdate() {}

// Installed stickersets have changed, the client should refetch them as [described in the docs](https://core.telegram.org/api/stickers#installing-stickersets).
type UpdateStickerSets struct {
	Masks  bool `tl:"flag:0,encoded_in_bitflags"`
	Emojis bool `tl:"flag:1,encoded_in_bitflags"`
}

func (*UpdateStickerSets) CRC() uint32 {
	return 0x31c24808
}

func (*UpdateStickerSets) FlagIndex() int {
	return 0
}

func (*UpdateStickerSets) ImplementsUpdate() {}

// The order of stickersets was changed
type UpdateStickerSetsOrder struct {
	Masks  bool `tl:"flag:0,encoded_in_bitflags"`
	Emojis bool `tl:"flag:1,encoded_in_bitflags"`
	Order  []int64
}

func (*UpdateStickerSetsOrder) CRC() uint32 {
	return 0xbb2d201
}

func (*UpdateStickerSetsOrder) FlagIndex() int {
	return 0
}

func (*UpdateStickerSetsOrder) ImplementsUpdate() {}

// Indicates that [stories stealth mode](https://core.telegram.org/api/stories#stealth-mode) was activated.
type UpdateStoriesStealthMode struct {
	StealthMode *StoriesStealthMode
}

func (*UpdateStoriesStealthMode) CRC() uint32 {
	return 0x2c084dc1
}

func (*UpdateStoriesStealthMode) ImplementsUpdate() {}

// A new story was posted.
type UpdateStory struct {
	Peer  Peer
	Story StoryItem
}

func (*UpdateStory) CRC() uint32 {
	return 0x75b3b798
}

func (*UpdateStory) ImplementsUpdate() {}

// A story was successfully uploaded.
type UpdateStoryID struct {
	ID       int32
	RandomID int64
}

func (*UpdateStoryID) CRC() uint32 {
	return 0x1bf335b9
}

func (*UpdateStoryID) ImplementsUpdate() {}

// A cloud theme was updated
type UpdateTheme struct {
	Theme *Theme
}

func (*UpdateTheme) CRC() uint32 {
	return 0x8216fba3
}

func (*UpdateTheme) ImplementsUpdate() {}

// A pending [voice message transcription Â»](https://core.telegram.org/api/transcribe) initiated with [messages.transcribeAudio](https://core.telegram.org/method/messages.transcribeAudio) was updated.
type UpdateTranscribedAudio struct {
	Pending         bool `tl:"flag:0,encoded_in_bitflags"`
	Peer            Peer
	MsgID           int32
	TranscriptionID int64
	Text            string
}

func (*UpdateTranscribedAudio) CRC() uint32 {
	return 0x84cd5a
}

func (*UpdateTranscribedAudio) FlagIndex() int {
	return 0
}

func (*UpdateTranscribedAudio) ImplementsUpdate() {}

// User information was updated, it must be refetched using [users.getFullUser](https://core.telegram.org/method/users.getFullUser).
type UpdateUser struct {
	UserID int64
}

func (*UpdateUser) CRC() uint32 {
	return 0x20529438
}

func (*UpdateUser) ImplementsUpdate() {}

// The [emoji status](https://core.telegram.org/api/emoji-status) of a certain user has changed
type UpdateUserEmojiStatus struct {
	UserID      int64
	EmojiStatus EmojiStatus
}

func (*UpdateUserEmojiStatus) CRC() uint32 {
	return 0x28373599
}

func (*UpdateUserEmojiStatus) ImplementsUpdate() {}

// Changes the user's first name, last name and username.
type UpdateUserName struct {
	UserID    int64
	FirstName string
	LastName  string
	Usernames []*Username
}

func (*UpdateUserName) CRC() uint32 {
	return 0xa7848924
}

func (*UpdateUserName) ImplementsUpdate() {}

// A user's phone number was changed
type UpdateUserPhone struct {
	UserID int64
	Phone  string
}

func (*UpdateUserPhone) CRC() uint32 {
	return 0x5492a13
}

func (*UpdateUserPhone) ImplementsUpdate() {}

// Contact status update.
type UpdateUserStatus struct {
	UserID int64
	Status UserStatus
}

func (*UpdateUserStatus) CRC() uint32 {
	return 0xe5bdf8de
}

func (*UpdateUserStatus) ImplementsUpdate() {}

// The user is preparing a message; typing, recording, uploading, etc. This update is valid for 6 seconds. If no further updates of this kind are received after 6 seconds, it should be considered that the user stopped doing whatever they were doing
type UpdateUserTyping struct {
	UserID int64
	Action SendMessageAction
}

func (*UpdateUserTyping) CRC() uint32 {
	return 0xc01e857f
}

func (*UpdateUserTyping) ImplementsUpdate() {}

// An [instant view](https://core.telegram.orghttps://instantview.telegram.org) webpage preview was generated
type UpdateWebPage struct {
	Webpage  WebPage
	Pts      int32
	PtsCount int32
}

func (*UpdateWebPage) CRC() uint32 {
	return 0x7f891213
}

func (*UpdateWebPage) ImplementsUpdate() {}

// Indicates to a bot that a webview was closed and an inline message was sent on behalf of the user using [messages.sendWebViewResultMessage](https://core.telegram.org/method/messages.sendWebViewResultMessage)
type UpdateWebViewResultSent struct {
	QueryID int64
}

func (*UpdateWebViewResultSent) CRC() uint32 {
	return 0x1592b79d
}

func (*UpdateWebViewResultSent) ImplementsUpdate() {}

type Updates interface {
	tl.Object
	ImplementsUpdates()
}

// Shortened constructor containing info on one update not requiring auxiliary data
type UpdateShort struct {
	Update Update
	Date   int32
}

func (*UpdateShort) CRC() uint32 {
	return 0x78d4dec1
}

func (*UpdateShort) ImplementsUpdates() {}

// Shortened constructor containing info on one new incoming text message from a chat
type UpdateShortChatMessage struct {
	Out         bool `tl:"flag:1,encoded_in_bitflags"`
	Mentioned   bool `tl:"flag:4,encoded_in_bitflags"`
	MediaUnread bool `tl:"flag:5,encoded_in_bitflags"`
	Silent      bool `tl:"flag:13,encoded_in_bitflags"`
	ID          int32
	FromID      int64
	ChatID      int64
	Message     string
	Pts         int32
	PtsCount    int32
	Date        int32
	FwdFrom     *MessageFwdHeader  `tl:"flag:2"`
	ViaBotID    int64              `tl:"flag:11"`
	ReplyTo     MessageReplyHeader `tl:"flag:3"`
	Entities    []MessageEntity    `tl:"flag:7"`
	TtlPeriod   int32              `tl:"flag:25"`
}

func (*UpdateShortChatMessage) CRC() uint32 {
	return 0x4d6deea5
}

func (*UpdateShortChatMessage) FlagIndex() int {
	return 0
}

func (*UpdateShortChatMessage) ImplementsUpdates() {}

// Info about a message sent to (received from) another user
type UpdateShortMessage struct {
	Out         bool `tl:"flag:1,encoded_in_bitflags"`
	Mentioned   bool `tl:"flag:4,encoded_in_bitflags"`
	MediaUnread bool `tl:"flag:5,encoded_in_bitflags"`
	Silent      bool `tl:"flag:13,encoded_in_bitflags"`
	ID          int32
	UserID      int64
	Message     string
	Pts         int32
	PtsCount    int32
	Date        int32
	FwdFrom     *MessageFwdHeader  `tl:"flag:2"`
	ViaBotID    int64              `tl:"flag:11"`
	ReplyTo     MessageReplyHeader `tl:"flag:3"`
	Entities    []MessageEntity    `tl:"flag:7"`
	TtlPeriod   int32              `tl:"flag:25"`
}

func (*UpdateShortMessage) CRC() uint32 {
	return 0x313bc7f8
}

func (*UpdateShortMessage) FlagIndex() int {
	return 0
}

func (*UpdateShortMessage) ImplementsUpdates() {}

// Shortened constructor containing info on one outgoing message to a contact (the destination chat has to be extracted from the method call that returned this object).
type UpdateShortSentMessage struct {
	Out       bool `tl:"flag:1,encoded_in_bitflags"`
	ID        int32
	Pts       int32
	PtsCount  int32
	Date      int32
	Media     MessageMedia    `tl:"flag:9"`
	Entities  []MessageEntity `tl:"flag:7"`
	TtlPeriod int32           `tl:"flag:25"`
}

func (*UpdateShortSentMessage) CRC() uint32 {
	return 0x9015e101
}

func (*UpdateShortSentMessage) FlagIndex() int {
	return 0
}

func (*UpdateShortSentMessage) ImplementsUpdates() {}

// Full constructor of updates
type UpdatesObj struct {
	Updates []Update
	Users   []User
	Chats   []Chat
	Date    int32
	Seq     int32
}

func (*UpdatesObj) CRC() uint32 {
	return 0x74ae4240
}

func (*UpdatesObj) ImplementsUpdates() {}

// Constructor for a group of updates.
type UpdatesCombined struct {
	Updates  []Update
	Users    []User
	Chats    []Chat
	Date     int32
	SeqStart int32
	Seq      int32
}

func (*UpdatesCombined) CRC() uint32 {
	return 0x725b04c3
}

func (*UpdatesCombined) ImplementsUpdates() {}

// Too many updates, it is necessary to execute [updates.getDifference](https://core.telegram.org/method/updates.getDifference).
type UpdatesTooLong struct{}

func (*UpdatesTooLong) CRC() uint32 {
	return 0xe317af7e
}

func (*UpdatesTooLong) ImplementsUpdates() {}

type URLAuthResult interface {
	tl.Object
	ImplementsURLAuthResult()
}

// Details about an accepted authorization request, for more info [click here Â»](https://core.telegram.org/api/url-authorization)
type URLAuthResultAccepted struct {
	URL string
}

func (*URLAuthResultAccepted) CRC() uint32 {
	return 0x8f8c0e4e
}

func (*URLAuthResultAccepted) ImplementsURLAuthResult() {}

// Details about an accepted authorization request, for more info [click here Â»](https://core.telegram.org/api/url-authorization)
type URLAuthResultDefault struct{}

func (*URLAuthResultDefault) CRC() uint32 {
	return 0xa9d6db1f
}

func (*URLAuthResultDefault) ImplementsURLAuthResult() {}

// Details about the authorization request, for more info [click here Â»](https://core.telegram.org/api/url-authorization)
type URLAuthResultRequest struct {
	RequestWriteAccess bool `tl:"flag:0,encoded_in_bitflags"`
	Bot                User
	Domain             string
}

func (*URLAuthResultRequest) CRC() uint32 {
	return 0x92d33a0e
}

func (*URLAuthResultRequest) FlagIndex() int {
	return 0
}

func (*URLAuthResultRequest) ImplementsURLAuthResult() {}

type User interface {
	tl.Object
	ImplementsUser()
}

// Indicates info about a certain user
type UserObj struct {
	Self                  bool `tl:"flag:10,encoded_in_bitflags"`
	Contact               bool `tl:"flag:11,encoded_in_bitflags"`
	MutualContact         bool `tl:"flag:12,encoded_in_bitflags"`
	Deleted               bool `tl:"flag:13,encoded_in_bitflags"`
	Bot                   bool `tl:"flag:14,encoded_in_bitflags"`
	BotChatHistory        bool `tl:"flag:15,encoded_in_bitflags"`
	BotNochats            bool `tl:"flag:16,encoded_in_bitflags"`
	Verified              bool `tl:"flag:17,encoded_in_bitflags"`
	Restricted            bool `tl:"flag:18,encoded_in_bitflags"`
	Min                   bool `tl:"flag:20,encoded_in_bitflags"`
	BotInlineGeo          bool `tl:"flag:21,encoded_in_bitflags"`
	Support               bool `tl:"flag:23,encoded_in_bitflags"`
	Scam                  bool `tl:"flag:24,encoded_in_bitflags"`
	ApplyMinPhoto         bool `tl:"flag:25,encoded_in_bitflags"`
	Fake                  bool `tl:"flag:26,encoded_in_bitflags"`
	BotAttachMenu         bool `tl:"flag:27,encoded_in_bitflags"`
	Premium               bool `tl:"flag:28,encoded_in_bitflags"`
	AttachMenuEnabled     bool `tl:"flag:29,encoded_in_bitflags"`
	BotCanEdit            bool `tl:"flag2:1,encoded_in_bitflags"`
	CloseFriend           bool `tl:"flag2:2,encoded_in_bitflags"`
	StoriesHidden         bool `tl:"flag2:3,encoded_in_bitflags"`
	StoriesUnavailable    bool `tl:"flag2:4,encoded_in_bitflags"`
	ContactRequirePremium bool `tl:"flag2:10,encoded_in_bitflags"`
	BotBusiness           bool `tl:"flag2:11,encoded_in_bitflags"`
	ID                    int64
	AccessHash            int64                `tl:"flag:0"`
	FirstName             string               `tl:"flag:1"`
	LastName              string               `tl:"flag:2"`
	Username              string               `tl:"flag:3"`
	Phone                 string               `tl:"flag:4"`
	Photo                 UserProfilePhoto     `tl:"flag:5"`
	Status                UserStatus           `tl:"flag:6"`
	BotInfoVersion        int32                `tl:"flag:14"`
	RestrictionReason     []*RestrictionReason `tl:"flag:18"`
	BotInlinePlaceholder  string               `tl:"flag:19"`
	LangCode              string               `tl:"flag:22"`
	EmojiStatus           EmojiStatus          `tl:"flag:30"`
	Usernames             []*Username          `tl:"flag2:0"`
	StoriesMaxID          int32                `tl:"flag2:5"`
	Color                 *PeerColor           `tl:"flag2:8"`
	ProfileColor          *PeerColor           `tl:"flag2:9"`
}

func (*UserObj) CRC() uint32 {
	return 0x215c4438
}

func (*UserObj) FlagIndex() int {
	return 19
}

func (*UserObj) ImplementsUser() {}

// Empty constructor, non-existent user.
type UserEmpty struct {
	ID int64
}

func (*UserEmpty) CRC() uint32 {
	return 0xd3bc4b7a
}

func (*UserEmpty) ImplementsUser() {}

type UserProfilePhoto interface {
	tl.Object
	ImplementsUserProfilePhoto()
}

// User profile photo.
type UserProfilePhotoObj struct {
	HasVideo      bool `tl:"flag:0,encoded_in_bitflags"`
	Personal      bool `tl:"flag:2,encoded_in_bitflags"`
	PhotoID       int64
	StrippedThumb []byte `tl:"flag:1"`
	DcID          int32
}

func (*UserProfilePhotoObj) CRC() uint32 {
	return 0x82d1f706
}

func (*UserProfilePhotoObj) FlagIndex() int {
	return 0
}

func (*UserProfilePhotoObj) ImplementsUserProfilePhoto() {}

// Profile photo has not been set, or was hidden.
type UserProfilePhotoEmpty struct{}

func (*UserProfilePhotoEmpty) CRC() uint32 {
	return 0x4f11bae1
}

func (*UserProfilePhotoEmpty) ImplementsUserProfilePhoto() {}

type UserStatus interface {
	tl.Object
	ImplementsUserStatus()
}

// User status has not been set yet.
type UserStatusEmpty struct{}

func (*UserStatusEmpty) CRC() uint32 {
	return 0x9d05049
}

func (*UserStatusEmpty) ImplementsUserStatus() {}

// Online status: last seen last month
type UserStatusLastMonth struct {
	ByMe bool `tl:"flag:0,encoded_in_bitflags"`
}

func (*UserStatusLastMonth) CRC() uint32 {
	return 0x65899777
}

func (*UserStatusLastMonth) FlagIndex() int {
	return 0
}

func (*UserStatusLastMonth) ImplementsUserStatus() {}

// Online status: last seen last week
type UserStatusLastWeek struct {
	ByMe bool `tl:"flag:0,encoded_in_bitflags"`
}

func (*UserStatusLastWeek) CRC() uint32 {
	return 0x541a1d1a
}

func (*UserStatusLastWeek) FlagIndex() int {
	return 0
}

func (*UserStatusLastWeek) ImplementsUserStatus() {}

// The user's offline status.
type UserStatusOffline struct {
	WasOnline int32
}

func (*UserStatusOffline) CRC() uint32 {
	return 0x8c703f
}

func (*UserStatusOffline) ImplementsUserStatus() {}

// Online status of the user.
type UserStatusOnline struct {
	Expires int32
}

func (*UserStatusOnline) CRC() uint32 {
	return 0xedb93949
}

func (*UserStatusOnline) ImplementsUserStatus() {}

// Online status: last seen recently
type UserStatusRecently struct {
	ByMe bool `tl:"flag:0,encoded_in_bitflags"`
}

func (*UserStatusRecently) CRC() uint32 {
	return 0x7b197dc8
}

func (*UserStatusRecently) FlagIndex() int {
	return 0
}

func (*UserStatusRecently) ImplementsUserStatus() {}

type VideoSize interface {
	tl.Object
	ImplementsVideoSize()
}

// An [animated profile picture](https://core.telegram.org/api/files#animated-profile-pictures) in MPEG4 format
type VideoSizeObj struct {
	Type         string
	W            int32
	H            int32
	Size         int32
	VideoStartTs float64 `tl:"flag:0"`
}

func (*VideoSizeObj) CRC() uint32 {
	return 0xde33b094
}

func (*VideoSizeObj) FlagIndex() int {
	return 0
}

func (*VideoSizeObj) ImplementsVideoSize() {}

// An [animated profile picture](https://core.telegram.org/api/files#animated-profile-pictures) based on a [custom emoji sticker](https://core.telegram.org/api/custom-emoji).
type VideoSizeEmojiMarkup struct {
	EmojiID          int64
	BackgroundColors []int32
}

func (*VideoSizeEmojiMarkup) CRC() uint32 {
	return 0xf85c413c
}

func (*VideoSizeEmojiMarkup) ImplementsVideoSize() {}

// An [animated profile picture](https://core.telegram.org/api/files#animated-profile-pictures) based on a [sticker](https://core.telegram.org/api/stickers).
type VideoSizeStickerMarkup struct {
	Stickerset       InputStickerSet
	StickerID        int64
	BackgroundColors []int32
}

func (*VideoSizeStickerMarkup) CRC() uint32 {
	return 0xda082fe
}

func (*VideoSizeStickerMarkup) ImplementsVideoSize() {}

type WallPaper interface {
	tl.Object
	ImplementsWallPaper()
}

// Represents a [wallpaper](https://core.telegram.org/api/wallpapers) based on an image.
type WallPaperObj struct {
	ID         int64
	Creator    bool `tl:"flag:0,encoded_in_bitflags"`
	Default    bool `tl:"flag:1,encoded_in_bitflags"`
	Pattern    bool `tl:"flag:3,encoded_in_bitflags"`
	Dark       bool `tl:"flag:4,encoded_in_bitflags"`
	AccessHash int64
	Slug       string
	Document   Document
	Settings   *WallPaperSettings `tl:"flag:2"`
}

func (*WallPaperObj) CRC() uint32 {
	return 0xa437c3ed
}

func (*WallPaperObj) FlagIndex() int {
	return 1
}

func (*WallPaperObj) ImplementsWallPaper() {}

// Represents a [wallpaper](https://core.telegram.org/api/wallpapers) only based on colors/gradients.
type WallPaperNoFile struct {
	ID       int64
	Default  bool               `tl:"flag:1,encoded_in_bitflags"`
	Dark     bool               `tl:"flag:4,encoded_in_bitflags"`
	Settings *WallPaperSettings `tl:"flag:2"`
}

func (*WallPaperNoFile) CRC() uint32 {
	return 0xe0804116
}

func (*WallPaperNoFile) FlagIndex() int {
	return 1
}

func (*WallPaperNoFile) ImplementsWallPaper() {}

type WebDocument interface {
	tl.Object
	ImplementsWebDocument()
}

// Remote document
type WebDocumentObj struct {
	URL        string
	AccessHash int64
	Size       int32
	MimeType   string
	Attributes []DocumentAttribute
}

func (*WebDocumentObj) CRC() uint32 {
	return 0x1c570ed1
}

func (*WebDocumentObj) ImplementsWebDocument() {}

// Remote document that can be downloaded without [proxying through telegram](https://core.telegram.org/api/files)
type WebDocumentNoProxy struct {
	URL        string
	Size       int32
	MimeType   string
	Attributes []DocumentAttribute
}

func (*WebDocumentNoProxy) CRC() uint32 {
	return 0xf9c8bcc6
}

func (*WebDocumentNoProxy) ImplementsWebDocument() {}

type WebPage interface {
	tl.Object
	ImplementsWebPage()
}

// Webpage preview
type WebPageObj struct {
	HasLargeMedia bool `tl:"flag:13,encoded_in_bitflags"`
	ID            int64
	URL           string
	DisplayURL    string
	Hash          int32
	Type          string             `tl:"flag:0"`
	SiteName      string             `tl:"flag:1"`
	Title         string             `tl:"flag:2"`
	Description   string             `tl:"flag:3"`
	Photo         Photo              `tl:"flag:4"`
	EmbedURL      string             `tl:"flag:5"`
	EmbedType     string             `tl:"flag:5"`
	EmbedWidth    int32              `tl:"flag:6"`
	EmbedHeight   int32              `tl:"flag:6"`
	Duration      int32              `tl:"flag:7"`
	Author        string             `tl:"flag:8"`
	Document      Document           `tl:"flag:9"`
	CachedPage    *Page              `tl:"flag:10"`
	Attributes    []WebPageAttribute `tl:"flag:12"`
}

func (*WebPageObj) CRC() uint32 {
	return 0xe89c45b2
}

func (*WebPageObj) FlagIndex() int {
	return 0
}

func (*WebPageObj) ImplementsWebPage() {}

// No preview is available for the webpage
type WebPageEmpty struct {
	ID  int64
	URL string `tl:"flag:0"`
}

func (*WebPageEmpty) CRC() uint32 {
	return 0x211a1788
}

func (*WebPageEmpty) FlagIndex() int {
	return 0
}

func (*WebPageEmpty) ImplementsWebPage() {}

// The preview of the webpage hasn't changed
type WebPageNotModified struct {
	CachedPageViews int32 `tl:"flag:0"`
}

func (*WebPageNotModified) CRC() uint32 {
	return 0x7311ca11
}

func (*WebPageNotModified) FlagIndex() int {
	return 0
}

func (*WebPageNotModified) ImplementsWebPage() {}

// A preview of the webpage is currently being generated
type WebPagePending struct {
	ID   int64
	URL  string `tl:"flag:0"`
	Date int32
}

func (*WebPagePending) CRC() uint32 {
	return 0xb0d13e47
}

func (*WebPagePending) FlagIndex() int {
	return 0
}

func (*WebPagePending) ImplementsWebPage() {}

type WebPageAttribute interface {
	tl.Object
	ImplementsWebPageAttribute()
}
type WebPageAttributeStickerSet struct {
	Emojis    bool `tl:"flag:0,encoded_in_bitflags"`
	TextColor bool `tl:"flag:1,encoded_in_bitflags"`
	Stickers  []Document
}

func (*WebPageAttributeStickerSet) CRC() uint32 {
	return 0x50cc03d3
}

func (*WebPageAttributeStickerSet) FlagIndex() int {
	return 0
}

func (*WebPageAttributeStickerSet) ImplementsWebPageAttribute() {}

// Webpage preview of a Telegram story
type WebPageAttributeStory struct {
	Peer  Peer
	ID    int32
	Story StoryItem `tl:"flag:0"`
}

func (*WebPageAttributeStory) CRC() uint32 {
	return 0x2e94c3e7
}

func (*WebPageAttributeStory) FlagIndex() int {
	return 0
}

func (*WebPageAttributeStory) ImplementsWebPageAttribute() {}

// Page theme
type WebPageAttributeTheme struct {
	Documents []Document     `tl:"flag:0"`
	Settings  *ThemeSettings `tl:"flag:1"`
}

func (*WebPageAttributeTheme) CRC() uint32 {
	return 0x54b56617
}

func (*WebPageAttributeTheme) FlagIndex() int {
	return 0
}

func (*WebPageAttributeTheme) ImplementsWebPageAttribute() {}

type AccountEmailVerified interface {
	tl.Object
	ImplementsAccountEmailVerified()
}

// The email was verified correctly.
type AccountEmailVerifiedObj struct {
	Email string
}

func (*AccountEmailVerifiedObj) CRC() uint32 {
	return 0x2b96cd1b
}

func (*AccountEmailVerifiedObj) ImplementsAccountEmailVerified() {}

// The email was verified correctly, and a login code was just sent to it.
type AccountEmailVerifiedLogin struct {
	Email    string
	SentCode AuthSentCode
}

func (*AccountEmailVerifiedLogin) CRC() uint32 {
	return 0xe1bb0d61
}

func (*AccountEmailVerifiedLogin) ImplementsAccountEmailVerified() {}

type AccountEmojiStatuses interface {
	tl.Object
	ImplementsAccountEmojiStatuses()
}

// A list of [emoji statuses](https://core.telegram.org/api/emoji-status)
type AccountEmojiStatusesObj struct {
	Hash     int64
	Statuses []EmojiStatus
}

func (*AccountEmojiStatusesObj) CRC() uint32 {
	return 0x90c467d1
}

func (*AccountEmojiStatusesObj) ImplementsAccountEmojiStatuses() {}

// The server-side list of [emoji statuses](https://core.telegram.org/api/emoji-status) hasn't changed
type AccountEmojiStatusesNotModified struct{}

func (*AccountEmojiStatusesNotModified) CRC() uint32 {
	return 0xd08ce645
}

func (*AccountEmojiStatusesNotModified) ImplementsAccountEmojiStatuses() {}

type AccountResetPasswordResult interface {
	tl.Object
	ImplementsAccountResetPasswordResult()
}

// You recently requested a password reset that was canceled, please wait until the specified date before requesting another reset.
type AccountResetPasswordFailedWait struct {
	RetryDate int32
}

func (*AccountResetPasswordFailedWait) CRC() uint32 {
	return 0xe3779861
}

func (*AccountResetPasswordFailedWait) ImplementsAccountResetPasswordResult() {}

// The 2FA password was reset successfully.
type AccountResetPasswordOk struct{}

func (*AccountResetPasswordOk) CRC() uint32 {
	return 0xe926d63e
}

func (*AccountResetPasswordOk) ImplementsAccountResetPasswordResult() {}

// You successfully requested a password reset, please wait until the specified date before finalizing the reset.
type AccountResetPasswordRequestedWait struct {
	UntilDate int32
}

func (*AccountResetPasswordRequestedWait) CRC() uint32 {
	return 0xe9effc7d
}

func (*AccountResetPasswordRequestedWait) ImplementsAccountResetPasswordResult() {}

type AccountSavedRingtone interface {
	tl.Object
	ImplementsAccountSavedRingtone()
}

// The notification sound was already in MP3 format and was saved without any modification
type AccountSavedRingtoneObj struct{}

func (*AccountSavedRingtoneObj) CRC() uint32 {
	return 0xb7263f6d
}

func (*AccountSavedRingtoneObj) ImplementsAccountSavedRingtone() {}

// The notification sound was not in MP3 format and was successfully converted and saved, use the returned [Document](https://core.telegram.org/type/Document) to refer to the notification sound from now on
type AccountSavedRingtoneConverted struct {
	Document Document
}

func (*AccountSavedRingtoneConverted) CRC() uint32 {
	return 0x1f307eb7
}

func (*AccountSavedRingtoneConverted) ImplementsAccountSavedRingtone() {}

type AccountSavedRingtones interface {
	tl.Object
	ImplementsAccountSavedRingtones()
}

// A list of saved notification sounds
type AccountSavedRingtonesObj struct {
	Hash      int64
	Ringtones []Document
}

func (*AccountSavedRingtonesObj) CRC() uint32 {
	return 0xc1e92cc5
}

func (*AccountSavedRingtonesObj) ImplementsAccountSavedRingtones() {}

// The notification sound list hasn't changed.
type AccountSavedRingtonesNotModified struct{}

func (*AccountSavedRingtonesNotModified) CRC() uint32 {
	return 0xfbf6e8b1
}

func (*AccountSavedRingtonesNotModified) ImplementsAccountSavedRingtones() {}

type AccountThemes interface {
	tl.Object
	ImplementsAccountThemes()
}

// Installed themes
type AccountThemesObj struct {
	Hash   int64
	Themes []*Theme
}

func (*AccountThemesObj) CRC() uint32 {
	return 0x9a3d8c6d
}

func (*AccountThemesObj) ImplementsAccountThemes() {}

// No new themes were installed
type AccountThemesNotModified struct{}

func (*AccountThemesNotModified) CRC() uint32 {
	return 0xf41eb622
}

func (*AccountThemesNotModified) ImplementsAccountThemes() {}

type AccountWallPapers interface {
	tl.Object
	ImplementsAccountWallPapers()
}

// Installed [wallpapers](https://core.telegram.org/api/wallpapers)
type AccountWallPapersObj struct {
	Hash       int64
	Wallpapers []WallPaper
}

func (*AccountWallPapersObj) CRC() uint32 {
	return 0xcdc3858c
}

func (*AccountWallPapersObj) ImplementsAccountWallPapers() {}

// No new [wallpapers](https://core.telegram.org/api/wallpapers) were found
type AccountWallPapersNotModified struct{}

func (*AccountWallPapersNotModified) CRC() uint32 {
	return 0x1c199183
}

func (*AccountWallPapersNotModified) ImplementsAccountWallPapers() {}

type AuthAuthorization interface {
	tl.Object
	ImplementsAuthAuthorization()
}

// Contains user authorization info.
type AuthAuthorizationObj struct {
	SetupPasswordRequired bool   `tl:"flag:1,encoded_in_bitflags"`
	OtherwiseReloginDays  int32  `tl:"flag:1"`
	TmpSessions           int32  `tl:"flag:0"`
	FutureAuthToken       []byte `tl:"flag:2"`
	User                  User
}

func (*AuthAuthorizationObj) CRC() uint32 {
	return 0x2ea2c0d4
}

func (*AuthAuthorizationObj) FlagIndex() int {
	return 0
}

func (*AuthAuthorizationObj) ImplementsAuthAuthorization() {}

// An account with this phone number doesn't exist on telegram: the user has to [enter basic information and sign up](https://core.telegram.org/api/auth)
type AuthAuthorizationSignUpRequired struct {
	TermsOfService *HelpTermsOfService `tl:"flag:0"`
}

func (*AuthAuthorizationSignUpRequired) CRC() uint32 {
	return 0x44747e9a
}

func (*AuthAuthorizationSignUpRequired) FlagIndex() int {
	return 0
}

func (*AuthAuthorizationSignUpRequired) ImplementsAuthAuthorization() {}

type AuthLoginToken interface {
	tl.Object
	ImplementsAuthLoginToken()
}

// Login token (for [QR code login](https://core.telegram.org/api/qr-login))
type AuthLoginTokenObj struct {
	Expires int32
	Token   []byte
}

func (*AuthLoginTokenObj) CRC() uint32 {
	return 0x629f1980
}

func (*AuthLoginTokenObj) ImplementsAuthLoginToken() {}

// Repeat the query to the specified DC
type AuthLoginTokenMigrateTo struct {
	DcID  int32
	Token []byte
}

func (*AuthLoginTokenMigrateTo) CRC() uint32 {
	return 0x68e9916
}

func (*AuthLoginTokenMigrateTo) ImplementsAuthLoginToken() {}

// Login via token (QR code) succeeded!
type AuthLoginTokenSuccess struct {
	Authorization AuthAuthorization
}

func (*AuthLoginTokenSuccess) CRC() uint32 {
	return 0x390d5c5e
}

func (*AuthLoginTokenSuccess) ImplementsAuthLoginToken() {}

type AuthSentCode interface {
	tl.Object
	ImplementsAuthSentCode()
}

// Contains info about a sent verification code.
type AuthSentCodeObj struct {
	Type          AuthSentCodeType
	PhoneCodeHash string
	NextType      AuthCodeType `tl:"flag:1"`
	Timeout       int32        `tl:"flag:2"`
}

func (*AuthSentCodeObj) CRC() uint32 {
	return 0x5e002502
}

func (*AuthSentCodeObj) FlagIndex() int {
	return 0
}

func (*AuthSentCodeObj) ImplementsAuthSentCode() {}

// The user successfully authorized using [future auth tokens](https://core.telegram.org/api/auth#future-auth-tokens)
type AuthSentCodeSuccess struct {
	Authorization AuthAuthorization
}

func (*AuthSentCodeSuccess) CRC() uint32 {
	return 0x2390fe44
}

func (*AuthSentCodeSuccess) ImplementsAuthSentCode() {}

type AuthSentCodeType interface {
	tl.Object
	ImplementsAuthSentCodeType()
}

// The code was sent through the telegram app
type AuthSentCodeTypeApp struct {
	Length int32
}

func (*AuthSentCodeTypeApp) CRC() uint32 {
	return 0x3dbb5986
}

func (*AuthSentCodeTypeApp) ImplementsAuthSentCodeType() {}

// The code will be sent via a phone call: a synthesized voice will tell the user which verification code to input.
type AuthSentCodeTypeCall struct {
	Length int32
}

func (*AuthSentCodeTypeCall) CRC() uint32 {
	return 0x5353e5a7
}

func (*AuthSentCodeTypeCall) ImplementsAuthSentCodeType() {}

// The code was sent via the [previously configured login email Â»](https://core.telegram.org/api/auth#email-verification)
type AuthSentCodeTypeEmailCode struct {
	AppleSigninAllowed   bool `tl:"flag:0,encoded_in_bitflags"`
	GoogleSigninAllowed  bool `tl:"flag:1,encoded_in_bitflags"`
	EmailPattern         string
	Length               int32
	ResetAvailablePeriod int32 `tl:"flag:3"`
	ResetPendingDate     int32 `tl:"flag:4"`
}

func (*AuthSentCodeTypeEmailCode) CRC() uint32 {
	return 0xf450f59b
}

func (*AuthSentCodeTypeEmailCode) FlagIndex() int {
	return 0
}

func (*AuthSentCodeTypeEmailCode) ImplementsAuthSentCodeType() {}

// An authentication code should be delivered via SMS after Firebase attestation, as described in the [auth documentation Â»](https://core.telegram.org/api/auth).
type AuthSentCodeTypeFirebaseSms struct {
	Nonce                  []byte `tl:"flag:0"`
	PlayIntegrityProjectID int64  `tl:"flag:2"`
	PlayIntegrityNonce     []byte `tl:"flag:2"`
	Receipt                string `tl:"flag:1"`
	PushTimeout            int32  `tl:"flag:1"`
	Length                 int32
}

func (*AuthSentCodeTypeFirebaseSms) CRC() uint32 {
	return 0x9fd736
}

func (*AuthSentCodeTypeFirebaseSms) FlagIndex() int {
	return 0
}

func (*AuthSentCodeTypeFirebaseSms) ImplementsAuthSentCodeType() {}

// The code will be sent via a flash phone call, that will be closed immediately. The phone code will then be the phone number itself, just make sure that the phone number matches the specified pattern.
type AuthSentCodeTypeFlashCall struct {
	Pattern string
}

func (*AuthSentCodeTypeFlashCall) CRC() uint32 {
	return 0xab03c6d9
}

func (*AuthSentCodeTypeFlashCall) ImplementsAuthSentCodeType() {}

// The code was delivered via [fragment.com](https://core.telegram.orghttps://fragment.com).
type AuthSentCodeTypeFragmentSms struct {
	URL    string
	Length int32
}

func (*AuthSentCodeTypeFragmentSms) CRC() uint32 {
	return 0xd9565c39
}

func (*AuthSentCodeTypeFragmentSms) ImplementsAuthSentCodeType() {}

// The code will be sent via a flash phone call, that will be closed immediately. The last digits of the phone number that calls are the code that must be entered manually by the user.
type AuthSentCodeTypeMissedCall struct {
	Prefix string
	Length int32
}

func (*AuthSentCodeTypeMissedCall) CRC() uint32 {
	return 0x82006484
}

func (*AuthSentCodeTypeMissedCall) ImplementsAuthSentCodeType() {}

// The user should add and verify an email address in order to login as described [here Â»](https://core.telegram.org/api/auth#email-verification).
type AuthSentCodeTypeSetUpEmailRequired struct {
	AppleSigninAllowed  bool `tl:"flag:0,encoded_in_bitflags"`
	GoogleSigninAllowed bool `tl:"flag:1,encoded_in_bitflags"`
}

func (*AuthSentCodeTypeSetUpEmailRequired) CRC() uint32 {
	return 0xa5491dea
}

func (*AuthSentCodeTypeSetUpEmailRequired) FlagIndex() int {
	return 0
}

func (*AuthSentCodeTypeSetUpEmailRequired) ImplementsAuthSentCodeType() {}

// The code was sent via SMS
type AuthSentCodeTypeSms struct {
	Length int32
}

func (*AuthSentCodeTypeSms) CRC() uint32 {
	return 0xc000bba2
}

func (*AuthSentCodeTypeSms) ImplementsAuthSentCodeType() {}

type AuthSentCodeTypeSmsPhrase struct {
	Beginning string `tl:"flag:0"`
}

func (*AuthSentCodeTypeSmsPhrase) CRC() uint32 {
	return 0xb37794af
}

func (*AuthSentCodeTypeSmsPhrase) FlagIndex() int {
	return 0
}

func (*AuthSentCodeTypeSmsPhrase) ImplementsAuthSentCodeType() {}

type AuthSentCodeTypeSmsWord struct {
	Beginning string `tl:"flag:0"`
}

func (*AuthSentCodeTypeSmsWord) CRC() uint32 {
	return 0xa416ac81
}

func (*AuthSentCodeTypeSmsWord) FlagIndex() int {
	return 0
}

func (*AuthSentCodeTypeSmsWord) ImplementsAuthSentCodeType() {}

type ChannelsChannelParticipants interface {
	tl.Object
	ImplementsChannelsChannelParticipants()
}

// Represents multiple channel participants
type ChannelsChannelParticipantsObj struct {
	Count        int32
	Participants []ChannelParticipant
	Chats        []Chat
	Users        []User
}

func (*ChannelsChannelParticipantsObj) CRC() uint32 {
	return 0x9ab0feaf
}

func (*ChannelsChannelParticipantsObj) ImplementsChannelsChannelParticipants() {}

// No new participant info could be found
type ChannelsChannelParticipantsNotModified struct{}

func (*ChannelsChannelParticipantsNotModified) CRC() uint32 {
	return 0xf0173fe9
}

func (*ChannelsChannelParticipantsNotModified) ImplementsChannelsChannelParticipants() {}

type ChannelsSponsoredMessageReportResult interface {
	tl.Object
	ImplementsChannelsSponsoredMessageReportResult()
}
type ChannelsSponsoredMessageReportResultAdsHidden struct{}

func (*ChannelsSponsoredMessageReportResultAdsHidden) CRC() uint32 {
	return 0x3e3bcf2f
}

func (*ChannelsSponsoredMessageReportResultAdsHidden) ImplementsChannelsSponsoredMessageReportResult() {
}

type ChannelsSponsoredMessageReportResultChooseOption struct {
	Title   string
	Options []*SponsoredMessageReportOption
}

func (*ChannelsSponsoredMessageReportResultChooseOption) CRC() uint32 {
	return 0x846f9e42
}

func (*ChannelsSponsoredMessageReportResultChooseOption) ImplementsChannelsSponsoredMessageReportResult() {
}

type ChannelsSponsoredMessageReportResultReported struct{}

func (*ChannelsSponsoredMessageReportResultReported) CRC() uint32 {
	return 0xad798849
}

func (*ChannelsSponsoredMessageReportResultReported) ImplementsChannelsSponsoredMessageReportResult() {
}

type ChatlistsChatlistInvite interface {
	tl.Object
	ImplementsChatlistsChatlistInvite()
}

// Info about a [chat folder deep link Â»](https://core.telegram.org/api/links#chat-folder-links).
type ChatlistsChatlistInviteObj struct {
	Title    string
	Emoticon string `tl:"flag:0"`
	Peers    []Peer
	Chats    []Chat
	Users    []User
}

func (*ChatlistsChatlistInviteObj) CRC() uint32 {
	return 0x1dcd839d
}

func (*ChatlistsChatlistInviteObj) FlagIndex() int {
	return 0
}

func (*ChatlistsChatlistInviteObj) ImplementsChatlistsChatlistInvite() {}

// Updated info about a [chat folder deep link Â»](https://core.telegram.org/api/links#chat-folder-links) we already imported.
type ChatlistsChatlistInviteAlready struct {
	FilterID     int32
	MissingPeers []Peer
	AlreadyPeers []Peer
	Chats        []Chat
	Users        []User
}

func (*ChatlistsChatlistInviteAlready) CRC() uint32 {
	return 0xfa87f659
}

func (*ChatlistsChatlistInviteAlready) ImplementsChatlistsChatlistInvite() {}

type ContactsBlocked interface {
	tl.Object
	ImplementsContactsBlocked()
}

// Full list of blocked users.
type ContactsBlockedObj struct {
	Blocked []*PeerBlocked
	Chats   []Chat
	Users   []User
}

func (*ContactsBlockedObj) CRC() uint32 {
	return 0xade1591
}

func (*ContactsBlockedObj) ImplementsContactsBlocked() {}

// Incomplete list of blocked users.
type ContactsBlockedSlice struct {
	Count   int32
	Blocked []*PeerBlocked
	Chats   []Chat
	Users   []User
}

func (*ContactsBlockedSlice) CRC() uint32 {
	return 0xe1664194
}

func (*ContactsBlockedSlice) ImplementsContactsBlocked() {}

type ContactsContacts interface {
	tl.Object
	ImplementsContactsContacts()
}

// The current user's contact list and info on users.
type ContactsContactsObj struct {
	Contacts   []*Contact
	SavedCount int32
	Users      []User
}

func (*ContactsContactsObj) CRC() uint32 {
	return 0xeae87e42
}

func (*ContactsContactsObj) ImplementsContactsContacts() {}

// Contact list on the server is the same as the list on the client.
type ContactsContactsNotModified struct{}

func (*ContactsContactsNotModified) CRC() uint32 {
	return 0xb74ba9d2
}

func (*ContactsContactsNotModified) ImplementsContactsContacts() {}

type ContactsTopPeers interface {
	tl.Object
	ImplementsContactsTopPeers()
}

// Top peers
type ContactsTopPeersObj struct {
	Categories []*TopPeerCategoryPeers
	Chats      []Chat
	Users      []User
}

func (*ContactsTopPeersObj) CRC() uint32 {
	return 0x70b772a8
}

func (*ContactsTopPeersObj) ImplementsContactsTopPeers() {}

// Top peers disabled
type ContactsTopPeersDisabled struct{}

func (*ContactsTopPeersDisabled) CRC() uint32 {
	return 0xb52c939d
}

func (*ContactsTopPeersDisabled) ImplementsContactsTopPeers() {}

// Top peer info hasn't changed
type ContactsTopPeersNotModified struct{}

func (*ContactsTopPeersNotModified) CRC() uint32 {
	return 0xde266ef5
}

func (*ContactsTopPeersNotModified) ImplementsContactsTopPeers() {}

type HelpAppConfig interface {
	tl.Object
	ImplementsHelpAppConfig()
}

// Contains various [client configuration parameters](https://core.telegram.org/api/config#client-configuration)
type HelpAppConfigObj struct {
	Hash   int32
	Config JsonValue
}

func (*HelpAppConfigObj) CRC() uint32 {
	return 0xdd18782e
}

func (*HelpAppConfigObj) ImplementsHelpAppConfig() {}

// The client configuration parameters haven't changed
type HelpAppConfigNotModified struct{}

func (*HelpAppConfigNotModified) CRC() uint32 {
	return 0x7cde641d
}

func (*HelpAppConfigNotModified) ImplementsHelpAppConfig() {}

type HelpAppUpdate interface {
	tl.Object
	ImplementsHelpAppUpdate()
}

// An update is available for the application.
type HelpAppUpdateObj struct {
	CanNotSkip bool `tl:"flag:0,encoded_in_bitflags"`
	ID         int32
	Version    string
	Text       string
	Entities   []MessageEntity
	Document   Document `tl:"flag:1"`
	URL        string   `tl:"flag:2"`
	Sticker    Document `tl:"flag:3"`
}

func (*HelpAppUpdateObj) CRC() uint32 {
	return 0xccbbce30
}

func (*HelpAppUpdateObj) FlagIndex() int {
	return 0
}

func (*HelpAppUpdateObj) ImplementsHelpAppUpdate() {}

// No updates are available for the application.
type HelpNoAppUpdate struct{}

func (*HelpNoAppUpdate) CRC() uint32 {
	return 0xc45a6536
}

func (*HelpNoAppUpdate) ImplementsHelpAppUpdate() {}

type HelpCountriesList interface {
	tl.Object
	ImplementsHelpCountriesList()
}

// Name, ISO code, localized name and phone codes/patterns of all available countries
type HelpCountriesListObj struct {
	Countries []*HelpCountry
	Hash      int32
}

func (*HelpCountriesListObj) CRC() uint32 {
	return 0x87d0759e
}

func (*HelpCountriesListObj) ImplementsHelpCountriesList() {}

// The country list has not changed
type HelpCountriesListNotModified struct{}

func (*HelpCountriesListNotModified) CRC() uint32 {
	return 0x93cc1f32
}

func (*HelpCountriesListNotModified) ImplementsHelpCountriesList() {}

type HelpDeepLinkInfo interface {
	tl.Object
	ImplementsHelpDeepLinkInfo()
}

// Deep link info, see [the here for more details](https://core.telegram.org/api/links#unsupported-links)
type HelpDeepLinkInfoObj struct {
	UpdateApp bool `tl:"flag:0,encoded_in_bitflags"`
	Message   string
	Entities  []MessageEntity `tl:"flag:1"`
}

func (*HelpDeepLinkInfoObj) CRC() uint32 {
	return 0x6a4ee832
}

func (*HelpDeepLinkInfoObj) FlagIndex() int {
	return 0
}

func (*HelpDeepLinkInfoObj) ImplementsHelpDeepLinkInfo() {}

// Deep link info empty
type HelpDeepLinkInfoEmpty struct{}

func (*HelpDeepLinkInfoEmpty) CRC() uint32 {
	return 0x66afa166
}

func (*HelpDeepLinkInfoEmpty) ImplementsHelpDeepLinkInfo() {}

type HelpPassportConfig interface {
	tl.Object
	ImplementsHelpPassportConfig()
}

// Telegram [passport](https://core.telegram.org/passport) configuration
type HelpPassportConfigObj struct {
	Hash           int32
	CountriesLangs *DataJson
}

func (*HelpPassportConfigObj) CRC() uint32 {
	return 0xa098d6af
}

func (*HelpPassportConfigObj) ImplementsHelpPassportConfig() {}

// Password configuration not modified
type HelpPassportConfigNotModified struct{}

func (*HelpPassportConfigNotModified) CRC() uint32 {
	return 0xbfb9f457
}

func (*HelpPassportConfigNotModified) ImplementsHelpPassportConfig() {}

type HelpPeerColorSet interface {
	tl.Object
	ImplementsHelpPeerColorSet()
}

// Represents a [color palette that can be used in profile pages Â»](https://core.telegram.org/api/colors).
type HelpPeerColorProfileSet struct {
	PaletteColors []int32
	BgColors      []int32
	StoryColors   []int32
}

func (*HelpPeerColorProfileSet) CRC() uint32 {
	return 0x767d61eb
}

func (*HelpPeerColorProfileSet) ImplementsHelpPeerColorSet() {}

// Represents a [color palette that can be used in message accents Â»](https://core.telegram.org/api/colors).
type HelpPeerColorSetObj struct {
	Colors []int32
}

func (*HelpPeerColorSetObj) CRC() uint32 {
	return 0x26219a58
}

func (*HelpPeerColorSetObj) ImplementsHelpPeerColorSet() {}

type HelpPeerColors interface {
	tl.Object
	ImplementsHelpPeerColors()
}

// Contains info about multiple [color palettes Â»](https://core.telegram.org/api/colors).
type HelpPeerColorsObj struct {
	Hash   int32
	Colors []*HelpPeerColorOption
}

func (*HelpPeerColorsObj) CRC() uint32 {
	return 0xf8ed08
}

func (*HelpPeerColorsObj) ImplementsHelpPeerColors() {}

// The list of color palettes has not changed.
type HelpPeerColorsNotModified struct{}

func (*HelpPeerColorsNotModified) CRC() uint32 {
	return 0x2ba1f5ce
}

func (*HelpPeerColorsNotModified) ImplementsHelpPeerColors() {}

type HelpPromoData interface {
	tl.Object
	ImplementsHelpPromoData()
}

// MTProxy/Public Service Announcement information
type HelpPromoDataObj struct {
	Proxy      bool `tl:"flag:0,encoded_in_bitflags"`
	Expires    int32
	Peer       Peer
	Chats      []Chat
	Users      []User
	PsaType    string `tl:"flag:1"`
	PsaMessage string `tl:"flag:2"`
}

func (*HelpPromoDataObj) CRC() uint32 {
	return 0x8c39793f
}

func (*HelpPromoDataObj) FlagIndex() int {
	return 0
}

func (*HelpPromoDataObj) ImplementsHelpPromoData() {}

// No PSA/MTProxy info is available
type HelpPromoDataEmpty struct {
	Expires int32
}

func (*HelpPromoDataEmpty) CRC() uint32 {
	return 0x98f6ac75
}

func (*HelpPromoDataEmpty) ImplementsHelpPromoData() {}

type HelpTermsOfServiceUpdate interface {
	tl.Object
	ImplementsHelpTermsOfServiceUpdate()
}

// Info about an update of telegram's terms of service. If the terms of service are declined, then the [account.deleteAccount](https://core.telegram.org/method/account.deleteAccount) method should be called with the reason "Decline ToS update"
type HelpTermsOfServiceUpdateObj struct {
	Expires        int32
	TermsOfService *HelpTermsOfService
}

func (*HelpTermsOfServiceUpdateObj) CRC() uint32 {
	return 0x28ecf961
}

func (*HelpTermsOfServiceUpdateObj) ImplementsHelpTermsOfServiceUpdate() {}

// No changes were made to telegram's terms of service
type HelpTermsOfServiceUpdateEmpty struct {
	Expires int32
}

func (*HelpTermsOfServiceUpdateEmpty) CRC() uint32 {
	return 0xe3309f7f
}

func (*HelpTermsOfServiceUpdateEmpty) ImplementsHelpTermsOfServiceUpdate() {}

type HelpTimezonesList interface {
	tl.Object
	ImplementsHelpTimezonesList()
}
type HelpTimezonesListObj struct {
	Timezones []*Timezone
	Hash      int32
}

func (*HelpTimezonesListObj) CRC() uint32 {
	return 0x7b74ed71
}

func (*HelpTimezonesListObj) ImplementsHelpTimezonesList() {}

type HelpTimezonesListNotModified struct{}

func (*HelpTimezonesListNotModified) CRC() uint32 {
	return 0x970708cc
}

func (*HelpTimezonesListNotModified) ImplementsHelpTimezonesList() {}

type HelpUserInfo interface {
	tl.Object
	ImplementsHelpUserInfo()
}

// Internal use
type HelpUserInfoObj struct {
	Message  string
	Entities []MessageEntity
	Author   string
	Date     int32
}

func (*HelpUserInfoObj) CRC() uint32 {
	return 0x1eb3758
}

func (*HelpUserInfoObj) ImplementsHelpUserInfo() {}

// Internal use
type HelpUserInfoEmpty struct{}

func (*HelpUserInfoEmpty) CRC() uint32 {
	return 0xf3ae2eed
}

func (*HelpUserInfoEmpty) ImplementsHelpUserInfo() {}

type MessagesAllStickers interface {
	tl.Object
	ImplementsMessagesAllStickers()
}

// Info about all installed stickers
type MessagesAllStickersObj struct {
	Hash int64
	Sets []*StickerSet
}

func (*MessagesAllStickersObj) CRC() uint32 {
	return 0xcdbbcebb
}

func (*MessagesAllStickersObj) ImplementsMessagesAllStickers() {}

// Info about all installed stickers hasn't changed
type MessagesAllStickersNotModified struct{}

func (*MessagesAllStickersNotModified) CRC() uint32 {
	return 0xe86602c3
}

func (*MessagesAllStickersNotModified) ImplementsMessagesAllStickers() {}

type MessagesAvailableEffects interface {
	tl.Object
	ImplementsMessagesAvailableEffects()
}
type MessagesAvailableEffectsObj struct {
	Hash      int32
	Effects   []*AvailableEffect
	Documents []Document
}

func (*MessagesAvailableEffectsObj) CRC() uint32 {
	return 0xbddb616e
}

func (*MessagesAvailableEffectsObj) ImplementsMessagesAvailableEffects() {}

type MessagesAvailableEffectsNotModified struct{}

func (*MessagesAvailableEffectsNotModified) CRC() uint32 {
	return 0xd1ed9a5b
}

func (*MessagesAvailableEffectsNotModified) ImplementsMessagesAvailableEffects() {}

type MessagesAvailableReactions interface {
	tl.Object
	ImplementsMessagesAvailableReactions()
}

// Animations and metadata associated with [message reactions Â»](https://core.telegram.org/api/reactions)
type MessagesAvailableReactionsObj struct {
	Hash      int32
	Reactions []*AvailableReaction
}

func (*MessagesAvailableReactionsObj) CRC() uint32 {
	return 0x768e3aad
}

func (*MessagesAvailableReactionsObj) ImplementsMessagesAvailableReactions() {}

// No new reactions are available
type MessagesAvailableReactionsNotModified struct{}

func (*MessagesAvailableReactionsNotModified) CRC() uint32 {
	return 0x9f071957
}

func (*MessagesAvailableReactionsNotModified) ImplementsMessagesAvailableReactions() {}

type MessagesChats interface {
	tl.Object
	ImplementsMessagesChats()
}

// List of chats with auxiliary data.
type MessagesChatsObj struct {
	Chats []Chat
}

func (*MessagesChatsObj) CRC() uint32 {
	return 0x64ff9fd5
}

func (*MessagesChatsObj) ImplementsMessagesChats() {}

// Partial list of chats, more would have to be fetched with [pagination](https://core.telegram.org/api/offsets)
type MessagesChatsSlice struct {
	Count int32
	Chats []Chat
}

func (*MessagesChatsSlice) CRC() uint32 {
	return 0x9cd81144
}

func (*MessagesChatsSlice) ImplementsMessagesChats() {}

type MessagesDhConfig interface {
	tl.Object
	ImplementsMessagesDhConfig()
}

// New set of configuring parameters.
type MessagesDhConfigObj struct {
	G       int32
	P       []byte
	Version int32
	Random  []byte
}

func (*MessagesDhConfigObj) CRC() uint32 {
	return 0x2c221edd
}

func (*MessagesDhConfigObj) ImplementsMessagesDhConfig() {}

// Configuring parameters did not change.
type MessagesDhConfigNotModified struct {
	Random []byte
}

func (*MessagesDhConfigNotModified) CRC() uint32 {
	return 0xc0e24635
}

func (*MessagesDhConfigNotModified) ImplementsMessagesDhConfig() {}

type MessagesDialogs interface {
	tl.Object
	ImplementsMessagesDialogs()
}

// Full list of chats with messages and auxiliary data.
type MessagesDialogsObj struct {
	Dialogs  []Dialog
	Messages []Message
	Chats    []Chat
	Users    []User
}

func (*MessagesDialogsObj) CRC() uint32 {
	return 0x15ba6c40
}

func (*MessagesDialogsObj) ImplementsMessagesDialogs() {}

// Dialogs haven't changed
type MessagesDialogsNotModified struct {
	Count int32
}

func (*MessagesDialogsNotModified) CRC() uint32 {
	return 0xf0e3e596
}

func (*MessagesDialogsNotModified) ImplementsMessagesDialogs() {}

// Incomplete list of dialogs with messages and auxiliary data.
type MessagesDialogsSlice struct {
	Count    int32
	Dialogs  []Dialog
	Messages []Message
	Chats    []Chat
	Users    []User
}

func (*MessagesDialogsSlice) CRC() uint32 {
	return 0x71e094f3
}

func (*MessagesDialogsSlice) ImplementsMessagesDialogs() {}

type MessagesEmojiGroups interface {
	tl.Object
	ImplementsMessagesEmojiGroups()
}

// Represents a list of [emoji categories](https://core.telegram.org/api/custom-emoji#emoji-categories).
type MessagesEmojiGroupsObj struct {
	Hash   int32
	Groups []EmojiGroup
}

func (*MessagesEmojiGroupsObj) CRC() uint32 {
	return 0x881fb94b
}

func (*MessagesEmojiGroupsObj) ImplementsMessagesEmojiGroups() {}

// The list of [emoji categories](https://core.telegram.org/api/custom-emoji#emoji-categories) hasn't changed.
type MessagesEmojiGroupsNotModified struct{}

func (*MessagesEmojiGroupsNotModified) CRC() uint32 {
	return 0x6fb4ad87
}

func (*MessagesEmojiGroupsNotModified) ImplementsMessagesEmojiGroups() {}

type MessagesExportedChatInvite interface {
	tl.Object
	ImplementsMessagesExportedChatInvite()
}

// Info about a chat invite
type MessagesExportedChatInviteObj struct {
	Invite ExportedChatInvite
	Users  []User
}

func (*MessagesExportedChatInviteObj) CRC() uint32 {
	return 0x1871be50
}

func (*MessagesExportedChatInviteObj) ImplementsMessagesExportedChatInvite() {}

// The specified chat invite was replaced with another one
type MessagesExportedChatInviteReplaced struct {
	Invite    ExportedChatInvite
	NewInvite ExportedChatInvite
	Users     []User
}

func (*MessagesExportedChatInviteReplaced) CRC() uint32 {
	return 0x222600ef
}

func (*MessagesExportedChatInviteReplaced) ImplementsMessagesExportedChatInvite() {}

type MessagesFavedStickers interface {
	tl.Object
	ImplementsMessagesFavedStickers()
}

// Favorited stickers
type MessagesFavedStickersObj struct {
	Hash     int64
	Packs    []*StickerPack
	Stickers []Document
}

func (*MessagesFavedStickersObj) CRC() uint32 {
	return 0x2cb51097
}

func (*MessagesFavedStickersObj) ImplementsMessagesFavedStickers() {}

// No new favorited stickers were found
type MessagesFavedStickersNotModified struct{}

func (*MessagesFavedStickersNotModified) CRC() uint32 {
	return 0x9e8fa6d3
}

func (*MessagesFavedStickersNotModified) ImplementsMessagesFavedStickers() {}

type MessagesFeaturedStickers interface {
	tl.Object
	ImplementsMessagesFeaturedStickers()
}

// Featured stickersets
type MessagesFeaturedStickersObj struct {
	Premium bool `tl:"flag:0,encoded_in_bitflags"`
	Hash    int64
	Count   int32
	Sets    []StickerSetCovered
	Unread  []int64
}

func (*MessagesFeaturedStickersObj) CRC() uint32 {
	return 0xbe382906
}

func (*MessagesFeaturedStickersObj) FlagIndex() int {
	return 0
}

func (*MessagesFeaturedStickersObj) ImplementsMessagesFeaturedStickers() {}

// Featured stickers haven't changed
type MessagesFeaturedStickersNotModified struct {
	Count int32
}

func (*MessagesFeaturedStickersNotModified) CRC() uint32 {
	return 0xc6dc0c66
}

func (*MessagesFeaturedStickersNotModified) ImplementsMessagesFeaturedStickers() {}

type MessagesFoundStickerSets interface {
	tl.Object
	ImplementsMessagesFoundStickerSets()
}

// Found stickersets
type MessagesFoundStickerSetsObj struct {
	Hash int64
	Sets []StickerSetCovered
}

func (*MessagesFoundStickerSetsObj) CRC() uint32 {
	return 0x8af09dd2
}

func (*MessagesFoundStickerSetsObj) ImplementsMessagesFoundStickerSets() {}

// No further results were found
type MessagesFoundStickerSetsNotModified struct{}

func (*MessagesFoundStickerSetsNotModified) CRC() uint32 {
	return 0xd54b65d
}

func (*MessagesFoundStickerSetsNotModified) ImplementsMessagesFoundStickerSets() {}

type MessagesMessages interface {
	tl.Object
	ImplementsMessagesMessages()
}

// Channel messages
type MessagesChannelMessages struct {
	Inexact        bool `tl:"flag:1,encoded_in_bitflags"`
	Pts            int32
	Count          int32
	OffsetIDOffset int32 `tl:"flag:2"`
	Messages       []Message
	Topics         []ForumTopic
	Chats          []Chat
	Users          []User
}

func (*MessagesChannelMessages) CRC() uint32 {
	return 0xc776ba4e
}

func (*MessagesChannelMessages) FlagIndex() int {
	return 0
}

func (*MessagesChannelMessages) ImplementsMessagesMessages() {}

// Full list of messages with auxiliary data.
type MessagesMessagesObj struct {
	Messages []Message
	Chats    []Chat
	Users    []User
}

func (*MessagesMessagesObj) CRC() uint32 {
	return 0x8c718e87
}

func (*MessagesMessagesObj) ImplementsMessagesMessages() {}

// No new messages matching the query were found
type MessagesMessagesNotModified struct {
	Count int32
}

func (*MessagesMessagesNotModified) CRC() uint32 {
	return 0x74535f21
}

func (*MessagesMessagesNotModified) ImplementsMessagesMessages() {}

// Incomplete list of messages and auxiliary data.
type MessagesMessagesSlice struct {
	Inexact        bool `tl:"flag:1,encoded_in_bitflags"`
	Count          int32
	NextRate       int32 `tl:"flag:0"`
	OffsetIDOffset int32 `tl:"flag:2"`
	Messages       []Message
	Chats          []Chat
	Users          []User
}

func (*MessagesMessagesSlice) CRC() uint32 {
	return 0x3a54685e
}

func (*MessagesMessagesSlice) FlagIndex() int {
	return 0
}

func (*MessagesMessagesSlice) ImplementsMessagesMessages() {}

type MessagesQuickReplies interface {
	tl.Object
	ImplementsMessagesQuickReplies()
}
type MessagesQuickRepliesObj struct {
	QuickReplies []*QuickReply
	Messages     []Message
	Chats        []Chat
	Users        []User
}

func (*MessagesQuickRepliesObj) CRC() uint32 {
	return 0xc68d6695
}

func (*MessagesQuickRepliesObj) ImplementsMessagesQuickReplies() {}

type MessagesQuickRepliesNotModified struct{}

func (*MessagesQuickRepliesNotModified) CRC() uint32 {
	return 0x5f91eb5b
}

func (*MessagesQuickRepliesNotModified) ImplementsMessagesQuickReplies() {}

type MessagesReactions interface {
	tl.Object
	ImplementsMessagesReactions()
}

// List of [message reactions](https://core.telegram.org/api/reactions)
type MessagesReactionsObj struct {
	Hash      int64
	Reactions []Reaction
}

func (*MessagesReactionsObj) CRC() uint32 {
	return 0xeafdf716
}

func (*MessagesReactionsObj) ImplementsMessagesReactions() {}

// The server-side list of [message reactions](https://core.telegram.org/api/reactions) hasn't changed
type MessagesReactionsNotModified struct{}

func (*MessagesReactionsNotModified) CRC() uint32 {
	return 0xb06fdbdf
}

func (*MessagesReactionsNotModified) ImplementsMessagesReactions() {}

type MessagesRecentStickers interface {
	tl.Object
	ImplementsMessagesRecentStickers()
}

// Recently used stickers
type MessagesRecentStickersObj struct {
	Hash     int64
	Packs    []*StickerPack
	Stickers []Document
	Dates    []int32
}

func (*MessagesRecentStickersObj) CRC() uint32 {
	return 0x88d37c56
}

func (*MessagesRecentStickersObj) ImplementsMessagesRecentStickers() {}

// No new recent sticker was found
type MessagesRecentStickersNotModified struct{}

func (*MessagesRecentStickersNotModified) CRC() uint32 {
	return 0xb17f890
}

func (*MessagesRecentStickersNotModified) ImplementsMessagesRecentStickers() {}

type MessagesSavedDialogs interface {
	tl.Object
	ImplementsMessagesSavedDialogs()
}

// Represents some [saved message dialogs Â»](https://core.telegram.org/api/saved-messages).
type MessagesSavedDialogsObj struct {
	Dialogs  []*SavedDialog
	Messages []Message
	Chats    []Chat
	Users    []User
}

func (*MessagesSavedDialogsObj) CRC() uint32 {
	return 0xf83ae221
}

func (*MessagesSavedDialogsObj) ImplementsMessagesSavedDialogs() {}

// The saved dialogs haven't changed
type MessagesSavedDialogsNotModified struct {
	Count int32
}

func (*MessagesSavedDialogsNotModified) CRC() uint32 {
	return 0xc01f6fe8
}

func (*MessagesSavedDialogsNotModified) ImplementsMessagesSavedDialogs() {}

// Incomplete list of [saved message dialogs Â»](https://core.telegram.org/api/saved-messages) with messages and auxiliary data.
type MessagesSavedDialogsSlice struct {
	Count    int32
	Dialogs  []*SavedDialog
	Messages []Message
	Chats    []Chat
	Users    []User
}

func (*MessagesSavedDialogsSlice) CRC() uint32 {
	return 0x44ba9dd9
}

func (*MessagesSavedDialogsSlice) ImplementsMessagesSavedDialogs() {}

type MessagesSavedGifs interface {
	tl.Object
	ImplementsMessagesSavedGifs()
}

// Saved gifs
type MessagesSavedGifsObj struct {
	Hash int64
	Gifs []Document
}

func (*MessagesSavedGifsObj) CRC() uint32 {
	return 0x84a02a0d
}

func (*MessagesSavedGifsObj) ImplementsMessagesSavedGifs() {}

// No new saved gifs were found
type MessagesSavedGifsNotModified struct{}

func (*MessagesSavedGifsNotModified) CRC() uint32 {
	return 0xe8025ca2
}

func (*MessagesSavedGifsNotModified) ImplementsMessagesSavedGifs() {}

type MessagesSavedReactionTags interface {
	tl.Object
	ImplementsMessagesSavedReactionTags()
}
type MessagesSavedReactionTagsObj struct {
	Tags []*SavedReactionTag
	Hash int64
}

func (*MessagesSavedReactionTagsObj) CRC() uint32 {
	return 0x3259950a
}

func (*MessagesSavedReactionTagsObj) ImplementsMessagesSavedReactionTags() {}

type MessagesSavedReactionTagsNotModified struct{}

func (*MessagesSavedReactionTagsNotModified) CRC() uint32 {
	return 0x889b59ef
}

func (*MessagesSavedReactionTagsNotModified) ImplementsMessagesSavedReactionTags() {}

type MessagesSentEncryptedMessage interface {
	tl.Object
	ImplementsMessagesSentEncryptedMessage()
}

// Message with a file enclosure sent to a protected chat
type MessagesSentEncryptedFile struct {
	Date int32
	File EncryptedFile
}

func (*MessagesSentEncryptedFile) CRC() uint32 {
	return 0x9493ff32
}

func (*MessagesSentEncryptedFile) ImplementsMessagesSentEncryptedMessage() {}

// Message without file attachments sent to an encrypted file.
type MessagesSentEncryptedMessageObj struct {
	Date int32
}

func (*MessagesSentEncryptedMessageObj) CRC() uint32 {
	return 0x560f8935
}

func (*MessagesSentEncryptedMessageObj) ImplementsMessagesSentEncryptedMessage() {}

type MessagesSponsoredMessages interface {
	tl.Object
	ImplementsMessagesSponsoredMessages()
}

// A set of sponsored messages associated to a channel
type MessagesSponsoredMessagesObj struct {
	PostsBetween int32 `tl:"flag:0"`
	Messages     []*SponsoredMessage
	Chats        []Chat
	Users        []User
}

func (*MessagesSponsoredMessagesObj) CRC() uint32 {
	return 0xc9ee1d87
}

func (*MessagesSponsoredMessagesObj) FlagIndex() int {
	return 0
}

func (*MessagesSponsoredMessagesObj) ImplementsMessagesSponsoredMessages() {}

// No sponsored messages are available.
type MessagesSponsoredMessagesEmpty struct{}

func (*MessagesSponsoredMessagesEmpty) CRC() uint32 {
	return 0x1839490f
}

func (*MessagesSponsoredMessagesEmpty) ImplementsMessagesSponsoredMessages() {}

type MessagesStickerSet interface {
	tl.Object
	ImplementsMessagesStickerSet()
}

// Stickerset and stickers inside it
type MessagesStickerSetObj struct {
	Set       *StickerSet
	Packs     []*StickerPack
	Keywords  []*StickerKeyword
	Documents []Document
}

func (*MessagesStickerSetObj) CRC() uint32 {
	return 0x6e153f16
}

func (*MessagesStickerSetObj) ImplementsMessagesStickerSet() {}

// The stickerset hasn't changed
type MessagesStickerSetNotModified struct{}

func (*MessagesStickerSetNotModified) CRC() uint32 {
	return 0xd3f924eb
}

func (*MessagesStickerSetNotModified) ImplementsMessagesStickerSet() {}

type MessagesStickerSetInstallResult interface {
	tl.Object
	ImplementsMessagesStickerSetInstallResult()
}

// The stickerset was installed, but since there are too many stickersets some were archived
type MessagesStickerSetInstallResultArchive struct {
	Sets []StickerSetCovered
}

func (*MessagesStickerSetInstallResultArchive) CRC() uint32 {
	return 0x35e410a8
}

func (*MessagesStickerSetInstallResultArchive) ImplementsMessagesStickerSetInstallResult() {}

// The stickerset was installed successfully
type MessagesStickerSetInstallResultSuccess struct{}

func (*MessagesStickerSetInstallResultSuccess) CRC() uint32 {
	return 0x38641628
}

func (*MessagesStickerSetInstallResultSuccess) ImplementsMessagesStickerSetInstallResult() {}

type MessagesStickers interface {
	tl.Object
	ImplementsMessagesStickers()
}

// Found stickers
type MessagesStickersObj struct {
	Hash     int64
	Stickers []Document
}

func (*MessagesStickersObj) CRC() uint32 {
	return 0x30a6ec7e
}

func (*MessagesStickersObj) ImplementsMessagesStickers() {}

// No new stickers were found for the given query
type MessagesStickersNotModified struct{}

func (*MessagesStickersNotModified) CRC() uint32 {
	return 0xf1749a22
}

func (*MessagesStickersNotModified) ImplementsMessagesStickers() {}

type PaymentsGiveawayInfo interface {
	tl.Object
	ImplementsPaymentsGiveawayInfo()
}

// Contains info about an ongoing [giveaway](https://core.telegram.org/api/giveaways).
type PaymentsGiveawayInfoObj struct {
	Participating         bool `tl:"flag:0,encoded_in_bitflags"`
	PreparingResults      bool `tl:"flag:3,encoded_in_bitflags"`
	StartDate             int32
	JoinedTooEarlyDate    int32  `tl:"flag:1"`
	AdminDisallowedChatID int64  `tl:"flag:2"`
	DisallowedCountry     string `tl:"flag:4"`
}

func (*PaymentsGiveawayInfoObj) CRC() uint32 {
	return 0x4367daa0
}

func (*PaymentsGiveawayInfoObj) FlagIndex() int {
	return 0
}

func (*PaymentsGiveawayInfoObj) ImplementsPaymentsGiveawayInfo() {}

// A [giveaway](https://core.telegram.org/api/giveaways) has ended.
type PaymentsGiveawayInfoResults struct {
	Winner         bool `tl:"flag:0,encoded_in_bitflags"`
	Refunded       bool `tl:"flag:1,encoded_in_bitflags"`
	StartDate      int32
	GiftCodeSlug   string `tl:"flag:0"`
	FinishDate     int32
	WinnersCount   int32
	ActivatedCount int32
}

func (*PaymentsGiveawayInfoResults) CRC() uint32 {
	return 0xcd5570
}

func (*PaymentsGiveawayInfoResults) FlagIndex() int {
	return 0
}

func (*PaymentsGiveawayInfoResults) ImplementsPaymentsGiveawayInfo() {}

type PaymentsPaymentForm interface {
	tl.Object
	ImplementsPaymentsPaymentForm()
}

// Payment form
type PaymentsPaymentFormObj struct {
	CanSaveCredentials bool `tl:"flag:2,encoded_in_bitflags"`
	PasswordMissing    bool `tl:"flag:3,encoded_in_bitflags"`
	FormID             int64
	BotID              int64
	Title              string
	Description        string
	Photo              WebDocument `tl:"flag:5"`
	Invoice            *Invoice
	ProviderID         int64
	URL                string
	NativeProvider     string                         `tl:"flag:4"`
	NativeParams       *DataJson                      `tl:"flag:4"`
	AdditionalMethods  []*PaymentFormMethod           `tl:"flag:6"`
	SavedInfo          *PaymentRequestedInfo          `tl:"flag:0"`
	SavedCredentials   []*PaymentSavedCredentialsCard `tl:"flag:1"`
	Users              []User
}

func (*PaymentsPaymentFormObj) CRC() uint32 {
	return 0xa0058751
}

func (*PaymentsPaymentFormObj) FlagIndex() int {
	return 0
}

func (*PaymentsPaymentFormObj) ImplementsPaymentsPaymentForm() {}

type PaymentsPaymentFormStars struct {
	FormID      int64
	BotID       int64
	Title       string
	Description string
	Photo       WebDocument `tl:"flag:5"`
	Invoice     *Invoice
	Users       []User
}

func (*PaymentsPaymentFormStars) CRC() uint32 {
	return 0x7bf6b15c
}

func (*PaymentsPaymentFormStars) FlagIndex() int {
	return 0
}

func (*PaymentsPaymentFormStars) ImplementsPaymentsPaymentForm() {}

type PaymentsPaymentReceipt interface {
	tl.Object
	ImplementsPaymentsPaymentReceipt()
}

// Receipt
type PaymentsPaymentReceiptObj struct {
	Date             int32
	BotID            int64
	ProviderID       int64
	Title            string
	Description      string
	Photo            WebDocument `tl:"flag:2"`
	Invoice          *Invoice
	Info             *PaymentRequestedInfo `tl:"flag:0"`
	Shipping         *ShippingOption       `tl:"flag:1"`
	TipAmount        int64                 `tl:"flag:3"`
	Currency         string
	TotalAmount      int64
	CredentialsTitle string
	Users            []User
}

func (*PaymentsPaymentReceiptObj) CRC() uint32 {
	return 0x70c4fe03
}

func (*PaymentsPaymentReceiptObj) FlagIndex() int {
	return 0
}

func (*PaymentsPaymentReceiptObj) ImplementsPaymentsPaymentReceipt() {}

type PaymentsPaymentReceiptStars struct {
	Date          int32
	BotID         int64
	Title         string
	Description   string
	Photo         WebDocument `tl:"flag:2"`
	Invoice       *Invoice
	Currency      string
	TotalAmount   int64
	TransactionID string
	Users         []User
}

func (*PaymentsPaymentReceiptStars) CRC() uint32 {
	return 0xdabbf83a
}

func (*PaymentsPaymentReceiptStars) FlagIndex() int {
	return 0
}

func (*PaymentsPaymentReceiptStars) ImplementsPaymentsPaymentReceipt() {}

type PaymentsPaymentResult interface {
	tl.Object
	ImplementsPaymentsPaymentResult()
}

// Payment result
type PaymentsPaymentResultObj struct {
	Updates Updates
}

func (*PaymentsPaymentResultObj) CRC() uint32 {
	return 0x4e5f810d
}

func (*PaymentsPaymentResultObj) ImplementsPaymentsPaymentResult() {}

// Payment was not successful, additional verification is needed
type PaymentsPaymentVerificationNeeded struct {
	URL string
}

func (*PaymentsPaymentVerificationNeeded) CRC() uint32 {
	return 0xd8411139
}

func (*PaymentsPaymentVerificationNeeded) ImplementsPaymentsPaymentResult() {}

type PhotosPhotos interface {
	tl.Object
	ImplementsPhotosPhotos()
}

// Full list of photos with auxiliary data.
type PhotosPhotosObj struct {
	Photos []Photo
	Users  []User
}

func (*PhotosPhotosObj) CRC() uint32 {
	return 0x8dca6aa5
}

func (*PhotosPhotosObj) ImplementsPhotosPhotos() {}

// Incomplete list of photos with auxiliary data.
type PhotosPhotosSlice struct {
	Count  int32
	Photos []Photo
	Users  []User
}

func (*PhotosPhotosSlice) CRC() uint32 {
	return 0x15051f54
}

func (*PhotosPhotosSlice) ImplementsPhotosPhotos() {}

type StoriesAllStories interface {
	tl.Object
	ImplementsStoriesAllStories()
}

// Full list of active (or active and hidden) [stories](https://core.telegram.org/api/stories#watching-stories).
type StoriesAllStoriesObj struct {
	HasMore     bool `tl:"flag:0,encoded_in_bitflags"`
	Count       int32
	State       string
	PeerStories []*PeerStories
	Chats       []Chat
	Users       []User
	StealthMode *StoriesStealthMode
}

func (*StoriesAllStoriesObj) CRC() uint32 {
	return 0x6efc5e81
}

func (*StoriesAllStoriesObj) FlagIndex() int {
	return 0
}

func (*StoriesAllStoriesObj) ImplementsStoriesAllStories() {}

// The list of active (or active and hidden) [stories](https://core.telegram.org/api/stories#watching-stories) has not changed.
type StoriesAllStoriesNotModified struct {
	State       string
	StealthMode *StoriesStealthMode
}

func (*StoriesAllStoriesNotModified) CRC() uint32 {
	return 0x1158fe3e
}

func (*StoriesAllStoriesNotModified) ImplementsStoriesAllStories() {}

type UpdatesChannelDifference interface {
	tl.Object
	ImplementsUpdatesChannelDifference()
}

// The new updates
type UpdatesChannelDifferenceObj struct {
	Final        bool `tl:"flag:0,encoded_in_bitflags"`
	Pts          int32
	Timeout      int32 `tl:"flag:1"`
	NewMessages  []Message
	OtherUpdates []Update
	Chats        []Chat
	Users        []User
}

func (*UpdatesChannelDifferenceObj) CRC() uint32 {
	return 0x2064674e
}

func (*UpdatesChannelDifferenceObj) FlagIndex() int {
	return 0
}

func (*UpdatesChannelDifferenceObj) ImplementsUpdatesChannelDifference() {}

// There are no new updates
type UpdatesChannelDifferenceEmpty struct {
	Final   bool `tl:"flag:0,encoded_in_bitflags"`
	Pts     int32
	Timeout int32 `tl:"flag:1"`
}

func (*UpdatesChannelDifferenceEmpty) CRC() uint32 {
	return 0x3e11affb
}

func (*UpdatesChannelDifferenceEmpty) FlagIndex() int {
	return 0
}

func (*UpdatesChannelDifferenceEmpty) ImplementsUpdatesChannelDifference() {}

// The provided `pts + limit &lt; remote pts`. Simply, there are too many updates to be fetched (more than `limit`), the client has to resolve the update gap in one of the following ways (assuming the existence of a persistent database to locally store messages):
type UpdatesChannelDifferenceTooLong struct {
	Final    bool  `tl:"flag:0,encoded_in_bitflags"`
	Timeout  int32 `tl:"flag:1"`
	Dialog   Dialog
	Messages []Message
	Chats    []Chat
	Users    []User
}

func (*UpdatesChannelDifferenceTooLong) CRC() uint32 {
	return 0xa4bcc6fe
}

func (*UpdatesChannelDifferenceTooLong) FlagIndex() int {
	return 0
}

func (*UpdatesChannelDifferenceTooLong) ImplementsUpdatesChannelDifference() {}

type UpdatesDifference interface {
	tl.Object
	ImplementsUpdatesDifference()
}

// Full list of occurred events.
type UpdatesDifferenceObj struct {
	NewMessages          []Message
	NewEncryptedMessages []EncryptedMessage
	OtherUpdates         []Update
	Chats                []Chat
	Users                []User
	State                *UpdatesState
}

func (*UpdatesDifferenceObj) CRC() uint32 {
	return 0xf49ca0
}

func (*UpdatesDifferenceObj) ImplementsUpdatesDifference() {}

// No events.
type UpdatesDifferenceEmpty struct {
	Date int32
	Seq  int32
}

func (*UpdatesDifferenceEmpty) CRC() uint32 {
	return 0x5d75a138
}

func (*UpdatesDifferenceEmpty) ImplementsUpdatesDifference() {}

// Incomplete list of occurred events.
type UpdatesDifferenceSlice struct {
	NewMessages          []Message
	NewEncryptedMessages []EncryptedMessage
	OtherUpdates         []Update
	Chats                []Chat
	Users                []User
	IntermediateState    *UpdatesState
}

func (*UpdatesDifferenceSlice) CRC() uint32 {
	return 0xa8fb1981
}

func (*UpdatesDifferenceSlice) ImplementsUpdatesDifference() {}

// The difference is [too long](https://core.telegram.org/api/updates#recovering-gaps), and the specified state must be used to refetch updates.
type UpdatesDifferenceTooLong struct {
	Pts int32
}

func (*UpdatesDifferenceTooLong) CRC() uint32 {
	return 0x4afe8f6d
}

func (*UpdatesDifferenceTooLong) ImplementsUpdatesDifference() {}

type UploadCdnFile interface {
	tl.Object
	ImplementsUploadCdnFile()
}

// Represent a chunk of a [CDN](https://core.telegram.org/cdn) file.
type UploadCdnFileObj struct {
	Bytes []byte
}

func (*UploadCdnFileObj) CRC() uint32 {
	return 0xa99fca4f
}

func (*UploadCdnFileObj) ImplementsUploadCdnFile() {}

// The file was cleared from the temporary RAM cache of the [CDN](https://core.telegram.org/cdn) and has to be re-uploaded.
type UploadCdnFileReuploadNeeded struct {
	RequestToken []byte
}

func (*UploadCdnFileReuploadNeeded) CRC() uint32 {
	return 0xeea8e46e
}

func (*UploadCdnFileReuploadNeeded) ImplementsUploadCdnFile() {}

type UploadFile interface {
	tl.Object
	ImplementsUploadFile()
}

// File content.
type UploadFileObj struct {
	Type  StorageFileType
	Mtime int32
	Bytes []byte
}

func (*UploadFileObj) CRC() uint32 {
	return 0x96a18d5
}

func (*UploadFileObj) ImplementsUploadFile() {}

// The file must be downloaded from a [CDN DC](https://core.telegram.org/cdn).
type UploadFileCdnRedirect struct {
	DcID          int32
	FileToken     []byte
	EncryptionKey []byte
	EncryptionIv  []byte
	FileHashes    []*FileHash
}

func (*UploadFileCdnRedirect) CRC() uint32 {
	return 0xf18cda44
}

func (*UploadFileCdnRedirect) ImplementsUploadFile() {}
